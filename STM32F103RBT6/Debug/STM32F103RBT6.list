
STM32F103RBT6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003a50  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000078  08003b5c  08003b5c  00013b5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003bd4  08003bd4  00020090  2**0
                  CONTENTS
  4 .ARM          00000000  08003bd4  08003bd4  00020090  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003bd4  08003bd4  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003bd4  08003bd4  00013bd4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003bd8  08003bd8  00013bd8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  08003bdc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000184  20000090  08003c6c  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000214  08003c6c  00020214  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c8c5  00000000  00000000  000200b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001f88  00000000  00000000  0002c97e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ea0  00000000  00000000  0002e908  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000db0  00000000  00000000  0002f7a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001865f  00000000  00000000  00030558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000fc35  00000000  00000000  00048bb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008bad1  00000000  00000000  000587ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e42bd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004030  00000000  00000000  000e4310  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000090 	.word	0x20000090
 8000128:	00000000 	.word	0x00000000
 800012c:	08003b44 	.word	0x08003b44

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000094 	.word	0x20000094
 8000148:	08003b44 	.word	0x08003b44

0800014c <FaBoLCD_PCF8574>:
	HAL_I2C_Master_Transmit(&hi2c1, (uint16_t)66, (uint8_t *) initData, 1, 0xffff);
	HAL_Delay(100);
}

void FaBoLCD_PCF8574(uint8_t addr)
{
 800014c:	b580      	push	{r7, lr}
 800014e:	b086      	sub	sp, #24
 8000150:	af02      	add	r7, sp, #8
 8000152:	4603      	mov	r3, r0
 8000154:	71fb      	strb	r3, [r7, #7]
  _i2caddr = addr;
 8000156:	4a10      	ldr	r2, [pc, #64]	; (8000198 <FaBoLCD_PCF8574+0x4c>)
 8000158:	79fb      	ldrb	r3, [r7, #7]
 800015a:	7013      	strb	r3, [r2, #0]
  _backlight = BL;
 800015c:	4b0f      	ldr	r3, [pc, #60]	; (800019c <FaBoLCD_PCF8574+0x50>)
 800015e:	2280      	movs	r2, #128	; 0x80
 8000160:	701a      	strb	r2, [r3, #0]
  uint8_t initData[1] = {0x80};
 8000162:	2380      	movs	r3, #128	; 0x80
 8000164:	733b      	strb	r3, [r7, #12]
  HAL_I2C_Master_Transmit(&hi2c1, (uint16_t)0x42, (uint8_t *) initData, 1, 0xffff);
 8000166:	f107 020c 	add.w	r2, r7, #12
 800016a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800016e:	9300      	str	r3, [sp, #0]
 8000170:	2301      	movs	r3, #1
 8000172:	2142      	movs	r1, #66	; 0x42
 8000174:	480a      	ldr	r0, [pc, #40]	; (80001a0 <FaBoLCD_PCF8574+0x54>)
 8000176:	f001 fd33 	bl	8001be0 <HAL_I2C_Master_Transmit>
  HAL_Delay(100);
 800017a:	2064      	movs	r0, #100	; 0x64
 800017c:	f001 f904 	bl	8001388 <HAL_Delay>
  init();
 8000180:	f000 f810 	bl	80001a4 <init>
  begin(LCD_COLUMN, LCD_LINE, LCD_5x8DOTS);
 8000184:	2200      	movs	r2, #0
 8000186:	2102      	movs	r1, #2
 8000188:	2010      	movs	r0, #16
 800018a:	f000 f817 	bl	80001bc <begin>
}
 800018e:	bf00      	nop
 8000190:	3710      	adds	r7, #16
 8000192:	46bd      	mov	sp, r7
 8000194:	bd80      	pop	{r7, pc}
 8000196:	bf00      	nop
 8000198:	200000b4 	.word	0x200000b4
 800019c:	200000b5 	.word	0x200000b5
 80001a0:	20000110 	.word	0x20000110

080001a4 <init>:

/**
 @brief init
*/
void init()
{
 80001a4:	b480      	push	{r7}
 80001a6:	af00      	add	r7, sp, #0
  _displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
 80001a8:	4b03      	ldr	r3, [pc, #12]	; (80001b8 <init+0x14>)
 80001aa:	2200      	movs	r2, #0
 80001ac:	701a      	strb	r2, [r3, #0]
}
 80001ae:	bf00      	nop
 80001b0:	46bd      	mov	sp, r7
 80001b2:	bc80      	pop	{r7}
 80001b4:	4770      	bx	lr
 80001b6:	bf00      	nop
 80001b8:	200000ac 	.word	0x200000ac

080001bc <begin>:

/**
 @brief brgin
*/
void begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
 80001bc:	b580      	push	{r7, lr}
 80001be:	b082      	sub	sp, #8
 80001c0:	af00      	add	r7, sp, #0
 80001c2:	4603      	mov	r3, r0
 80001c4:	71fb      	strb	r3, [r7, #7]
 80001c6:	460b      	mov	r3, r1
 80001c8:	71bb      	strb	r3, [r7, #6]
 80001ca:	4613      	mov	r3, r2
 80001cc:	717b      	strb	r3, [r7, #5]
  if (lines > 1) {
 80001ce:	79bb      	ldrb	r3, [r7, #6]
 80001d0:	2b01      	cmp	r3, #1
 80001d2:	d906      	bls.n	80001e2 <begin+0x26>
	_displayfunction |= LCD_2LINE;
 80001d4:	4b2b      	ldr	r3, [pc, #172]	; (8000284 <begin+0xc8>)
 80001d6:	781b      	ldrb	r3, [r3, #0]
 80001d8:	f043 0308 	orr.w	r3, r3, #8
 80001dc:	b2da      	uxtb	r2, r3
 80001de:	4b29      	ldr	r3, [pc, #164]	; (8000284 <begin+0xc8>)
 80001e0:	701a      	strb	r2, [r3, #0]
  }
  _numlines = lines;
 80001e2:	4a29      	ldr	r2, [pc, #164]	; (8000288 <begin+0xcc>)
 80001e4:	79bb      	ldrb	r3, [r7, #6]
 80001e6:	7013      	strb	r3, [r2, #0]

  setRowOffsets(0x00, 0x40, 0x00 + cols, 0x40 + cols);
 80001e8:	79fa      	ldrb	r2, [r7, #7]
 80001ea:	79fb      	ldrb	r3, [r7, #7]
 80001ec:	3340      	adds	r3, #64	; 0x40
 80001ee:	2140      	movs	r1, #64	; 0x40
 80001f0:	2000      	movs	r0, #0
 80001f2:	f000 f84f 	bl	8000294 <setRowOffsets>

  // for some 1 line displays you can select a 10 pixel high font
  if ((dotsize != LCD_5x8DOTS) && (lines == 1)) {
 80001f6:	797b      	ldrb	r3, [r7, #5]
 80001f8:	2b00      	cmp	r3, #0
 80001fa:	d009      	beq.n	8000210 <begin+0x54>
 80001fc:	79bb      	ldrb	r3, [r7, #6]
 80001fe:	2b01      	cmp	r3, #1
 8000200:	d106      	bne.n	8000210 <begin+0x54>
	_displayfunction |= LCD_5x10DOTS;
 8000202:	4b20      	ldr	r3, [pc, #128]	; (8000284 <begin+0xc8>)
 8000204:	781b      	ldrb	r3, [r3, #0]
 8000206:	f043 0304 	orr.w	r3, r3, #4
 800020a:	b2da      	uxtb	r2, r3
 800020c:	4b1d      	ldr	r3, [pc, #116]	; (8000284 <begin+0xc8>)
 800020e:	701a      	strb	r2, [r3, #0]
  }

  // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  // according to datasheet, we need at least 40ms after power rises above 2.7V
  // before sending commands. Arduino can turn on way before 4.5V so we'll wait 50
  HAL_Delay(50);
 8000210:	2032      	movs	r0, #50	; 0x32
 8000212:	f001 f8b9 	bl	8001388 <HAL_Delay>
  // Now we pull both RS and R/W low to begin commands
  writeI2c(0x00);
 8000216:	2000      	movs	r0, #0
 8000218:	f000 f922 	bl	8000460 <writeI2c>

  // this is according to the hitachi HD44780 datasheet
  // figure 24, pg 46

  // we start in 8bit mode, try to set 4 bit mode
  write4bits(DB4|DB5);
 800021c:	2003      	movs	r0, #3
 800021e:	f000 f90e 	bl	800043e <write4bits>
  HAL_Delay(5); // wait min 4.1ms
 8000222:	2005      	movs	r0, #5
 8000224:	f001 f8b0 	bl	8001388 <HAL_Delay>

  // second try
  write4bits(DB4|DB5);
 8000228:	2003      	movs	r0, #3
 800022a:	f000 f908 	bl	800043e <write4bits>
  HAL_Delay(5); // wait min 4.1ms
 800022e:	2005      	movs	r0, #5
 8000230:	f001 f8aa 	bl	8001388 <HAL_Delay>

  // third go!
  write4bits(DB4|DB5);
 8000234:	2003      	movs	r0, #3
 8000236:	f000 f902 	bl	800043e <write4bits>
  HAL_Delay(2);
 800023a:	2002      	movs	r0, #2
 800023c:	f001 f8a4 	bl	8001388 <HAL_Delay>

  // finally, set to 4-bit interface
  write4bits(DB5);
 8000240:	2002      	movs	r0, #2
 8000242:	f000 f8fc 	bl	800043e <write4bits>

  // finally, set # lines, font size, etc.
  command(LCD_FUNCTIONSET | _displayfunction);
 8000246:	4b0f      	ldr	r3, [pc, #60]	; (8000284 <begin+0xc8>)
 8000248:	781b      	ldrb	r3, [r3, #0]
 800024a:	f043 0320 	orr.w	r3, r3, #32
 800024e:	b2db      	uxtb	r3, r3
 8000250:	4618      	mov	r0, r3
 8000252:	f000 f88f 	bl	8000374 <command>

  // turn the display on with no cursor or blinking default
  _displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
 8000256:	4b0d      	ldr	r3, [pc, #52]	; (800028c <begin+0xd0>)
 8000258:	2204      	movs	r2, #4
 800025a:	701a      	strb	r2, [r3, #0]
  display();
 800025c:	f000 f874 	bl	8000348 <display>

  // clear it off
  clear();
 8000260:	f000 f836 	bl	80002d0 <clear>

  // Initialize to default text direction (for romance languages)
  _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
 8000264:	4b0a      	ldr	r3, [pc, #40]	; (8000290 <begin+0xd4>)
 8000266:	2202      	movs	r2, #2
 8000268:	701a      	strb	r2, [r3, #0]
  // set the entry mode
  command(LCD_ENTRYMODESET | _displaymode);
 800026a:	4b09      	ldr	r3, [pc, #36]	; (8000290 <begin+0xd4>)
 800026c:	781b      	ldrb	r3, [r3, #0]
 800026e:	f043 0304 	orr.w	r3, r3, #4
 8000272:	b2db      	uxtb	r3, r3
 8000274:	4618      	mov	r0, r3
 8000276:	f000 f87d 	bl	8000374 <command>

}
 800027a:	bf00      	nop
 800027c:	3708      	adds	r7, #8
 800027e:	46bd      	mov	sp, r7
 8000280:	bd80      	pop	{r7, pc}
 8000282:	bf00      	nop
 8000284:	200000ac 	.word	0x200000ac
 8000288:	200000af 	.word	0x200000af
 800028c:	200000ad 	.word	0x200000ad
 8000290:	200000ae 	.word	0x200000ae

08000294 <setRowOffsets>:

/**
 @brief setRowOffsets
*/
void setRowOffsets(int row0, int row1, int row2, int row3)
{
 8000294:	b480      	push	{r7}
 8000296:	b085      	sub	sp, #20
 8000298:	af00      	add	r7, sp, #0
 800029a:	60f8      	str	r0, [r7, #12]
 800029c:	60b9      	str	r1, [r7, #8]
 800029e:	607a      	str	r2, [r7, #4]
 80002a0:	603b      	str	r3, [r7, #0]
  _row_offsets[0] = row0;
 80002a2:	68fb      	ldr	r3, [r7, #12]
 80002a4:	b2da      	uxtb	r2, r3
 80002a6:	4b09      	ldr	r3, [pc, #36]	; (80002cc <setRowOffsets+0x38>)
 80002a8:	701a      	strb	r2, [r3, #0]
  _row_offsets[1] = row1;
 80002aa:	68bb      	ldr	r3, [r7, #8]
 80002ac:	b2da      	uxtb	r2, r3
 80002ae:	4b07      	ldr	r3, [pc, #28]	; (80002cc <setRowOffsets+0x38>)
 80002b0:	705a      	strb	r2, [r3, #1]
  _row_offsets[2] = row2;
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	b2da      	uxtb	r2, r3
 80002b6:	4b05      	ldr	r3, [pc, #20]	; (80002cc <setRowOffsets+0x38>)
 80002b8:	709a      	strb	r2, [r3, #2]
  _row_offsets[3] = row3;
 80002ba:	683b      	ldr	r3, [r7, #0]
 80002bc:	b2da      	uxtb	r2, r3
 80002be:	4b03      	ldr	r3, [pc, #12]	; (80002cc <setRowOffsets+0x38>)
 80002c0:	70da      	strb	r2, [r3, #3]
}
 80002c2:	bf00      	nop
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr
 80002cc:	200000b0 	.word	0x200000b0

080002d0 <clear>:

/**
 @brief clear
*/
void clear()
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	af00      	add	r7, sp, #0
  command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
 80002d4:	2001      	movs	r0, #1
 80002d6:	f000 f84d 	bl	8000374 <command>
  HAL_Delay(2);  // this command takes a long time!
 80002da:	2002      	movs	r0, #2
 80002dc:	f001 f854 	bl	8001388 <HAL_Delay>
}
 80002e0:	bf00      	nop
 80002e2:	bd80      	pop	{r7, pc}

080002e4 <setCursor>:

/**
 @brief setCursor
*/
void setCursor(uint8_t col, uint8_t row)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b084      	sub	sp, #16
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	4603      	mov	r3, r0
 80002ec:	460a      	mov	r2, r1
 80002ee:	71fb      	strb	r3, [r7, #7]
 80002f0:	4613      	mov	r3, r2
 80002f2:	71bb      	strb	r3, [r7, #6]
  const size_t max_lines = sizeof(_row_offsets) / sizeof(*_row_offsets);
 80002f4:	2304      	movs	r3, #4
 80002f6:	60fb      	str	r3, [r7, #12]
  if ( row >= max_lines ) {
 80002f8:	79bb      	ldrb	r3, [r7, #6]
 80002fa:	68fa      	ldr	r2, [r7, #12]
 80002fc:	429a      	cmp	r2, r3
 80002fe:	d803      	bhi.n	8000308 <setCursor+0x24>
	row = max_lines - 1;    // we count rows starting w/0
 8000300:	68fb      	ldr	r3, [r7, #12]
 8000302:	b2db      	uxtb	r3, r3
 8000304:	3b01      	subs	r3, #1
 8000306:	71bb      	strb	r3, [r7, #6]
  }
  if ( row >= _numlines ) {
 8000308:	4b0d      	ldr	r3, [pc, #52]	; (8000340 <setCursor+0x5c>)
 800030a:	781b      	ldrb	r3, [r3, #0]
 800030c:	79ba      	ldrb	r2, [r7, #6]
 800030e:	429a      	cmp	r2, r3
 8000310:	d303      	bcc.n	800031a <setCursor+0x36>
	row = _numlines - 1;    // we count rows starting w/0
 8000312:	4b0b      	ldr	r3, [pc, #44]	; (8000340 <setCursor+0x5c>)
 8000314:	781b      	ldrb	r3, [r3, #0]
 8000316:	3b01      	subs	r3, #1
 8000318:	71bb      	strb	r3, [r7, #6]
  }

  command(LCD_SETDDRAMADDR | (col + _row_offsets[row]));
 800031a:	79bb      	ldrb	r3, [r7, #6]
 800031c:	4a09      	ldr	r2, [pc, #36]	; (8000344 <setCursor+0x60>)
 800031e:	5cd2      	ldrb	r2, [r2, r3]
 8000320:	79fb      	ldrb	r3, [r7, #7]
 8000322:	4413      	add	r3, r2
 8000324:	b2db      	uxtb	r3, r3
 8000326:	b25b      	sxtb	r3, r3
 8000328:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800032c:	b25b      	sxtb	r3, r3
 800032e:	b2db      	uxtb	r3, r3
 8000330:	4618      	mov	r0, r3
 8000332:	f000 f81f 	bl	8000374 <command>
}
 8000336:	bf00      	nop
 8000338:	3710      	adds	r7, #16
 800033a:	46bd      	mov	sp, r7
 800033c:	bd80      	pop	{r7, pc}
 800033e:	bf00      	nop
 8000340:	200000af 	.word	0x200000af
 8000344:	200000b0 	.word	0x200000b0

08000348 <display>:
}

/**
 @brief Turn the display on (quickly)
*/
void display() {
 8000348:	b580      	push	{r7, lr}
 800034a:	af00      	add	r7, sp, #0
  _displaycontrol |= LCD_DISPLAYON;
 800034c:	4b08      	ldr	r3, [pc, #32]	; (8000370 <display+0x28>)
 800034e:	781b      	ldrb	r3, [r3, #0]
 8000350:	f043 0304 	orr.w	r3, r3, #4
 8000354:	b2da      	uxtb	r2, r3
 8000356:	4b06      	ldr	r3, [pc, #24]	; (8000370 <display+0x28>)
 8000358:	701a      	strb	r2, [r3, #0]
  command(LCD_DISPLAYCONTROL | _displaycontrol);
 800035a:	4b05      	ldr	r3, [pc, #20]	; (8000370 <display+0x28>)
 800035c:	781b      	ldrb	r3, [r3, #0]
 800035e:	f043 0308 	orr.w	r3, r3, #8
 8000362:	b2db      	uxtb	r3, r3
 8000364:	4618      	mov	r0, r3
 8000366:	f000 f805 	bl	8000374 <command>
}
 800036a:	bf00      	nop
 800036c:	bd80      	pop	{r7, pc}
 800036e:	bf00      	nop
 8000370:	200000ad 	.word	0x200000ad

08000374 <command>:
/*********** mid level commands, for sending data/cmds */

/**
 @brief command
*/
inline void command(uint8_t value) {
 8000374:	b580      	push	{r7, lr}
 8000376:	b082      	sub	sp, #8
 8000378:	af00      	add	r7, sp, #0
 800037a:	4603      	mov	r3, r0
 800037c:	71fb      	strb	r3, [r7, #7]
  send(value, 0);
 800037e:	79fb      	ldrb	r3, [r7, #7]
 8000380:	2100      	movs	r1, #0
 8000382:	4618      	mov	r0, r3
 8000384:	f000 f813 	bl	80003ae <send>
}
 8000388:	bf00      	nop
 800038a:	3708      	adds	r7, #8
 800038c:	46bd      	mov	sp, r7
 800038e:	bd80      	pop	{r7, pc}

08000390 <write>:

/**
 @brief write
*/
inline uint8_t write(uint8_t value) {
 8000390:	b580      	push	{r7, lr}
 8000392:	b082      	sub	sp, #8
 8000394:	af00      	add	r7, sp, #0
 8000396:	4603      	mov	r3, r0
 8000398:	71fb      	strb	r3, [r7, #7]
  send(value, RS);
 800039a:	79fb      	ldrb	r3, [r7, #7]
 800039c:	2140      	movs	r1, #64	; 0x40
 800039e:	4618      	mov	r0, r3
 80003a0:	f000 f805 	bl	80003ae <send>
  return 1; // assume sucess
 80003a4:	2301      	movs	r3, #1
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	3708      	adds	r7, #8
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bd80      	pop	{r7, pc}

080003ae <send>:
/************ low level data pushing commands **********/

/**
 @brief write either command or data, 4-bit
*/
void send(uint8_t value, uint8_t mode) {
 80003ae:	b580      	push	{r7, lr}
 80003b0:	b084      	sub	sp, #16
 80003b2:	af00      	add	r7, sp, #0
 80003b4:	4603      	mov	r3, r0
 80003b6:	460a      	mov	r2, r1
 80003b8:	71fb      	strb	r3, [r7, #7]
 80003ba:	4613      	mov	r3, r2
 80003bc:	71bb      	strb	r3, [r7, #6]
  uint8_t Hbit = (value >> 4) & 0x0F;
 80003be:	79fb      	ldrb	r3, [r7, #7]
 80003c0:	091b      	lsrs	r3, r3, #4
 80003c2:	73fb      	strb	r3, [r7, #15]
  uint8_t Lbit = value & 0x0F;
 80003c4:	79fb      	ldrb	r3, [r7, #7]
 80003c6:	f003 030f 	and.w	r3, r3, #15
 80003ca:	73bb      	strb	r3, [r7, #14]
  write4bits(Hbit|mode);
 80003cc:	7bfa      	ldrb	r2, [r7, #15]
 80003ce:	79bb      	ldrb	r3, [r7, #6]
 80003d0:	4313      	orrs	r3, r2
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	4618      	mov	r0, r3
 80003d6:	f000 f832 	bl	800043e <write4bits>
  write4bits(Lbit|mode);
 80003da:	7bba      	ldrb	r2, [r7, #14]
 80003dc:	79bb      	ldrb	r3, [r7, #6]
 80003de:	4313      	orrs	r3, r2
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	4618      	mov	r0, r3
 80003e4:	f000 f82b 	bl	800043e <write4bits>
}
 80003e8:	bf00      	nop
 80003ea:	3710      	adds	r7, #16
 80003ec:	46bd      	mov	sp, r7
 80003ee:	bd80      	pop	{r7, pc}

080003f0 <pulseEnable>:

/**
 @brief pulseEnable
*/
void pulseEnable(uint8_t value) {
 80003f0:	b580      	push	{r7, lr}
 80003f2:	b082      	sub	sp, #8
 80003f4:	af00      	add	r7, sp, #0
 80003f6:	4603      	mov	r3, r0
 80003f8:	71fb      	strb	r3, [r7, #7]
  writeI2c(value & ~EN); // EN LOW
 80003fa:	79fb      	ldrb	r3, [r7, #7]
 80003fc:	f023 0310 	bic.w	r3, r3, #16
 8000400:	b2db      	uxtb	r3, r3
 8000402:	4618      	mov	r0, r3
 8000404:	f000 f82c 	bl	8000460 <writeI2c>
  HAL_Delay(1);
 8000408:	2001      	movs	r0, #1
 800040a:	f000 ffbd 	bl	8001388 <HAL_Delay>
  writeI2c(value|EN);    // EN HIGH
 800040e:	79fb      	ldrb	r3, [r7, #7]
 8000410:	f043 0310 	orr.w	r3, r3, #16
 8000414:	b2db      	uxtb	r3, r3
 8000416:	4618      	mov	r0, r3
 8000418:	f000 f822 	bl	8000460 <writeI2c>
  HAL_Delay(1);  // enable pulse must be >450ns
 800041c:	2001      	movs	r0, #1
 800041e:	f000 ffb3 	bl	8001388 <HAL_Delay>
  writeI2c(value & ~EN); // EN LOW
 8000422:	79fb      	ldrb	r3, [r7, #7]
 8000424:	f023 0310 	bic.w	r3, r3, #16
 8000428:	b2db      	uxtb	r3, r3
 800042a:	4618      	mov	r0, r3
 800042c:	f000 f818 	bl	8000460 <writeI2c>
  HAL_Delay(1); // commands need > 37us to settle
 8000430:	2001      	movs	r0, #1
 8000432:	f000 ffa9 	bl	8001388 <HAL_Delay>
}
 8000436:	bf00      	nop
 8000438:	3708      	adds	r7, #8
 800043a:	46bd      	mov	sp, r7
 800043c:	bd80      	pop	{r7, pc}

0800043e <write4bits>:

/**
 @brief write4bits
*/
void write4bits(uint8_t value) {
 800043e:	b580      	push	{r7, lr}
 8000440:	b082      	sub	sp, #8
 8000442:	af00      	add	r7, sp, #0
 8000444:	4603      	mov	r3, r0
 8000446:	71fb      	strb	r3, [r7, #7]
  writeI2c(value);
 8000448:	79fb      	ldrb	r3, [r7, #7]
 800044a:	4618      	mov	r0, r3
 800044c:	f000 f808 	bl	8000460 <writeI2c>
  pulseEnable(value);
 8000450:	79fb      	ldrb	r3, [r7, #7]
 8000452:	4618      	mov	r0, r3
 8000454:	f7ff ffcc 	bl	80003f0 <pulseEnable>
}
 8000458:	bf00      	nop
 800045a:	3708      	adds	r7, #8
 800045c:	46bd      	mov	sp, r7
 800045e:	bd80      	pop	{r7, pc}

08000460 <writeI2c>:

/**
 @brief writeI2c
*/
void writeI2c(uint8_t data) {
 8000460:	b580      	push	{r7, lr}
 8000462:	b086      	sub	sp, #24
 8000464:	af02      	add	r7, sp, #8
 8000466:	4603      	mov	r3, r0
 8000468:	71fb      	strb	r3, [r7, #7]
  uint8_t data_t[1];
  data_t[0] = data|_backlight;
 800046a:	4b0b      	ldr	r3, [pc, #44]	; (8000498 <writeI2c+0x38>)
 800046c:	781a      	ldrb	r2, [r3, #0]
 800046e:	79fb      	ldrb	r3, [r7, #7]
 8000470:	4313      	orrs	r3, r2
 8000472:	b2db      	uxtb	r3, r3
 8000474:	733b      	strb	r3, [r7, #12]
  HAL_I2C_Master_Transmit (&hi2c1, (uint16_t)_i2caddr,(uint8_t *) data_t, 1, 0xFFFF);
 8000476:	4b09      	ldr	r3, [pc, #36]	; (800049c <writeI2c+0x3c>)
 8000478:	781b      	ldrb	r3, [r3, #0]
 800047a:	b299      	uxth	r1, r3
 800047c:	f107 020c 	add.w	r2, r7, #12
 8000480:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000484:	9300      	str	r3, [sp, #0]
 8000486:	2301      	movs	r3, #1
 8000488:	4805      	ldr	r0, [pc, #20]	; (80004a0 <writeI2c+0x40>)
 800048a:	f001 fba9 	bl	8001be0 <HAL_I2C_Master_Transmit>
}
 800048e:	bf00      	nop
 8000490:	3710      	adds	r7, #16
 8000492:	46bd      	mov	sp, r7
 8000494:	bd80      	pop	{r7, pc}
 8000496:	bf00      	nop
 8000498:	200000b5 	.word	0x200000b5
 800049c:	200000b4 	.word	0x200000b4
 80004a0:	20000110 	.word	0x20000110

080004a4 <Lcd_Initialization>:

//////////////////////////////////////////////////////////////////////////


void Lcd_Initialization (void)
{
 80004a4:	b580      	push	{r7, lr}
 80004a6:	af00      	add	r7, sp, #0
	FaBoLCD_PCF8574(SLAVE_ADDRESS_LCD);
 80004a8:	2042      	movs	r0, #66	; 0x42
 80004aa:	f7ff fe4f 	bl	800014c <FaBoLCD_PCF8574>
}
 80004ae:	bf00      	nop
 80004b0:	bd80      	pop	{r7, pc}

080004b2 <Lcd_Send_Data>:
{
	command(cmd);
}

void Lcd_Send_Data (char data)
{
 80004b2:	b580      	push	{r7, lr}
 80004b4:	b082      	sub	sp, #8
 80004b6:	af00      	add	r7, sp, #0
 80004b8:	4603      	mov	r3, r0
 80004ba:	71fb      	strb	r3, [r7, #7]
	write(data);
 80004bc:	79fb      	ldrb	r3, [r7, #7]
 80004be:	4618      	mov	r0, r3
 80004c0:	f7ff ff66 	bl	8000390 <write>
}
 80004c4:	bf00      	nop
 80004c6:	3708      	adds	r7, #8
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bd80      	pop	{r7, pc}

080004cc <Lcd_Send_String>:



void Lcd_Send_String (char *str)
{
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b082      	sub	sp, #8
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	6078      	str	r0, [r7, #4]
	while (*str) Lcd_Send_Data (*str++);
 80004d4:	e006      	b.n	80004e4 <Lcd_Send_String+0x18>
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	1c5a      	adds	r2, r3, #1
 80004da:	607a      	str	r2, [r7, #4]
 80004dc:	781b      	ldrb	r3, [r3, #0]
 80004de:	4618      	mov	r0, r3
 80004e0:	f7ff ffe7 	bl	80004b2 <Lcd_Send_Data>
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	781b      	ldrb	r3, [r3, #0]
 80004e8:	2b00      	cmp	r3, #0
 80004ea:	d1f4      	bne.n	80004d6 <Lcd_Send_String+0xa>
}
 80004ec:	bf00      	nop
 80004ee:	bf00      	nop
 80004f0:	3708      	adds	r7, #8
 80004f2:	46bd      	mov	sp, r7
 80004f4:	bd80      	pop	{r7, pc}

080004f6 <Lcd_Goto_XY>:
{
	Lcd_Send_Cmd (0x01); //clear display
}

void Lcd_Goto_XY (int row, int col)
{
 80004f6:	b580      	push	{r7, lr}
 80004f8:	b082      	sub	sp, #8
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	6078      	str	r0, [r7, #4]
 80004fe:	6039      	str	r1, [r7, #0]
	setCursor(col, row);
 8000500:	683b      	ldr	r3, [r7, #0]
 8000502:	b2db      	uxtb	r3, r3
 8000504:	687a      	ldr	r2, [r7, #4]
 8000506:	b2d2      	uxtb	r2, r2
 8000508:	4611      	mov	r1, r2
 800050a:	4618      	mov	r0, r3
 800050c:	f7ff feea 	bl	80002e4 <setCursor>
}
 8000510:	bf00      	nop
 8000512:	3708      	adds	r7, #8
 8000514:	46bd      	mov	sp, r7
 8000516:	bd80      	pop	{r7, pc}

08000518 <fsm_automatic_run>:

#include "fsm_automatic.h"

int num_buffer[2] = {0,0};

void fsm_automatic_run(void){
 8000518:	b580      	push	{r7, lr}
 800051a:	af00      	add	r7, sp, #0
	if (mode == MODE1){
 800051c:	4b57      	ldr	r3, [pc, #348]	; (800067c <fsm_automatic_run+0x164>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	2b01      	cmp	r3, #1
 8000522:	f040 80a8 	bne.w	8000676 <fsm_automatic_run+0x15e>
		switch (statusAUTO1){
 8000526:	4b56      	ldr	r3, [pc, #344]	; (8000680 <fsm_automatic_run+0x168>)
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	2b03      	cmp	r3, #3
 800052c:	f200 8094 	bhi.w	8000658 <fsm_automatic_run+0x140>
 8000530:	a201      	add	r2, pc, #4	; (adr r2, 8000538 <fsm_automatic_run+0x20>)
 8000532:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000536:	bf00      	nop
 8000538:	08000549 	.word	0x08000549
 800053c:	08000557 	.word	0x08000557
 8000540:	080005c7 	.word	0x080005c7
 8000544:	08000613 	.word	0x08000613
			case INIT:
				statusAUTO1 = STATE_RED;
 8000548:	4b4d      	ldr	r3, [pc, #308]	; (8000680 <fsm_automatic_run+0x168>)
 800054a:	2201      	movs	r2, #1
 800054c:	601a      	str	r2, [r3, #0]
				setTimer2(1);
 800054e:	2001      	movs	r0, #1
 8000550:	f000 fcae 	bl	8000eb0 <setTimer2>
				break;
 8000554:	e087      	b.n	8000666 <fsm_automatic_run+0x14e>
			case STATE_RED:
				if (timer2_flag == 1){
 8000556:	4b4b      	ldr	r3, [pc, #300]	; (8000684 <fsm_automatic_run+0x16c>)
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	2b01      	cmp	r3, #1
 800055c:	d17e      	bne.n	800065c <fsm_automatic_run+0x144>
					if (counterRed > AUTO_YELLOW){
 800055e:	4b4a      	ldr	r3, [pc, #296]	; (8000688 <fsm_automatic_run+0x170>)
 8000560:	681a      	ldr	r2, [r3, #0]
 8000562:	4b4a      	ldr	r3, [pc, #296]	; (800068c <fsm_automatic_run+0x174>)
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	429a      	cmp	r2, r3
 8000568:	dd0e      	ble.n	8000588 <fsm_automatic_run+0x70>
						enableLedPannel(1);
 800056a:	2001      	movs	r0, #1
 800056c:	f000 fa90 	bl	8000a90 <enableLedPannel>
						num_buffer[0] = counterRed;
 8000570:	4b45      	ldr	r3, [pc, #276]	; (8000688 <fsm_automatic_run+0x170>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	4a46      	ldr	r2, [pc, #280]	; (8000690 <fsm_automatic_run+0x178>)
 8000576:	6013      	str	r3, [r2, #0]
						num_buffer[1] = counterRed - counterYellow;
 8000578:	4b43      	ldr	r3, [pc, #268]	; (8000688 <fsm_automatic_run+0x170>)
 800057a:	681a      	ldr	r2, [r3, #0]
 800057c:	4b45      	ldr	r3, [pc, #276]	; (8000694 <fsm_automatic_run+0x17c>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	1ad3      	subs	r3, r2, r3
 8000582:	4a43      	ldr	r2, [pc, #268]	; (8000690 <fsm_automatic_run+0x178>)
 8000584:	6053      	str	r3, [r2, #4]
 8000586:	e00a      	b.n	800059e <fsm_automatic_run+0x86>
					}
					else{
						enableLedPannel(2);
 8000588:	2002      	movs	r0, #2
 800058a:	f000 fa81 	bl	8000a90 <enableLedPannel>
						num_buffer[0] = counterRed;
 800058e:	4b3e      	ldr	r3, [pc, #248]	; (8000688 <fsm_automatic_run+0x170>)
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	4a3f      	ldr	r2, [pc, #252]	; (8000690 <fsm_automatic_run+0x178>)
 8000594:	6013      	str	r3, [r2, #0]
						num_buffer[1] = counterRed;
 8000596:	4b3c      	ldr	r3, [pc, #240]	; (8000688 <fsm_automatic_run+0x170>)
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	4a3d      	ldr	r2, [pc, #244]	; (8000690 <fsm_automatic_run+0x178>)
 800059c:	6053      	str	r3, [r2, #4]
					}
					counterRed--;
 800059e:	4b3a      	ldr	r3, [pc, #232]	; (8000688 <fsm_automatic_run+0x170>)
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	3b01      	subs	r3, #1
 80005a4:	4a38      	ldr	r2, [pc, #224]	; (8000688 <fsm_automatic_run+0x170>)
 80005a6:	6013      	str	r3, [r2, #0]
					if (counterRed == INIT){
 80005a8:	4b37      	ldr	r3, [pc, #220]	; (8000688 <fsm_automatic_run+0x170>)
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	2b00      	cmp	r3, #0
 80005ae:	d106      	bne.n	80005be <fsm_automatic_run+0xa6>
						counterRed = AUTO_RED;
 80005b0:	4b39      	ldr	r3, [pc, #228]	; (8000698 <fsm_automatic_run+0x180>)
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	4a34      	ldr	r2, [pc, #208]	; (8000688 <fsm_automatic_run+0x170>)
 80005b6:	6013      	str	r3, [r2, #0]
						statusAUTO1 = STATE_GREEN;
 80005b8:	4b31      	ldr	r3, [pc, #196]	; (8000680 <fsm_automatic_run+0x168>)
 80005ba:	2202      	movs	r2, #2
 80005bc:	601a      	str	r2, [r3, #0]
					}
					setTimer2(100);
 80005be:	2064      	movs	r0, #100	; 0x64
 80005c0:	f000 fc76 	bl	8000eb0 <setTimer2>
				}
				break;
 80005c4:	e04a      	b.n	800065c <fsm_automatic_run+0x144>
			case STATE_GREEN:
				if (timer2_flag == 1){
 80005c6:	4b2f      	ldr	r3, [pc, #188]	; (8000684 <fsm_automatic_run+0x16c>)
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	2b01      	cmp	r3, #1
 80005cc:	d148      	bne.n	8000660 <fsm_automatic_run+0x148>
					enableLedPannel(3);
 80005ce:	2003      	movs	r0, #3
 80005d0:	f000 fa5e 	bl	8000a90 <enableLedPannel>
					num_buffer[0] = counterGreen;
 80005d4:	4b31      	ldr	r3, [pc, #196]	; (800069c <fsm_automatic_run+0x184>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4a2d      	ldr	r2, [pc, #180]	; (8000690 <fsm_automatic_run+0x178>)
 80005da:	6013      	str	r3, [r2, #0]
					num_buffer[1] = counterGreen + counterYellow;
 80005dc:	4b2f      	ldr	r3, [pc, #188]	; (800069c <fsm_automatic_run+0x184>)
 80005de:	681a      	ldr	r2, [r3, #0]
 80005e0:	4b2c      	ldr	r3, [pc, #176]	; (8000694 <fsm_automatic_run+0x17c>)
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4413      	add	r3, r2
 80005e6:	4a2a      	ldr	r2, [pc, #168]	; (8000690 <fsm_automatic_run+0x178>)
 80005e8:	6053      	str	r3, [r2, #4]
					counterGreen--;
 80005ea:	4b2c      	ldr	r3, [pc, #176]	; (800069c <fsm_automatic_run+0x184>)
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	3b01      	subs	r3, #1
 80005f0:	4a2a      	ldr	r2, [pc, #168]	; (800069c <fsm_automatic_run+0x184>)
 80005f2:	6013      	str	r3, [r2, #0]
					if (counterGreen == INIT){
 80005f4:	4b29      	ldr	r3, [pc, #164]	; (800069c <fsm_automatic_run+0x184>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	2b00      	cmp	r3, #0
 80005fa:	d106      	bne.n	800060a <fsm_automatic_run+0xf2>
						counterGreen = AUTO_GREEN;
 80005fc:	4b28      	ldr	r3, [pc, #160]	; (80006a0 <fsm_automatic_run+0x188>)
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	4a26      	ldr	r2, [pc, #152]	; (800069c <fsm_automatic_run+0x184>)
 8000602:	6013      	str	r3, [r2, #0]
						statusAUTO1 = STATE_YELLOW;
 8000604:	4b1e      	ldr	r3, [pc, #120]	; (8000680 <fsm_automatic_run+0x168>)
 8000606:	2203      	movs	r2, #3
 8000608:	601a      	str	r2, [r3, #0]
					}
					setTimer2(100);
 800060a:	2064      	movs	r0, #100	; 0x64
 800060c:	f000 fc50 	bl	8000eb0 <setTimer2>
				}
				break;
 8000610:	e026      	b.n	8000660 <fsm_automatic_run+0x148>

			case STATE_YELLOW:
				if (timer2_flag == 1){
 8000612:	4b1c      	ldr	r3, [pc, #112]	; (8000684 <fsm_automatic_run+0x16c>)
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	2b01      	cmp	r3, #1
 8000618:	d124      	bne.n	8000664 <fsm_automatic_run+0x14c>
					enableLedPannel(4);
 800061a:	2004      	movs	r0, #4
 800061c:	f000 fa38 	bl	8000a90 <enableLedPannel>
					num_buffer[0] = counterYellow;
 8000620:	4b1c      	ldr	r3, [pc, #112]	; (8000694 <fsm_automatic_run+0x17c>)
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	4a1a      	ldr	r2, [pc, #104]	; (8000690 <fsm_automatic_run+0x178>)
 8000626:	6013      	str	r3, [r2, #0]
					num_buffer[1] = counterYellow;
 8000628:	4b1a      	ldr	r3, [pc, #104]	; (8000694 <fsm_automatic_run+0x17c>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	4a18      	ldr	r2, [pc, #96]	; (8000690 <fsm_automatic_run+0x178>)
 800062e:	6053      	str	r3, [r2, #4]
					counterYellow--;
 8000630:	4b18      	ldr	r3, [pc, #96]	; (8000694 <fsm_automatic_run+0x17c>)
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	3b01      	subs	r3, #1
 8000636:	4a17      	ldr	r2, [pc, #92]	; (8000694 <fsm_automatic_run+0x17c>)
 8000638:	6013      	str	r3, [r2, #0]
					if (counterYellow == INIT){
 800063a:	4b16      	ldr	r3, [pc, #88]	; (8000694 <fsm_automatic_run+0x17c>)
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	2b00      	cmp	r3, #0
 8000640:	d106      	bne.n	8000650 <fsm_automatic_run+0x138>
						counterYellow = AUTO_YELLOW;
 8000642:	4b12      	ldr	r3, [pc, #72]	; (800068c <fsm_automatic_run+0x174>)
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4a13      	ldr	r2, [pc, #76]	; (8000694 <fsm_automatic_run+0x17c>)
 8000648:	6013      	str	r3, [r2, #0]
						statusAUTO1 = STATE_RED;
 800064a:	4b0d      	ldr	r3, [pc, #52]	; (8000680 <fsm_automatic_run+0x168>)
 800064c:	2201      	movs	r2, #1
 800064e:	601a      	str	r2, [r3, #0]
					}
					setTimer2(100);
 8000650:	2064      	movs	r0, #100	; 0x64
 8000652:	f000 fc2d 	bl	8000eb0 <setTimer2>
				}
				break;
 8000656:	e005      	b.n	8000664 <fsm_automatic_run+0x14c>
			default:
				break;
 8000658:	bf00      	nop
 800065a:	e004      	b.n	8000666 <fsm_automatic_run+0x14e>
				break;
 800065c:	bf00      	nop
 800065e:	e002      	b.n	8000666 <fsm_automatic_run+0x14e>
				break;
 8000660:	bf00      	nop
 8000662:	e000      	b.n	8000666 <fsm_automatic_run+0x14e>
				break;
 8000664:	bf00      	nop
		}

		displayNum(num_buffer[0], num_buffer[1]);
 8000666:	4b0a      	ldr	r3, [pc, #40]	; (8000690 <fsm_automatic_run+0x178>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	4a09      	ldr	r2, [pc, #36]	; (8000690 <fsm_automatic_run+0x178>)
 800066c:	6852      	ldr	r2, [r2, #4]
 800066e:	4611      	mov	r1, r2
 8000670:	4618      	mov	r0, r3
 8000672:	f000 fa33 	bl	8000adc <displayNum>
//			default:
//				break;
//		}
	}

}
 8000676:	bf00      	nop
 8000678:	bd80      	pop	{r7, pc}
 800067a:	bf00      	nop
 800067c:	200000c0 	.word	0x200000c0
 8000680:	200000c4 	.word	0x200000c4
 8000684:	200001b8 	.word	0x200001b8
 8000688:	20000104 	.word	0x20000104
 800068c:	20000100 	.word	0x20000100
 8000690:	200000b8 	.word	0x200000b8
 8000694:	2000010c 	.word	0x2000010c
 8000698:	200000f8 	.word	0x200000f8
 800069c:	20000108 	.word	0x20000108
 80006a0:	200000fc 	.word	0x200000fc

080006a4 <initWaitingTime>:

int counterRed = 0;
int counterGreen = 0;
int counterYellow = 0;

void initWaitingTime(void){
 80006a4:	b480      	push	{r7}
 80006a6:	af00      	add	r7, sp, #0
	AUTO_RED = 5;
 80006a8:	4b06      	ldr	r3, [pc, #24]	; (80006c4 <initWaitingTime+0x20>)
 80006aa:	2205      	movs	r2, #5
 80006ac:	601a      	str	r2, [r3, #0]
	AUTO_GREEN = 3;
 80006ae:	4b06      	ldr	r3, [pc, #24]	; (80006c8 <initWaitingTime+0x24>)
 80006b0:	2203      	movs	r2, #3
 80006b2:	601a      	str	r2, [r3, #0]
	AUTO_YELLOW = 2;
 80006b4:	4b05      	ldr	r3, [pc, #20]	; (80006cc <initWaitingTime+0x28>)
 80006b6:	2202      	movs	r2, #2
 80006b8:	601a      	str	r2, [r3, #0]
}
 80006ba:	bf00      	nop
 80006bc:	46bd      	mov	sp, r7
 80006be:	bc80      	pop	{r7}
 80006c0:	4770      	bx	lr
 80006c2:	bf00      	nop
 80006c4:	200000f8 	.word	0x200000f8
 80006c8:	200000fc 	.word	0x200000fc
 80006cc:	20000100 	.word	0x20000100

080006d0 <initVar>:

void initVar(void){
 80006d0:	b480      	push	{r7}
 80006d2:	af00      	add	r7, sp, #0
	mode = MODE1;
 80006d4:	4b1c      	ldr	r3, [pc, #112]	; (8000748 <initVar+0x78>)
 80006d6:	2201      	movs	r2, #1
 80006d8:	601a      	str	r2, [r3, #0]

	statusAUTO1 = INIT;
 80006da:	4b1c      	ldr	r3, [pc, #112]	; (800074c <initVar+0x7c>)
 80006dc:	2200      	movs	r2, #0
 80006de:	601a      	str	r2, [r3, #0]
	statusAUTO2 = INIT;
 80006e0:	4b1b      	ldr	r3, [pc, #108]	; (8000750 <initVar+0x80>)
 80006e2:	2200      	movs	r2, #0
 80006e4:	601a      	str	r2, [r3, #0]
	statusAUTO3 = INIT;
 80006e6:	4b1b      	ldr	r3, [pc, #108]	; (8000754 <initVar+0x84>)
 80006e8:	2200      	movs	r2, #0
 80006ea:	601a      	str	r2, [r3, #0]
	statusAUTO4 = INIT;
 80006ec:	4b1a      	ldr	r3, [pc, #104]	; (8000758 <initVar+0x88>)
 80006ee:	2200      	movs	r2, #0
 80006f0:	601a      	str	r2, [r3, #0]

	statusMODE2_1 = INIT;
 80006f2:	4b1a      	ldr	r3, [pc, #104]	; (800075c <initVar+0x8c>)
 80006f4:	2200      	movs	r2, #0
 80006f6:	601a      	str	r2, [r3, #0]
	statusMODE2_2 = INIT;
 80006f8:	4b19      	ldr	r3, [pc, #100]	; (8000760 <initVar+0x90>)
 80006fa:	2200      	movs	r2, #0
 80006fc:	601a      	str	r2, [r3, #0]
	statusMODE2_3 = INIT;
 80006fe:	4b19      	ldr	r3, [pc, #100]	; (8000764 <initVar+0x94>)
 8000700:	2200      	movs	r2, #0
 8000702:	601a      	str	r2, [r3, #0]

	statusMODE3_1 = INIT;
 8000704:	4b18      	ldr	r3, [pc, #96]	; (8000768 <initVar+0x98>)
 8000706:	2200      	movs	r2, #0
 8000708:	601a      	str	r2, [r3, #0]
	statusMODE3_2 = INIT;
 800070a:	4b18      	ldr	r3, [pc, #96]	; (800076c <initVar+0x9c>)
 800070c:	2200      	movs	r2, #0
 800070e:	601a      	str	r2, [r3, #0]
	statusMODE3_3 = INIT;
 8000710:	4b17      	ldr	r3, [pc, #92]	; (8000770 <initVar+0xa0>)
 8000712:	2200      	movs	r2, #0
 8000714:	601a      	str	r2, [r3, #0]

	statusMODE4_1 = INIT;
 8000716:	4b17      	ldr	r3, [pc, #92]	; (8000774 <initVar+0xa4>)
 8000718:	2200      	movs	r2, #0
 800071a:	601a      	str	r2, [r3, #0]
	statusMODE4_2 = INIT;
 800071c:	4b16      	ldr	r3, [pc, #88]	; (8000778 <initVar+0xa8>)
 800071e:	2200      	movs	r2, #0
 8000720:	601a      	str	r2, [r3, #0]
	statusMODE4_3 = INIT;
 8000722:	4b16      	ldr	r3, [pc, #88]	; (800077c <initVar+0xac>)
 8000724:	2200      	movs	r2, #0
 8000726:	601a      	str	r2, [r3, #0]

	counterRed = AUTO_RED;
 8000728:	4b15      	ldr	r3, [pc, #84]	; (8000780 <initVar+0xb0>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	4a15      	ldr	r2, [pc, #84]	; (8000784 <initVar+0xb4>)
 800072e:	6013      	str	r3, [r2, #0]
	counterGreen = AUTO_GREEN;
 8000730:	4b15      	ldr	r3, [pc, #84]	; (8000788 <initVar+0xb8>)
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	4a15      	ldr	r2, [pc, #84]	; (800078c <initVar+0xbc>)
 8000736:	6013      	str	r3, [r2, #0]
	counterYellow = AUTO_YELLOW;
 8000738:	4b15      	ldr	r3, [pc, #84]	; (8000790 <initVar+0xc0>)
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	4a15      	ldr	r2, [pc, #84]	; (8000794 <initVar+0xc4>)
 800073e:	6013      	str	r3, [r2, #0]
}
 8000740:	bf00      	nop
 8000742:	46bd      	mov	sp, r7
 8000744:	bc80      	pop	{r7}
 8000746:	4770      	bx	lr
 8000748:	200000c0 	.word	0x200000c0
 800074c:	200000c4 	.word	0x200000c4
 8000750:	200000c8 	.word	0x200000c8
 8000754:	200000cc 	.word	0x200000cc
 8000758:	200000d0 	.word	0x200000d0
 800075c:	200000d4 	.word	0x200000d4
 8000760:	200000d8 	.word	0x200000d8
 8000764:	200000dc 	.word	0x200000dc
 8000768:	200000e0 	.word	0x200000e0
 800076c:	200000e4 	.word	0x200000e4
 8000770:	200000e8 	.word	0x200000e8
 8000774:	200000ec 	.word	0x200000ec
 8000778:	200000f0 	.word	0x200000f0
 800077c:	200000f4 	.word	0x200000f4
 8000780:	200000f8 	.word	0x200000f8
 8000784:	20000104 	.word	0x20000104
 8000788:	200000fc 	.word	0x200000fc
 800078c:	20000108 	.word	0x20000108
 8000790:	20000100 	.word	0x20000100
 8000794:	2000010c 	.word	0x2000010c

08000798 <latchEnable>:
 */

#include "led_pannel.h"
#include <stdio.h>

void latchEnable (void){
 8000798:	b580      	push	{r7, lr}
 800079a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_LE_GPIO_Port, LED_LE_Pin, RESET);
 800079c:	2200      	movs	r2, #0
 800079e:	2110      	movs	r1, #16
 80007a0:	4802      	ldr	r0, [pc, #8]	; (80007ac <latchEnable+0x14>)
 80007a2:	f001 f8a7 	bl	80018f4 <HAL_GPIO_WritePin>
}
 80007a6:	bf00      	nop
 80007a8:	bd80      	pop	{r7, pc}
 80007aa:	bf00      	nop
 80007ac:	40011000 	.word	0x40011000

080007b0 <latchDisable>:

void latchDisable (void){
 80007b0:	b580      	push	{r7, lr}
 80007b2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_LE_GPIO_Port, LED_LE_Pin, SET);
 80007b4:	2201      	movs	r2, #1
 80007b6:	2110      	movs	r1, #16
 80007b8:	4802      	ldr	r0, [pc, #8]	; (80007c4 <latchDisable+0x14>)
 80007ba:	f001 f89b 	bl	80018f4 <HAL_GPIO_WritePin>
}
 80007be:	bf00      	nop
 80007c0:	bd80      	pop	{r7, pc}
 80007c2:	bf00      	nop
 80007c4:	40011000 	.word	0x40011000

080007c8 <outputEnable>:

void outputEnable (void){
 80007c8:	b580      	push	{r7, lr}
 80007ca:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_OE_GPIO_Port, LED_OE_Pin, SET);
 80007cc:	2201      	movs	r2, #1
 80007ce:	2120      	movs	r1, #32
 80007d0:	4802      	ldr	r0, [pc, #8]	; (80007dc <outputEnable+0x14>)
 80007d2:	f001 f88f 	bl	80018f4 <HAL_GPIO_WritePin>
}
 80007d6:	bf00      	nop
 80007d8:	bd80      	pop	{r7, pc}
 80007da:	bf00      	nop
 80007dc:	40011000 	.word	0x40011000

080007e0 <clockON>:

void outputDisable (void){
	HAL_GPIO_WritePin(LED_OE_GPIO_Port, LED_OE_Pin, RESET);
}

void clockON (void){
 80007e0:	b580      	push	{r7, lr}
 80007e2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_SCK_GPIO_Port, LED_SCK_Pin, RESET);
 80007e4:	2200      	movs	r2, #0
 80007e6:	2108      	movs	r1, #8
 80007e8:	4802      	ldr	r0, [pc, #8]	; (80007f4 <clockON+0x14>)
 80007ea:	f001 f883 	bl	80018f4 <HAL_GPIO_WritePin>
}
 80007ee:	bf00      	nop
 80007f0:	bd80      	pop	{r7, pc}
 80007f2:	bf00      	nop
 80007f4:	40011000 	.word	0x40011000

080007f8 <clockOFF>:

void clockOFF (void){
 80007f8:	b580      	push	{r7, lr}
 80007fa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_SCK_GPIO_Port, LED_SCK_Pin, SET);
 80007fc:	2201      	movs	r2, #1
 80007fe:	2108      	movs	r1, #8
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <clockOFF+0x14>)
 8000802:	f001 f877 	bl	80018f4 <HAL_GPIO_WritePin>
}
 8000806:	bf00      	nop
 8000808:	bd80      	pop	{r7, pc}
 800080a:	bf00      	nop
 800080c:	40011000 	.word	0x40011000

08000810 <dataOUT>:

void dataOUT (GPIO_PinState state){
 8000810:	b580      	push	{r7, lr}
 8000812:	b082      	sub	sp, #8
 8000814:	af00      	add	r7, sp, #0
 8000816:	4603      	mov	r3, r0
 8000818:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(LED_SDI_GPIO_Port, LED_SDI_Pin, state);
 800081a:	79fb      	ldrb	r3, [r7, #7]
 800081c:	461a      	mov	r2, r3
 800081e:	2140      	movs	r1, #64	; 0x40
 8000820:	4803      	ldr	r0, [pc, #12]	; (8000830 <dataOUT+0x20>)
 8000822:	f001 f867 	bl	80018f4 <HAL_GPIO_WritePin>
}
 8000826:	bf00      	nop
 8000828:	3708      	adds	r7, #8
 800082a:	46bd      	mov	sp, r7
 800082c:	bd80      	pop	{r7, pc}
 800082e:	bf00      	nop
 8000830:	40011000 	.word	0x40011000

08000834 <getBitValue>:

uint8_t getBitValue (uint8_t data, uint8_t index){
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	4603      	mov	r3, r0
 800083c:	460a      	mov	r2, r1
 800083e:	71fb      	strb	r3, [r7, #7]
 8000840:	4613      	mov	r3, r2
 8000842:	71bb      	strb	r3, [r7, #6]
	data = (data >> index) & 0x01;
 8000844:	79fa      	ldrb	r2, [r7, #7]
 8000846:	79bb      	ldrb	r3, [r7, #6]
 8000848:	fa42 f303 	asr.w	r3, r2, r3
 800084c:	b2db      	uxtb	r3, r3
 800084e:	f003 0301 	and.w	r3, r3, #1
 8000852:	71fb      	strb	r3, [r7, #7]
	return data;
 8000854:	79fb      	ldrb	r3, [r7, #7]
}
 8000856:	4618      	mov	r0, r3
 8000858:	370c      	adds	r7, #12
 800085a:	46bd      	mov	sp, r7
 800085c:	bc80      	pop	{r7}
 800085e:	4770      	bx	lr

08000860 <ledDisplay1>:


uint32_t data1[4] = {0x80, 0x30, 0x00, 0x00};
uint32_t data2[4] = {0x40, 0x40, 0x21, 0x0D};

void ledDisplay1 (void){	//red1 + green2
 8000860:	b580      	push	{r7, lr}
 8000862:	b084      	sub	sp, #16
 8000864:	af00      	add	r7, sp, #0
	uint8_t i;
	uint32_t temp1 = data1[0];
 8000866:	4b1f      	ldr	r3, [pc, #124]	; (80008e4 <ledDisplay1+0x84>)
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	60bb      	str	r3, [r7, #8]
	uint32_t temp2 = data2[0];
 800086c:	4b1e      	ldr	r3, [pc, #120]	; (80008e8 <ledDisplay1+0x88>)
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	607b      	str	r3, [r7, #4]
	latchDisable();
 8000872:	f7ff ff9d 	bl	80007b0 <latchDisable>
	for(i = 0; i < 8; i++){
 8000876:	2300      	movs	r3, #0
 8000878:	73fb      	strb	r3, [r7, #15]
 800087a:	e011      	b.n	80008a0 <ledDisplay1+0x40>
		clockOFF();
 800087c:	f7ff ffbc 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp1, i));
 8000880:	68bb      	ldr	r3, [r7, #8]
 8000882:	b2db      	uxtb	r3, r3
 8000884:	7bfa      	ldrb	r2, [r7, #15]
 8000886:	4611      	mov	r1, r2
 8000888:	4618      	mov	r0, r3
 800088a:	f7ff ffd3 	bl	8000834 <getBitValue>
 800088e:	4603      	mov	r3, r0
 8000890:	4618      	mov	r0, r3
 8000892:	f7ff ffbd 	bl	8000810 <dataOUT>
		clockON();
 8000896:	f7ff ffa3 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 800089a:	7bfb      	ldrb	r3, [r7, #15]
 800089c:	3301      	adds	r3, #1
 800089e:	73fb      	strb	r3, [r7, #15]
 80008a0:	7bfb      	ldrb	r3, [r7, #15]
 80008a2:	2b07      	cmp	r3, #7
 80008a4:	d9ea      	bls.n	800087c <ledDisplay1+0x1c>
	}

	for(i = 0; i < 8; i++){
 80008a6:	2300      	movs	r3, #0
 80008a8:	73fb      	strb	r3, [r7, #15]
 80008aa:	e011      	b.n	80008d0 <ledDisplay1+0x70>
		clockOFF();
 80008ac:	f7ff ffa4 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp2, i));
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	b2db      	uxtb	r3, r3
 80008b4:	7bfa      	ldrb	r2, [r7, #15]
 80008b6:	4611      	mov	r1, r2
 80008b8:	4618      	mov	r0, r3
 80008ba:	f7ff ffbb 	bl	8000834 <getBitValue>
 80008be:	4603      	mov	r3, r0
 80008c0:	4618      	mov	r0, r3
 80008c2:	f7ff ffa5 	bl	8000810 <dataOUT>
		clockON();
 80008c6:	f7ff ff8b 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 80008ca:	7bfb      	ldrb	r3, [r7, #15]
 80008cc:	3301      	adds	r3, #1
 80008ce:	73fb      	strb	r3, [r7, #15]
 80008d0:	7bfb      	ldrb	r3, [r7, #15]
 80008d2:	2b07      	cmp	r3, #7
 80008d4:	d9ea      	bls.n	80008ac <ledDisplay1+0x4c>
	}
	latchEnable();
 80008d6:	f7ff ff5f 	bl	8000798 <latchEnable>
}
 80008da:	bf00      	nop
 80008dc:	3710      	adds	r7, #16
 80008de:	46bd      	mov	sp, r7
 80008e0:	bd80      	pop	{r7, pc}
 80008e2:	bf00      	nop
 80008e4:	20000000 	.word	0x20000000
 80008e8:	20000010 	.word	0x20000010

080008ec <ledDisplay2>:

void ledDisplay2 (void){	//red1 + yellow2
 80008ec:	b580      	push	{r7, lr}
 80008ee:	b084      	sub	sp, #16
 80008f0:	af00      	add	r7, sp, #0
	uint8_t i;
	uint32_t temp1 = data1[1];
 80008f2:	4b1f      	ldr	r3, [pc, #124]	; (8000970 <ledDisplay2+0x84>)
 80008f4:	685b      	ldr	r3, [r3, #4]
 80008f6:	60bb      	str	r3, [r7, #8]
	uint32_t temp2 = data2[1];
 80008f8:	4b1e      	ldr	r3, [pc, #120]	; (8000974 <ledDisplay2+0x88>)
 80008fa:	685b      	ldr	r3, [r3, #4]
 80008fc:	607b      	str	r3, [r7, #4]
	latchDisable();
 80008fe:	f7ff ff57 	bl	80007b0 <latchDisable>
	for(i = 0; i < 8; i++){
 8000902:	2300      	movs	r3, #0
 8000904:	73fb      	strb	r3, [r7, #15]
 8000906:	e011      	b.n	800092c <ledDisplay2+0x40>
		clockOFF();
 8000908:	f7ff ff76 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp1, i));
 800090c:	68bb      	ldr	r3, [r7, #8]
 800090e:	b2db      	uxtb	r3, r3
 8000910:	7bfa      	ldrb	r2, [r7, #15]
 8000912:	4611      	mov	r1, r2
 8000914:	4618      	mov	r0, r3
 8000916:	f7ff ff8d 	bl	8000834 <getBitValue>
 800091a:	4603      	mov	r3, r0
 800091c:	4618      	mov	r0, r3
 800091e:	f7ff ff77 	bl	8000810 <dataOUT>
		clockON();
 8000922:	f7ff ff5d 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 8000926:	7bfb      	ldrb	r3, [r7, #15]
 8000928:	3301      	adds	r3, #1
 800092a:	73fb      	strb	r3, [r7, #15]
 800092c:	7bfb      	ldrb	r3, [r7, #15]
 800092e:	2b07      	cmp	r3, #7
 8000930:	d9ea      	bls.n	8000908 <ledDisplay2+0x1c>
	}

	for(i = 0; i < 8; i++){
 8000932:	2300      	movs	r3, #0
 8000934:	73fb      	strb	r3, [r7, #15]
 8000936:	e011      	b.n	800095c <ledDisplay2+0x70>
		clockOFF();
 8000938:	f7ff ff5e 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp2, i));
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	b2db      	uxtb	r3, r3
 8000940:	7bfa      	ldrb	r2, [r7, #15]
 8000942:	4611      	mov	r1, r2
 8000944:	4618      	mov	r0, r3
 8000946:	f7ff ff75 	bl	8000834 <getBitValue>
 800094a:	4603      	mov	r3, r0
 800094c:	4618      	mov	r0, r3
 800094e:	f7ff ff5f 	bl	8000810 <dataOUT>
		clockON();
 8000952:	f7ff ff45 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 8000956:	7bfb      	ldrb	r3, [r7, #15]
 8000958:	3301      	adds	r3, #1
 800095a:	73fb      	strb	r3, [r7, #15]
 800095c:	7bfb      	ldrb	r3, [r7, #15]
 800095e:	2b07      	cmp	r3, #7
 8000960:	d9ea      	bls.n	8000938 <ledDisplay2+0x4c>
	}
	latchEnable();
 8000962:	f7ff ff19 	bl	8000798 <latchEnable>
}
 8000966:	bf00      	nop
 8000968:	3710      	adds	r7, #16
 800096a:	46bd      	mov	sp, r7
 800096c:	bd80      	pop	{r7, pc}
 800096e:	bf00      	nop
 8000970:	20000000 	.word	0x20000000
 8000974:	20000010 	.word	0x20000010

08000978 <ledDisplay3>:

void ledDisplay3 (void){	//Green1 + Red2
 8000978:	b580      	push	{r7, lr}
 800097a:	b084      	sub	sp, #16
 800097c:	af00      	add	r7, sp, #0
	uint8_t i;
	uint32_t temp1 = data1[2];
 800097e:	4b1f      	ldr	r3, [pc, #124]	; (80009fc <ledDisplay3+0x84>)
 8000980:	689b      	ldr	r3, [r3, #8]
 8000982:	60bb      	str	r3, [r7, #8]
	uint32_t temp2 = data2[2];
 8000984:	4b1e      	ldr	r3, [pc, #120]	; (8000a00 <ledDisplay3+0x88>)
 8000986:	689b      	ldr	r3, [r3, #8]
 8000988:	607b      	str	r3, [r7, #4]
	latchDisable();
 800098a:	f7ff ff11 	bl	80007b0 <latchDisable>
	for(i = 0; i < 8; i++){
 800098e:	2300      	movs	r3, #0
 8000990:	73fb      	strb	r3, [r7, #15]
 8000992:	e011      	b.n	80009b8 <ledDisplay3+0x40>
		clockOFF();
 8000994:	f7ff ff30 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp1, i));
 8000998:	68bb      	ldr	r3, [r7, #8]
 800099a:	b2db      	uxtb	r3, r3
 800099c:	7bfa      	ldrb	r2, [r7, #15]
 800099e:	4611      	mov	r1, r2
 80009a0:	4618      	mov	r0, r3
 80009a2:	f7ff ff47 	bl	8000834 <getBitValue>
 80009a6:	4603      	mov	r3, r0
 80009a8:	4618      	mov	r0, r3
 80009aa:	f7ff ff31 	bl	8000810 <dataOUT>
		clockON();
 80009ae:	f7ff ff17 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 80009b2:	7bfb      	ldrb	r3, [r7, #15]
 80009b4:	3301      	adds	r3, #1
 80009b6:	73fb      	strb	r3, [r7, #15]
 80009b8:	7bfb      	ldrb	r3, [r7, #15]
 80009ba:	2b07      	cmp	r3, #7
 80009bc:	d9ea      	bls.n	8000994 <ledDisplay3+0x1c>
	}

	for(i = 0; i < 8; i++){
 80009be:	2300      	movs	r3, #0
 80009c0:	73fb      	strb	r3, [r7, #15]
 80009c2:	e011      	b.n	80009e8 <ledDisplay3+0x70>
		clockOFF();
 80009c4:	f7ff ff18 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp2, i));
 80009c8:	687b      	ldr	r3, [r7, #4]
 80009ca:	b2db      	uxtb	r3, r3
 80009cc:	7bfa      	ldrb	r2, [r7, #15]
 80009ce:	4611      	mov	r1, r2
 80009d0:	4618      	mov	r0, r3
 80009d2:	f7ff ff2f 	bl	8000834 <getBitValue>
 80009d6:	4603      	mov	r3, r0
 80009d8:	4618      	mov	r0, r3
 80009da:	f7ff ff19 	bl	8000810 <dataOUT>
		clockON();
 80009de:	f7ff feff 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 80009e2:	7bfb      	ldrb	r3, [r7, #15]
 80009e4:	3301      	adds	r3, #1
 80009e6:	73fb      	strb	r3, [r7, #15]
 80009e8:	7bfb      	ldrb	r3, [r7, #15]
 80009ea:	2b07      	cmp	r3, #7
 80009ec:	d9ea      	bls.n	80009c4 <ledDisplay3+0x4c>
	}
	latchEnable();
 80009ee:	f7ff fed3 	bl	8000798 <latchEnable>
}
 80009f2:	bf00      	nop
 80009f4:	3710      	adds	r7, #16
 80009f6:	46bd      	mov	sp, r7
 80009f8:	bd80      	pop	{r7, pc}
 80009fa:	bf00      	nop
 80009fc:	20000000 	.word	0x20000000
 8000a00:	20000010 	.word	0x20000010

08000a04 <ledDisplay4>:

void ledDisplay4 (void){	//Yellow1 + Red2
 8000a04:	b580      	push	{r7, lr}
 8000a06:	b084      	sub	sp, #16
 8000a08:	af00      	add	r7, sp, #0
	uint8_t i;
	uint32_t temp1 = data1[3];
 8000a0a:	4b1f      	ldr	r3, [pc, #124]	; (8000a88 <ledDisplay4+0x84>)
 8000a0c:	68db      	ldr	r3, [r3, #12]
 8000a0e:	60bb      	str	r3, [r7, #8]
	uint32_t temp2 = data2[3];
 8000a10:	4b1e      	ldr	r3, [pc, #120]	; (8000a8c <ledDisplay4+0x88>)
 8000a12:	68db      	ldr	r3, [r3, #12]
 8000a14:	607b      	str	r3, [r7, #4]
	latchDisable();
 8000a16:	f7ff fecb 	bl	80007b0 <latchDisable>
	for(i = 0; i < 8; i++){
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	73fb      	strb	r3, [r7, #15]
 8000a1e:	e011      	b.n	8000a44 <ledDisplay4+0x40>
		clockOFF();
 8000a20:	f7ff feea 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp1, i));
 8000a24:	68bb      	ldr	r3, [r7, #8]
 8000a26:	b2db      	uxtb	r3, r3
 8000a28:	7bfa      	ldrb	r2, [r7, #15]
 8000a2a:	4611      	mov	r1, r2
 8000a2c:	4618      	mov	r0, r3
 8000a2e:	f7ff ff01 	bl	8000834 <getBitValue>
 8000a32:	4603      	mov	r3, r0
 8000a34:	4618      	mov	r0, r3
 8000a36:	f7ff feeb 	bl	8000810 <dataOUT>
		clockON();
 8000a3a:	f7ff fed1 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 8000a3e:	7bfb      	ldrb	r3, [r7, #15]
 8000a40:	3301      	adds	r3, #1
 8000a42:	73fb      	strb	r3, [r7, #15]
 8000a44:	7bfb      	ldrb	r3, [r7, #15]
 8000a46:	2b07      	cmp	r3, #7
 8000a48:	d9ea      	bls.n	8000a20 <ledDisplay4+0x1c>
	}

	for(i = 0; i < 8; i++){
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	73fb      	strb	r3, [r7, #15]
 8000a4e:	e011      	b.n	8000a74 <ledDisplay4+0x70>
		clockOFF();
 8000a50:	f7ff fed2 	bl	80007f8 <clockOFF>
		dataOUT(getBitValue(temp2, i));
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	b2db      	uxtb	r3, r3
 8000a58:	7bfa      	ldrb	r2, [r7, #15]
 8000a5a:	4611      	mov	r1, r2
 8000a5c:	4618      	mov	r0, r3
 8000a5e:	f7ff fee9 	bl	8000834 <getBitValue>
 8000a62:	4603      	mov	r3, r0
 8000a64:	4618      	mov	r0, r3
 8000a66:	f7ff fed3 	bl	8000810 <dataOUT>
		clockON();
 8000a6a:	f7ff feb9 	bl	80007e0 <clockON>
	for(i = 0; i < 8; i++){
 8000a6e:	7bfb      	ldrb	r3, [r7, #15]
 8000a70:	3301      	adds	r3, #1
 8000a72:	73fb      	strb	r3, [r7, #15]
 8000a74:	7bfb      	ldrb	r3, [r7, #15]
 8000a76:	2b07      	cmp	r3, #7
 8000a78:	d9ea      	bls.n	8000a50 <ledDisplay4+0x4c>
	}
	latchEnable();
 8000a7a:	f7ff fe8d 	bl	8000798 <latchEnable>
}
 8000a7e:	bf00      	nop
 8000a80:	3710      	adds	r7, #16
 8000a82:	46bd      	mov	sp, r7
 8000a84:	bd80      	pop	{r7, pc}
 8000a86:	bf00      	nop
 8000a88:	20000000 	.word	0x20000000
 8000a8c:	20000010 	.word	0x20000010

08000a90 <enableLedPannel>:


void enableLedPannel (int index){
 8000a90:	b580      	push	{r7, lr}
 8000a92:	b082      	sub	sp, #8
 8000a94:	af00      	add	r7, sp, #0
 8000a96:	6078      	str	r0, [r7, #4]
	switch (index){
 8000a98:	687b      	ldr	r3, [r7, #4]
 8000a9a:	3b01      	subs	r3, #1
 8000a9c:	2b03      	cmp	r3, #3
 8000a9e:	d817      	bhi.n	8000ad0 <enableLedPannel+0x40>
 8000aa0:	a201      	add	r2, pc, #4	; (adr r2, 8000aa8 <enableLedPannel+0x18>)
 8000aa2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000aa6:	bf00      	nop
 8000aa8:	08000ab9 	.word	0x08000ab9
 8000aac:	08000abf 	.word	0x08000abf
 8000ab0:	08000ac5 	.word	0x08000ac5
 8000ab4:	08000acb 	.word	0x08000acb
		case 1:
			ledDisplay1();
 8000ab8:	f7ff fed2 	bl	8000860 <ledDisplay1>
			break;
 8000abc:	e009      	b.n	8000ad2 <enableLedPannel+0x42>
		case 2:
			ledDisplay2();
 8000abe:	f7ff ff15 	bl	80008ec <ledDisplay2>
			break;
 8000ac2:	e006      	b.n	8000ad2 <enableLedPannel+0x42>
		case 3:
			ledDisplay3();
 8000ac4:	f7ff ff58 	bl	8000978 <ledDisplay3>
			break;
 8000ac8:	e003      	b.n	8000ad2 <enableLedPannel+0x42>
		case 4:
			ledDisplay4();
 8000aca:	f7ff ff9b 	bl	8000a04 <ledDisplay4>
			break;
 8000ace:	e000      	b.n	8000ad2 <enableLedPannel+0x42>
		default:
			break;
 8000ad0:	bf00      	nop
	}
}
 8000ad2:	bf00      	nop
 8000ad4:	3708      	adds	r7, #8
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	bd80      	pop	{r7, pc}
 8000ada:	bf00      	nop

08000adc <displayNum>:

void displayNum(int num1, int num2){
 8000adc:	b580      	push	{r7, lr}
 8000ade:	b084      	sub	sp, #16
 8000ae0:	af00      	add	r7, sp, #0
 8000ae2:	6078      	str	r0, [r7, #4]
 8000ae4:	6039      	str	r1, [r7, #0]
	char str1[2];
	char str2[2];

	sprintf(str1, "%d", num1);
 8000ae6:	f107 030c 	add.w	r3, r7, #12
 8000aea:	687a      	ldr	r2, [r7, #4]
 8000aec:	4917      	ldr	r1, [pc, #92]	; (8000b4c <displayNum+0x70>)
 8000aee:	4618      	mov	r0, r3
 8000af0:	f002 fbae 	bl	8003250 <siprintf>
	sprintf(str2, "%d", num2);
 8000af4:	f107 0308 	add.w	r3, r7, #8
 8000af8:	683a      	ldr	r2, [r7, #0]
 8000afa:	4914      	ldr	r1, [pc, #80]	; (8000b4c <displayNum+0x70>)
 8000afc:	4618      	mov	r0, r3
 8000afe:	f002 fba7 	bl	8003250 <siprintf>

	Lcd_Goto_XY(0, 0);
 8000b02:	2100      	movs	r1, #0
 8000b04:	2000      	movs	r0, #0
 8000b06:	f7ff fcf6 	bl	80004f6 <Lcd_Goto_XY>
	Lcd_Send_String("Lane 1: ");
 8000b0a:	4811      	ldr	r0, [pc, #68]	; (8000b50 <displayNum+0x74>)
 8000b0c:	f7ff fcde 	bl	80004cc <Lcd_Send_String>
	Lcd_Goto_XY(0, 8);
 8000b10:	2108      	movs	r1, #8
 8000b12:	2000      	movs	r0, #0
 8000b14:	f7ff fcef 	bl	80004f6 <Lcd_Goto_XY>
	Lcd_Send_String(str1);
 8000b18:	f107 030c 	add.w	r3, r7, #12
 8000b1c:	4618      	mov	r0, r3
 8000b1e:	f7ff fcd5 	bl	80004cc <Lcd_Send_String>

//	HAL_Delay(50);

	Lcd_Goto_XY(1, 0);
 8000b22:	2100      	movs	r1, #0
 8000b24:	2001      	movs	r0, #1
 8000b26:	f7ff fce6 	bl	80004f6 <Lcd_Goto_XY>
	Lcd_Send_String("Lane 2: ");
 8000b2a:	480a      	ldr	r0, [pc, #40]	; (8000b54 <displayNum+0x78>)
 8000b2c:	f7ff fcce 	bl	80004cc <Lcd_Send_String>
	Lcd_Goto_XY(1, 8);
 8000b30:	2108      	movs	r1, #8
 8000b32:	2001      	movs	r0, #1
 8000b34:	f7ff fcdf 	bl	80004f6 <Lcd_Goto_XY>
	Lcd_Send_String(str2);
 8000b38:	f107 0308 	add.w	r3, r7, #8
 8000b3c:	4618      	mov	r0, r3
 8000b3e:	f7ff fcc5 	bl	80004cc <Lcd_Send_String>

}
 8000b42:	bf00      	nop
 8000b44:	3710      	adds	r7, #16
 8000b46:	46bd      	mov	sp, r7
 8000b48:	bd80      	pop	{r7, pc}
 8000b4a:	bf00      	nop
 8000b4c:	08003b5c 	.word	0x08003b5c
 8000b50:	08003b60 	.word	0x08003b60
 8000b54:	08003b6c 	.word	0x08003b6c

08000b58 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b5c:	f000 fbb2 	bl	80012c4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b60:	f000 f830 	bl	8000bc4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b64:	f000 f8e6 	bl	8000d34 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000b68:	f000 f898 	bl	8000c9c <MX_TIM2_Init>
  MX_I2C1_Init();
 8000b6c:	f000 f866 	bl	8000c3c <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000b70:	4810      	ldr	r0, [pc, #64]	; (8000bb4 <main+0x5c>)
 8000b72:	f001 ff91 	bl	8002a98 <HAL_TIM_Base_Start_IT>
  //buzzerStartUp();
  HAL_GPIO_WritePin(OE_GPIO_Port, OE_Pin, RESET);
 8000b76:	2200      	movs	r2, #0
 8000b78:	2104      	movs	r1, #4
 8000b7a:	480f      	ldr	r0, [pc, #60]	; (8000bb8 <main+0x60>)
 8000b7c:	f000 feba 	bl	80018f4 <HAL_GPIO_WritePin>
  outputEnable();
 8000b80:	f7ff fe22 	bl	80007c8 <outputEnable>
  initWaitingTime();
 8000b84:	f7ff fd8e 	bl	80006a4 <initWaitingTime>
  initVar();
 8000b88:	f7ff fda2 	bl	80006d0 <initVar>
  setTimer1(100);
 8000b8c:	2064      	movs	r0, #100	; 0x64
 8000b8e:	f000 f97b 	bl	8000e88 <setTimer1>
//  HAL_Delay(1000);
  Lcd_Initialization();
 8000b92:	f7ff fc87 	bl	80004a4 <Lcd_Initialization>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  while (1)
  {
	if (timer1_flag == 1){
 8000b96:	4b09      	ldr	r3, [pc, #36]	; (8000bbc <main+0x64>)
 8000b98:	681b      	ldr	r3, [r3, #0]
 8000b9a:	2b01      	cmp	r3, #1
 8000b9c:	d106      	bne.n	8000bac <main+0x54>
		HAL_GPIO_TogglePin(RED_LED_GPIO_Port, RED_LED_Pin);
 8000b9e:	2104      	movs	r1, #4
 8000ba0:	4807      	ldr	r0, [pc, #28]	; (8000bc0 <main+0x68>)
 8000ba2:	f000 febf 	bl	8001924 <HAL_GPIO_TogglePin>
		setTimer1(100);
 8000ba6:	2064      	movs	r0, #100	; 0x64
 8000ba8:	f000 f96e 	bl	8000e88 <setTimer1>
	}
	fsm_automatic_run();
 8000bac:	f7ff fcb4 	bl	8000518 <fsm_automatic_run>
	if (timer1_flag == 1){
 8000bb0:	e7f1      	b.n	8000b96 <main+0x3e>
 8000bb2:	bf00      	nop
 8000bb4:	20000164 	.word	0x20000164
 8000bb8:	40011400 	.word	0x40011400
 8000bbc:	200001b0 	.word	0x200001b0
 8000bc0:	40010c00 	.word	0x40010c00

08000bc4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	b090      	sub	sp, #64	; 0x40
 8000bc8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000bca:	f107 0318 	add.w	r3, r7, #24
 8000bce:	2228      	movs	r2, #40	; 0x28
 8000bd0:	2100      	movs	r1, #0
 8000bd2:	4618      	mov	r0, r3
 8000bd4:	f002 fb34 	bl	8003240 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000bd8:	1d3b      	adds	r3, r7, #4
 8000bda:	2200      	movs	r2, #0
 8000bdc:	601a      	str	r2, [r3, #0]
 8000bde:	605a      	str	r2, [r3, #4]
 8000be0:	609a      	str	r2, [r3, #8]
 8000be2:	60da      	str	r2, [r3, #12]
 8000be4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000be6:	2302      	movs	r3, #2
 8000be8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000bea:	2301      	movs	r3, #1
 8000bec:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000bee:	2310      	movs	r3, #16
 8000bf0:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000bf6:	f107 0318 	add.w	r3, r7, #24
 8000bfa:	4618      	mov	r0, r3
 8000bfc:	f001 faf6 	bl	80021ec <HAL_RCC_OscConfig>
 8000c00:	4603      	mov	r3, r0
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d001      	beq.n	8000c0a <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000c06:	f000 f939 	bl	8000e7c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c0a:	230f      	movs	r3, #15
 8000c0c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000c0e:	2300      	movs	r3, #0
 8000c10:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c12:	2300      	movs	r3, #0
 8000c14:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000c16:	2300      	movs	r3, #0
 8000c18:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000c1e:	1d3b      	adds	r3, r7, #4
 8000c20:	2100      	movs	r1, #0
 8000c22:	4618      	mov	r0, r3
 8000c24:	f001 fd64 	bl	80026f0 <HAL_RCC_ClockConfig>
 8000c28:	4603      	mov	r3, r0
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d001      	beq.n	8000c32 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000c2e:	f000 f925 	bl	8000e7c <Error_Handler>
  }
}
 8000c32:	bf00      	nop
 8000c34:	3740      	adds	r7, #64	; 0x40
 8000c36:	46bd      	mov	sp, r7
 8000c38:	bd80      	pop	{r7, pc}
	...

08000c3c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000c40:	4b13      	ldr	r3, [pc, #76]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c42:	4a14      	ldr	r2, [pc, #80]	; (8000c94 <MX_I2C1_Init+0x58>)
 8000c44:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8000c46:	4b12      	ldr	r3, [pc, #72]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c48:	4a13      	ldr	r2, [pc, #76]	; (8000c98 <MX_I2C1_Init+0x5c>)
 8000c4a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000c4c:	4b10      	ldr	r3, [pc, #64]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c4e:	2200      	movs	r2, #0
 8000c50:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0x30F;
 8000c52:	4b0f      	ldr	r3, [pc, #60]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c54:	f240 320f 	movw	r2, #783	; 0x30f
 8000c58:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000c5a:	4b0d      	ldr	r3, [pc, #52]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c5c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000c60:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000c62:	4b0b      	ldr	r3, [pc, #44]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0xFF;
 8000c68:	4b09      	ldr	r3, [pc, #36]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c6a:	22ff      	movs	r2, #255	; 0xff
 8000c6c:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000c6e:	4b08      	ldr	r3, [pc, #32]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c70:	2200      	movs	r2, #0
 8000c72:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000c74:	4b06      	ldr	r3, [pc, #24]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c76:	2200      	movs	r2, #0
 8000c78:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000c7a:	4805      	ldr	r0, [pc, #20]	; (8000c90 <MX_I2C1_Init+0x54>)
 8000c7c:	f000 fe6c 	bl	8001958 <HAL_I2C_Init>
 8000c80:	4603      	mov	r3, r0
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	d001      	beq.n	8000c8a <MX_I2C1_Init+0x4e>
  {
    Error_Handler();
 8000c86:	f000 f8f9 	bl	8000e7c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000c8a:	bf00      	nop
 8000c8c:	bd80      	pop	{r7, pc}
 8000c8e:	bf00      	nop
 8000c90:	20000110 	.word	0x20000110
 8000c94:	40005400 	.word	0x40005400
 8000c98:	00061a80 	.word	0x00061a80

08000c9c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	b086      	sub	sp, #24
 8000ca0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000ca2:	f107 0308 	add.w	r3, r7, #8
 8000ca6:	2200      	movs	r2, #0
 8000ca8:	601a      	str	r2, [r3, #0]
 8000caa:	605a      	str	r2, [r3, #4]
 8000cac:	609a      	str	r2, [r3, #8]
 8000cae:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000cb0:	463b      	mov	r3, r7
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	601a      	str	r2, [r3, #0]
 8000cb6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000cb8:	4b1d      	ldr	r3, [pc, #116]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cba:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000cbe:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8000cc0:	4b1b      	ldr	r3, [pc, #108]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cc2:	f641 723f 	movw	r2, #7999	; 0x1f3f
 8000cc6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000cc8:	4b19      	ldr	r3, [pc, #100]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cca:	2200      	movs	r2, #0
 8000ccc:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000cce:	4b18      	ldr	r3, [pc, #96]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cd0:	2209      	movs	r2, #9
 8000cd2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000cd4:	4b16      	ldr	r3, [pc, #88]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000cda:	4b15      	ldr	r3, [pc, #84]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cdc:	2200      	movs	r2, #0
 8000cde:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000ce0:	4813      	ldr	r0, [pc, #76]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000ce2:	f001 fe89 	bl	80029f8 <HAL_TIM_Base_Init>
 8000ce6:	4603      	mov	r3, r0
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d001      	beq.n	8000cf0 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000cec:	f000 f8c6 	bl	8000e7c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000cf0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000cf4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000cf6:	f107 0308 	add.w	r3, r7, #8
 8000cfa:	4619      	mov	r1, r3
 8000cfc:	480c      	ldr	r0, [pc, #48]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000cfe:	f002 f825 	bl	8002d4c <HAL_TIM_ConfigClockSource>
 8000d02:	4603      	mov	r3, r0
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	d001      	beq.n	8000d0c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000d08:	f000 f8b8 	bl	8000e7c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d10:	2300      	movs	r3, #0
 8000d12:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000d14:	463b      	mov	r3, r7
 8000d16:	4619      	mov	r1, r3
 8000d18:	4805      	ldr	r0, [pc, #20]	; (8000d30 <MX_TIM2_Init+0x94>)
 8000d1a:	f002 f9f7 	bl	800310c <HAL_TIMEx_MasterConfigSynchronization>
 8000d1e:	4603      	mov	r3, r0
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d001      	beq.n	8000d28 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000d24:	f000 f8aa 	bl	8000e7c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000d28:	bf00      	nop
 8000d2a:	3718      	adds	r7, #24
 8000d2c:	46bd      	mov	sp, r7
 8000d2e:	bd80      	pop	{r7, pc}
 8000d30:	20000164 	.word	0x20000164

08000d34 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d34:	b580      	push	{r7, lr}
 8000d36:	b088      	sub	sp, #32
 8000d38:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d3a:	f107 0310 	add.w	r3, r7, #16
 8000d3e:	2200      	movs	r2, #0
 8000d40:	601a      	str	r2, [r3, #0]
 8000d42:	605a      	str	r2, [r3, #4]
 8000d44:	609a      	str	r2, [r3, #8]
 8000d46:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d48:	4b43      	ldr	r3, [pc, #268]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d4a:	699b      	ldr	r3, [r3, #24]
 8000d4c:	4a42      	ldr	r2, [pc, #264]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d4e:	f043 0310 	orr.w	r3, r3, #16
 8000d52:	6193      	str	r3, [r2, #24]
 8000d54:	4b40      	ldr	r3, [pc, #256]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d56:	699b      	ldr	r3, [r3, #24]
 8000d58:	f003 0310 	and.w	r3, r3, #16
 8000d5c:	60fb      	str	r3, [r7, #12]
 8000d5e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d60:	4b3d      	ldr	r3, [pc, #244]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d62:	699b      	ldr	r3, [r3, #24]
 8000d64:	4a3c      	ldr	r2, [pc, #240]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d66:	f043 0308 	orr.w	r3, r3, #8
 8000d6a:	6193      	str	r3, [r2, #24]
 8000d6c:	4b3a      	ldr	r3, [pc, #232]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d6e:	699b      	ldr	r3, [r3, #24]
 8000d70:	f003 0308 	and.w	r3, r3, #8
 8000d74:	60bb      	str	r3, [r7, #8]
 8000d76:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d78:	4b37      	ldr	r3, [pc, #220]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d7a:	699b      	ldr	r3, [r3, #24]
 8000d7c:	4a36      	ldr	r2, [pc, #216]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d7e:	f043 0304 	orr.w	r3, r3, #4
 8000d82:	6193      	str	r3, [r2, #24]
 8000d84:	4b34      	ldr	r3, [pc, #208]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d86:	699b      	ldr	r3, [r3, #24]
 8000d88:	f003 0304 	and.w	r3, r3, #4
 8000d8c:	607b      	str	r3, [r7, #4]
 8000d8e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d90:	4b31      	ldr	r3, [pc, #196]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d92:	699b      	ldr	r3, [r3, #24]
 8000d94:	4a30      	ldr	r2, [pc, #192]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d96:	f043 0320 	orr.w	r3, r3, #32
 8000d9a:	6193      	str	r3, [r2, #24]
 8000d9c:	4b2e      	ldr	r3, [pc, #184]	; (8000e58 <MX_GPIO_Init+0x124>)
 8000d9e:	699b      	ldr	r3, [r3, #24]
 8000da0:	f003 0320 	and.w	r3, r3, #32
 8000da4:	603b      	str	r3, [r7, #0]
 8000da6:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LED_SCK_Pin|LED_LE_Pin|LED_OE_Pin|LED_SDI_Pin, GPIO_PIN_RESET);
 8000da8:	2200      	movs	r2, #0
 8000daa:	2178      	movs	r1, #120	; 0x78
 8000dac:	482b      	ldr	r0, [pc, #172]	; (8000e5c <MX_GPIO_Init+0x128>)
 8000dae:	f000 fda1 	bl	80018f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, RED_LED_Pin|BUZZER_Pin, GPIO_PIN_RESET);
 8000db2:	2200      	movs	r2, #0
 8000db4:	2124      	movs	r1, #36	; 0x24
 8000db6:	482a      	ldr	r0, [pc, #168]	; (8000e60 <MX_GPIO_Init+0x12c>)
 8000db8:	f000 fd9c 	bl	80018f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(OE_GPIO_Port, OE_Pin, GPIO_PIN_RESET);
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	2104      	movs	r1, #4
 8000dc0:	4828      	ldr	r0, [pc, #160]	; (8000e64 <MX_GPIO_Init+0x130>)
 8000dc2:	f000 fd97 	bl	80018f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LED_SCK_Pin LED_LE_Pin LED_OE_Pin LED_SDI_Pin */
  GPIO_InitStruct.Pin = LED_SCK_Pin|LED_LE_Pin|LED_OE_Pin|LED_SDI_Pin;
 8000dc6:	2378      	movs	r3, #120	; 0x78
 8000dc8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dca:	2301      	movs	r3, #1
 8000dcc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dce:	2300      	movs	r3, #0
 8000dd0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dd2:	2302      	movs	r3, #2
 8000dd4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000dd6:	f107 0310 	add.w	r3, r7, #16
 8000dda:	4619      	mov	r1, r3
 8000ddc:	481f      	ldr	r0, [pc, #124]	; (8000e5c <MX_GPIO_Init+0x128>)
 8000dde:	f000 fc05 	bl	80015ec <HAL_GPIO_Init>

  /*Configure GPIO pins : RED_LED_Pin BUZZER_Pin */
  GPIO_InitStruct.Pin = RED_LED_Pin|BUZZER_Pin;
 8000de2:	2324      	movs	r3, #36	; 0x24
 8000de4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000de6:	2301      	movs	r3, #1
 8000de8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dea:	2300      	movs	r3, #0
 8000dec:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dee:	2302      	movs	r3, #2
 8000df0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000df2:	f107 0310 	add.w	r3, r7, #16
 8000df6:	4619      	mov	r1, r3
 8000df8:	4819      	ldr	r0, [pc, #100]	; (8000e60 <MX_GPIO_Init+0x12c>)
 8000dfa:	f000 fbf7 	bl	80015ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PB10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000dfe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e02:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e04:	2302      	movs	r3, #2
 8000e06:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000e08:	2303      	movs	r3, #3
 8000e0a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e0c:	f107 0310 	add.w	r3, r7, #16
 8000e10:	4619      	mov	r1, r3
 8000e12:	4813      	ldr	r0, [pc, #76]	; (8000e60 <MX_GPIO_Init+0x12c>)
 8000e14:	f000 fbea 	bl	80015ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PB11 */
  GPIO_InitStruct.Pin = GPIO_PIN_11;
 8000e18:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000e1c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e1e:	2300      	movs	r3, #0
 8000e20:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e22:	2300      	movs	r3, #0
 8000e24:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e26:	f107 0310 	add.w	r3, r7, #16
 8000e2a:	4619      	mov	r1, r3
 8000e2c:	480c      	ldr	r0, [pc, #48]	; (8000e60 <MX_GPIO_Init+0x12c>)
 8000e2e:	f000 fbdd 	bl	80015ec <HAL_GPIO_Init>

  /*Configure GPIO pin : OE_Pin */
  GPIO_InitStruct.Pin = OE_Pin;
 8000e32:	2304      	movs	r3, #4
 8000e34:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e36:	2301      	movs	r3, #1
 8000e38:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e3a:	2300      	movs	r3, #0
 8000e3c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e3e:	2302      	movs	r3, #2
 8000e40:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(OE_GPIO_Port, &GPIO_InitStruct);
 8000e42:	f107 0310 	add.w	r3, r7, #16
 8000e46:	4619      	mov	r1, r3
 8000e48:	4806      	ldr	r0, [pc, #24]	; (8000e64 <MX_GPIO_Init+0x130>)
 8000e4a:	f000 fbcf 	bl	80015ec <HAL_GPIO_Init>

}
 8000e4e:	bf00      	nop
 8000e50:	3720      	adds	r7, #32
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}
 8000e56:	bf00      	nop
 8000e58:	40021000 	.word	0x40021000
 8000e5c:	40011000 	.word	0x40011000
 8000e60:	40010c00 	.word	0x40010c00
 8000e64:	40011400 	.word	0x40011400

08000e68 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */

// Interrupt is invoked every 10ms
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000e68:	b580      	push	{r7, lr}
 8000e6a:	b082      	sub	sp, #8
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	6078      	str	r0, [r7, #4]

	/*ledBlink(50, 50);
	UpdateStatus();
	buzzerProcess();*/
	timerRun();
 8000e70:	f000 f832 	bl	8000ed8 <timerRun>
}
 8000e74:	bf00      	nop
 8000e76:	3708      	adds	r7, #8
 8000e78:	46bd      	mov	sp, r7
 8000e7a:	bd80      	pop	{r7, pc}

08000e7c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e7c:	b480      	push	{r7}
 8000e7e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e80:	b672      	cpsid	i
}
 8000e82:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e84:	e7fe      	b.n	8000e84 <Error_Handler+0x8>
	...

08000e88 <setTimer1>:
 8000e88:	b480      	push	{r7}
 8000e8a:	b083      	sub	sp, #12
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	6078      	str	r0, [r7, #4]
 8000e90:	4a05      	ldr	r2, [pc, #20]	; (8000ea8 <setTimer1+0x20>)
 8000e92:	687b      	ldr	r3, [r7, #4]
 8000e94:	6013      	str	r3, [r2, #0]
 8000e96:	4b05      	ldr	r3, [pc, #20]	; (8000eac <setTimer1+0x24>)
 8000e98:	2200      	movs	r2, #0
 8000e9a:	601a      	str	r2, [r3, #0]
 8000e9c:	bf00      	nop
 8000e9e:	370c      	adds	r7, #12
 8000ea0:	46bd      	mov	sp, r7
 8000ea2:	bc80      	pop	{r7}
 8000ea4:	4770      	bx	lr
 8000ea6:	bf00      	nop
 8000ea8:	200001ac 	.word	0x200001ac
 8000eac:	200001b0 	.word	0x200001b0

08000eb0 <setTimer2>:
 8000eb0:	b480      	push	{r7}
 8000eb2:	b083      	sub	sp, #12
 8000eb4:	af00      	add	r7, sp, #0
 8000eb6:	6078      	str	r0, [r7, #4]
 8000eb8:	4a05      	ldr	r2, [pc, #20]	; (8000ed0 <setTimer2+0x20>)
 8000eba:	687b      	ldr	r3, [r7, #4]
 8000ebc:	6013      	str	r3, [r2, #0]
 8000ebe:	4b05      	ldr	r3, [pc, #20]	; (8000ed4 <setTimer2+0x24>)
 8000ec0:	2200      	movs	r2, #0
 8000ec2:	601a      	str	r2, [r3, #0]
 8000ec4:	bf00      	nop
 8000ec6:	370c      	adds	r7, #12
 8000ec8:	46bd      	mov	sp, r7
 8000eca:	bc80      	pop	{r7}
 8000ecc:	4770      	bx	lr
 8000ece:	bf00      	nop
 8000ed0:	200001b4 	.word	0x200001b4
 8000ed4:	200001b8 	.word	0x200001b8

08000ed8 <timerRun>:
 8000ed8:	b480      	push	{r7}
 8000eda:	af00      	add	r7, sp, #0
 8000edc:	4b51      	ldr	r3, [pc, #324]	; (8001024 <timerRun+0x14c>)
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	dd0b      	ble.n	8000efc <timerRun+0x24>
 8000ee4:	4b4f      	ldr	r3, [pc, #316]	; (8001024 <timerRun+0x14c>)
 8000ee6:	681b      	ldr	r3, [r3, #0]
 8000ee8:	3b01      	subs	r3, #1
 8000eea:	4a4e      	ldr	r2, [pc, #312]	; (8001024 <timerRun+0x14c>)
 8000eec:	6013      	str	r3, [r2, #0]
 8000eee:	4b4d      	ldr	r3, [pc, #308]	; (8001024 <timerRun+0x14c>)
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	d102      	bne.n	8000efc <timerRun+0x24>
 8000ef6:	4b4c      	ldr	r3, [pc, #304]	; (8001028 <timerRun+0x150>)
 8000ef8:	2201      	movs	r2, #1
 8000efa:	601a      	str	r2, [r3, #0]
 8000efc:	4b4b      	ldr	r3, [pc, #300]	; (800102c <timerRun+0x154>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	2b00      	cmp	r3, #0
 8000f02:	dd0b      	ble.n	8000f1c <timerRun+0x44>
 8000f04:	4b49      	ldr	r3, [pc, #292]	; (800102c <timerRun+0x154>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	3b01      	subs	r3, #1
 8000f0a:	4a48      	ldr	r2, [pc, #288]	; (800102c <timerRun+0x154>)
 8000f0c:	6013      	str	r3, [r2, #0]
 8000f0e:	4b47      	ldr	r3, [pc, #284]	; (800102c <timerRun+0x154>)
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	2b00      	cmp	r3, #0
 8000f14:	d102      	bne.n	8000f1c <timerRun+0x44>
 8000f16:	4b46      	ldr	r3, [pc, #280]	; (8001030 <timerRun+0x158>)
 8000f18:	2201      	movs	r2, #1
 8000f1a:	601a      	str	r2, [r3, #0]
 8000f1c:	4b45      	ldr	r3, [pc, #276]	; (8001034 <timerRun+0x15c>)
 8000f1e:	681b      	ldr	r3, [r3, #0]
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	dd0b      	ble.n	8000f3c <timerRun+0x64>
 8000f24:	4b43      	ldr	r3, [pc, #268]	; (8001034 <timerRun+0x15c>)
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	3b01      	subs	r3, #1
 8000f2a:	4a42      	ldr	r2, [pc, #264]	; (8001034 <timerRun+0x15c>)
 8000f2c:	6013      	str	r3, [r2, #0]
 8000f2e:	4b41      	ldr	r3, [pc, #260]	; (8001034 <timerRun+0x15c>)
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	2b00      	cmp	r3, #0
 8000f34:	d102      	bne.n	8000f3c <timerRun+0x64>
 8000f36:	4b40      	ldr	r3, [pc, #256]	; (8001038 <timerRun+0x160>)
 8000f38:	2201      	movs	r2, #1
 8000f3a:	601a      	str	r2, [r3, #0]
 8000f3c:	4b3f      	ldr	r3, [pc, #252]	; (800103c <timerRun+0x164>)
 8000f3e:	681b      	ldr	r3, [r3, #0]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	dd0b      	ble.n	8000f5c <timerRun+0x84>
 8000f44:	4b3d      	ldr	r3, [pc, #244]	; (800103c <timerRun+0x164>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	3b01      	subs	r3, #1
 8000f4a:	4a3c      	ldr	r2, [pc, #240]	; (800103c <timerRun+0x164>)
 8000f4c:	6013      	str	r3, [r2, #0]
 8000f4e:	4b3b      	ldr	r3, [pc, #236]	; (800103c <timerRun+0x164>)
 8000f50:	681b      	ldr	r3, [r3, #0]
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	d102      	bne.n	8000f5c <timerRun+0x84>
 8000f56:	4b3a      	ldr	r3, [pc, #232]	; (8001040 <timerRun+0x168>)
 8000f58:	2201      	movs	r2, #1
 8000f5a:	601a      	str	r2, [r3, #0]
 8000f5c:	4b39      	ldr	r3, [pc, #228]	; (8001044 <timerRun+0x16c>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	dd0b      	ble.n	8000f7c <timerRun+0xa4>
 8000f64:	4b37      	ldr	r3, [pc, #220]	; (8001044 <timerRun+0x16c>)
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	3b01      	subs	r3, #1
 8000f6a:	4a36      	ldr	r2, [pc, #216]	; (8001044 <timerRun+0x16c>)
 8000f6c:	6013      	str	r3, [r2, #0]
 8000f6e:	4b35      	ldr	r3, [pc, #212]	; (8001044 <timerRun+0x16c>)
 8000f70:	681b      	ldr	r3, [r3, #0]
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d102      	bne.n	8000f7c <timerRun+0xa4>
 8000f76:	4b34      	ldr	r3, [pc, #208]	; (8001048 <timerRun+0x170>)
 8000f78:	2201      	movs	r2, #1
 8000f7a:	601a      	str	r2, [r3, #0]
 8000f7c:	4b33      	ldr	r3, [pc, #204]	; (800104c <timerRun+0x174>)
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	dd0b      	ble.n	8000f9c <timerRun+0xc4>
 8000f84:	4b31      	ldr	r3, [pc, #196]	; (800104c <timerRun+0x174>)
 8000f86:	681b      	ldr	r3, [r3, #0]
 8000f88:	3b01      	subs	r3, #1
 8000f8a:	4a30      	ldr	r2, [pc, #192]	; (800104c <timerRun+0x174>)
 8000f8c:	6013      	str	r3, [r2, #0]
 8000f8e:	4b2f      	ldr	r3, [pc, #188]	; (800104c <timerRun+0x174>)
 8000f90:	681b      	ldr	r3, [r3, #0]
 8000f92:	2b00      	cmp	r3, #0
 8000f94:	d102      	bne.n	8000f9c <timerRun+0xc4>
 8000f96:	4b2e      	ldr	r3, [pc, #184]	; (8001050 <timerRun+0x178>)
 8000f98:	2201      	movs	r2, #1
 8000f9a:	601a      	str	r2, [r3, #0]
 8000f9c:	4b2d      	ldr	r3, [pc, #180]	; (8001054 <timerRun+0x17c>)
 8000f9e:	681b      	ldr	r3, [r3, #0]
 8000fa0:	2b00      	cmp	r3, #0
 8000fa2:	dd0b      	ble.n	8000fbc <timerRun+0xe4>
 8000fa4:	4b2b      	ldr	r3, [pc, #172]	; (8001054 <timerRun+0x17c>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	3b01      	subs	r3, #1
 8000faa:	4a2a      	ldr	r2, [pc, #168]	; (8001054 <timerRun+0x17c>)
 8000fac:	6013      	str	r3, [r2, #0]
 8000fae:	4b29      	ldr	r3, [pc, #164]	; (8001054 <timerRun+0x17c>)
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d102      	bne.n	8000fbc <timerRun+0xe4>
 8000fb6:	4b28      	ldr	r3, [pc, #160]	; (8001058 <timerRun+0x180>)
 8000fb8:	2201      	movs	r2, #1
 8000fba:	601a      	str	r2, [r3, #0]
 8000fbc:	4b27      	ldr	r3, [pc, #156]	; (800105c <timerRun+0x184>)
 8000fbe:	681b      	ldr	r3, [r3, #0]
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	dd0b      	ble.n	8000fdc <timerRun+0x104>
 8000fc4:	4b25      	ldr	r3, [pc, #148]	; (800105c <timerRun+0x184>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	3b01      	subs	r3, #1
 8000fca:	4a24      	ldr	r2, [pc, #144]	; (800105c <timerRun+0x184>)
 8000fcc:	6013      	str	r3, [r2, #0]
 8000fce:	4b23      	ldr	r3, [pc, #140]	; (800105c <timerRun+0x184>)
 8000fd0:	681b      	ldr	r3, [r3, #0]
 8000fd2:	2b00      	cmp	r3, #0
 8000fd4:	d102      	bne.n	8000fdc <timerRun+0x104>
 8000fd6:	4b22      	ldr	r3, [pc, #136]	; (8001060 <timerRun+0x188>)
 8000fd8:	2201      	movs	r2, #1
 8000fda:	601a      	str	r2, [r3, #0]
 8000fdc:	4b21      	ldr	r3, [pc, #132]	; (8001064 <timerRun+0x18c>)
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	dd0b      	ble.n	8000ffc <timerRun+0x124>
 8000fe4:	4b1f      	ldr	r3, [pc, #124]	; (8001064 <timerRun+0x18c>)
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	3b01      	subs	r3, #1
 8000fea:	4a1e      	ldr	r2, [pc, #120]	; (8001064 <timerRun+0x18c>)
 8000fec:	6013      	str	r3, [r2, #0]
 8000fee:	4b1d      	ldr	r3, [pc, #116]	; (8001064 <timerRun+0x18c>)
 8000ff0:	681b      	ldr	r3, [r3, #0]
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d102      	bne.n	8000ffc <timerRun+0x124>
 8000ff6:	4b1c      	ldr	r3, [pc, #112]	; (8001068 <timerRun+0x190>)
 8000ff8:	2201      	movs	r2, #1
 8000ffa:	601a      	str	r2, [r3, #0]
 8000ffc:	4b1b      	ldr	r3, [pc, #108]	; (800106c <timerRun+0x194>)
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	2b00      	cmp	r3, #0
 8001002:	dd0b      	ble.n	800101c <timerRun+0x144>
 8001004:	4b19      	ldr	r3, [pc, #100]	; (800106c <timerRun+0x194>)
 8001006:	681b      	ldr	r3, [r3, #0]
 8001008:	3b01      	subs	r3, #1
 800100a:	4a18      	ldr	r2, [pc, #96]	; (800106c <timerRun+0x194>)
 800100c:	6013      	str	r3, [r2, #0]
 800100e:	4b17      	ldr	r3, [pc, #92]	; (800106c <timerRun+0x194>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	2b00      	cmp	r3, #0
 8001014:	d102      	bne.n	800101c <timerRun+0x144>
 8001016:	4b16      	ldr	r3, [pc, #88]	; (8001070 <timerRun+0x198>)
 8001018:	2201      	movs	r2, #1
 800101a:	601a      	str	r2, [r3, #0]
 800101c:	bf00      	nop
 800101e:	46bd      	mov	sp, r7
 8001020:	bc80      	pop	{r7}
 8001022:	4770      	bx	lr
 8001024:	200001ac 	.word	0x200001ac
 8001028:	200001b0 	.word	0x200001b0
 800102c:	200001b4 	.word	0x200001b4
 8001030:	200001b8 	.word	0x200001b8
 8001034:	200001bc 	.word	0x200001bc
 8001038:	200001c0 	.word	0x200001c0
 800103c:	200001c4 	.word	0x200001c4
 8001040:	200001c8 	.word	0x200001c8
 8001044:	200001cc 	.word	0x200001cc
 8001048:	200001d0 	.word	0x200001d0
 800104c:	200001d4 	.word	0x200001d4
 8001050:	200001d8 	.word	0x200001d8
 8001054:	200001dc 	.word	0x200001dc
 8001058:	200001e0 	.word	0x200001e0
 800105c:	200001e4 	.word	0x200001e4
 8001060:	200001e8 	.word	0x200001e8
 8001064:	200001ec 	.word	0x200001ec
 8001068:	200001f0 	.word	0x200001f0
 800106c:	200001f4 	.word	0x200001f4
 8001070:	200001f8 	.word	0x200001f8

08001074 <HAL_MspInit>:
 8001074:	b480      	push	{r7}
 8001076:	b085      	sub	sp, #20
 8001078:	af00      	add	r7, sp, #0
 800107a:	4b15      	ldr	r3, [pc, #84]	; (80010d0 <HAL_MspInit+0x5c>)
 800107c:	699b      	ldr	r3, [r3, #24]
 800107e:	4a14      	ldr	r2, [pc, #80]	; (80010d0 <HAL_MspInit+0x5c>)
 8001080:	f043 0301 	orr.w	r3, r3, #1
 8001084:	6193      	str	r3, [r2, #24]
 8001086:	4b12      	ldr	r3, [pc, #72]	; (80010d0 <HAL_MspInit+0x5c>)
 8001088:	699b      	ldr	r3, [r3, #24]
 800108a:	f003 0301 	and.w	r3, r3, #1
 800108e:	60bb      	str	r3, [r7, #8]
 8001090:	68bb      	ldr	r3, [r7, #8]
 8001092:	4b0f      	ldr	r3, [pc, #60]	; (80010d0 <HAL_MspInit+0x5c>)
 8001094:	69db      	ldr	r3, [r3, #28]
 8001096:	4a0e      	ldr	r2, [pc, #56]	; (80010d0 <HAL_MspInit+0x5c>)
 8001098:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800109c:	61d3      	str	r3, [r2, #28]
 800109e:	4b0c      	ldr	r3, [pc, #48]	; (80010d0 <HAL_MspInit+0x5c>)
 80010a0:	69db      	ldr	r3, [r3, #28]
 80010a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80010a6:	607b      	str	r3, [r7, #4]
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	4b0a      	ldr	r3, [pc, #40]	; (80010d4 <HAL_MspInit+0x60>)
 80010ac:	685b      	ldr	r3, [r3, #4]
 80010ae:	60fb      	str	r3, [r7, #12]
 80010b0:	68fb      	ldr	r3, [r7, #12]
 80010b2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80010b6:	60fb      	str	r3, [r7, #12]
 80010b8:	68fb      	ldr	r3, [r7, #12]
 80010ba:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80010be:	60fb      	str	r3, [r7, #12]
 80010c0:	4a04      	ldr	r2, [pc, #16]	; (80010d4 <HAL_MspInit+0x60>)
 80010c2:	68fb      	ldr	r3, [r7, #12]
 80010c4:	6053      	str	r3, [r2, #4]
 80010c6:	bf00      	nop
 80010c8:	3714      	adds	r7, #20
 80010ca:	46bd      	mov	sp, r7
 80010cc:	bc80      	pop	{r7}
 80010ce:	4770      	bx	lr
 80010d0:	40021000 	.word	0x40021000
 80010d4:	40010000 	.word	0x40010000

080010d8 <HAL_I2C_MspInit>:
 80010d8:	b580      	push	{r7, lr}
 80010da:	b088      	sub	sp, #32
 80010dc:	af00      	add	r7, sp, #0
 80010de:	6078      	str	r0, [r7, #4]
 80010e0:	f107 0310 	add.w	r3, r7, #16
 80010e4:	2200      	movs	r2, #0
 80010e6:	601a      	str	r2, [r3, #0]
 80010e8:	605a      	str	r2, [r3, #4]
 80010ea:	609a      	str	r2, [r3, #8]
 80010ec:	60da      	str	r2, [r3, #12]
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	681b      	ldr	r3, [r3, #0]
 80010f2:	4a15      	ldr	r2, [pc, #84]	; (8001148 <HAL_I2C_MspInit+0x70>)
 80010f4:	4293      	cmp	r3, r2
 80010f6:	d123      	bne.n	8001140 <HAL_I2C_MspInit+0x68>
 80010f8:	4b14      	ldr	r3, [pc, #80]	; (800114c <HAL_I2C_MspInit+0x74>)
 80010fa:	699b      	ldr	r3, [r3, #24]
 80010fc:	4a13      	ldr	r2, [pc, #76]	; (800114c <HAL_I2C_MspInit+0x74>)
 80010fe:	f043 0308 	orr.w	r3, r3, #8
 8001102:	6193      	str	r3, [r2, #24]
 8001104:	4b11      	ldr	r3, [pc, #68]	; (800114c <HAL_I2C_MspInit+0x74>)
 8001106:	699b      	ldr	r3, [r3, #24]
 8001108:	f003 0308 	and.w	r3, r3, #8
 800110c:	60fb      	str	r3, [r7, #12]
 800110e:	68fb      	ldr	r3, [r7, #12]
 8001110:	23c0      	movs	r3, #192	; 0xc0
 8001112:	613b      	str	r3, [r7, #16]
 8001114:	2312      	movs	r3, #18
 8001116:	617b      	str	r3, [r7, #20]
 8001118:	2303      	movs	r3, #3
 800111a:	61fb      	str	r3, [r7, #28]
 800111c:	f107 0310 	add.w	r3, r7, #16
 8001120:	4619      	mov	r1, r3
 8001122:	480b      	ldr	r0, [pc, #44]	; (8001150 <HAL_I2C_MspInit+0x78>)
 8001124:	f000 fa62 	bl	80015ec <HAL_GPIO_Init>
 8001128:	4b08      	ldr	r3, [pc, #32]	; (800114c <HAL_I2C_MspInit+0x74>)
 800112a:	69db      	ldr	r3, [r3, #28]
 800112c:	4a07      	ldr	r2, [pc, #28]	; (800114c <HAL_I2C_MspInit+0x74>)
 800112e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001132:	61d3      	str	r3, [r2, #28]
 8001134:	4b05      	ldr	r3, [pc, #20]	; (800114c <HAL_I2C_MspInit+0x74>)
 8001136:	69db      	ldr	r3, [r3, #28]
 8001138:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800113c:	60bb      	str	r3, [r7, #8]
 800113e:	68bb      	ldr	r3, [r7, #8]
 8001140:	bf00      	nop
 8001142:	3720      	adds	r7, #32
 8001144:	46bd      	mov	sp, r7
 8001146:	bd80      	pop	{r7, pc}
 8001148:	40005400 	.word	0x40005400
 800114c:	40021000 	.word	0x40021000
 8001150:	40010c00 	.word	0x40010c00

08001154 <HAL_TIM_Base_MspInit>:
 8001154:	b580      	push	{r7, lr}
 8001156:	b084      	sub	sp, #16
 8001158:	af00      	add	r7, sp, #0
 800115a:	6078      	str	r0, [r7, #4]
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001164:	d113      	bne.n	800118e <HAL_TIM_Base_MspInit+0x3a>
 8001166:	4b0c      	ldr	r3, [pc, #48]	; (8001198 <HAL_TIM_Base_MspInit+0x44>)
 8001168:	69db      	ldr	r3, [r3, #28]
 800116a:	4a0b      	ldr	r2, [pc, #44]	; (8001198 <HAL_TIM_Base_MspInit+0x44>)
 800116c:	f043 0301 	orr.w	r3, r3, #1
 8001170:	61d3      	str	r3, [r2, #28]
 8001172:	4b09      	ldr	r3, [pc, #36]	; (8001198 <HAL_TIM_Base_MspInit+0x44>)
 8001174:	69db      	ldr	r3, [r3, #28]
 8001176:	f003 0301 	and.w	r3, r3, #1
 800117a:	60fb      	str	r3, [r7, #12]
 800117c:	68fb      	ldr	r3, [r7, #12]
 800117e:	2200      	movs	r2, #0
 8001180:	2100      	movs	r1, #0
 8001182:	201c      	movs	r0, #28
 8001184:	f000 f9fb 	bl	800157e <HAL_NVIC_SetPriority>
 8001188:	201c      	movs	r0, #28
 800118a:	f000 fa14 	bl	80015b6 <HAL_NVIC_EnableIRQ>
 800118e:	bf00      	nop
 8001190:	3710      	adds	r7, #16
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}
 8001196:	bf00      	nop
 8001198:	40021000 	.word	0x40021000

0800119c <NMI_Handler>:
 800119c:	b480      	push	{r7}
 800119e:	af00      	add	r7, sp, #0
 80011a0:	e7fe      	b.n	80011a0 <NMI_Handler+0x4>

080011a2 <HardFault_Handler>:
 80011a2:	b480      	push	{r7}
 80011a4:	af00      	add	r7, sp, #0
 80011a6:	e7fe      	b.n	80011a6 <HardFault_Handler+0x4>

080011a8 <MemManage_Handler>:
 80011a8:	b480      	push	{r7}
 80011aa:	af00      	add	r7, sp, #0
 80011ac:	e7fe      	b.n	80011ac <MemManage_Handler+0x4>

080011ae <BusFault_Handler>:
 80011ae:	b480      	push	{r7}
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	e7fe      	b.n	80011b2 <BusFault_Handler+0x4>

080011b4 <UsageFault_Handler>:
 80011b4:	b480      	push	{r7}
 80011b6:	af00      	add	r7, sp, #0
 80011b8:	e7fe      	b.n	80011b8 <UsageFault_Handler+0x4>

080011ba <SVC_Handler>:
 80011ba:	b480      	push	{r7}
 80011bc:	af00      	add	r7, sp, #0
 80011be:	bf00      	nop
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bc80      	pop	{r7}
 80011c4:	4770      	bx	lr

080011c6 <DebugMon_Handler>:
 80011c6:	b480      	push	{r7}
 80011c8:	af00      	add	r7, sp, #0
 80011ca:	bf00      	nop
 80011cc:	46bd      	mov	sp, r7
 80011ce:	bc80      	pop	{r7}
 80011d0:	4770      	bx	lr

080011d2 <PendSV_Handler>:
 80011d2:	b480      	push	{r7}
 80011d4:	af00      	add	r7, sp, #0
 80011d6:	bf00      	nop
 80011d8:	46bd      	mov	sp, r7
 80011da:	bc80      	pop	{r7}
 80011dc:	4770      	bx	lr

080011de <SysTick_Handler>:
 80011de:	b580      	push	{r7, lr}
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	f000 f8b5 	bl	8001350 <HAL_IncTick>
 80011e6:	bf00      	nop
 80011e8:	bd80      	pop	{r7, pc}
	...

080011ec <TIM2_IRQHandler>:
 80011ec:	b580      	push	{r7, lr}
 80011ee:	af00      	add	r7, sp, #0
 80011f0:	4802      	ldr	r0, [pc, #8]	; (80011fc <TIM2_IRQHandler+0x10>)
 80011f2:	f001 fca3 	bl	8002b3c <HAL_TIM_IRQHandler>
 80011f6:	bf00      	nop
 80011f8:	bd80      	pop	{r7, pc}
 80011fa:	bf00      	nop
 80011fc:	20000164 	.word	0x20000164

08001200 <_sbrk>:
 8001200:	b580      	push	{r7, lr}
 8001202:	b086      	sub	sp, #24
 8001204:	af00      	add	r7, sp, #0
 8001206:	6078      	str	r0, [r7, #4]
 8001208:	4a14      	ldr	r2, [pc, #80]	; (800125c <_sbrk+0x5c>)
 800120a:	4b15      	ldr	r3, [pc, #84]	; (8001260 <_sbrk+0x60>)
 800120c:	1ad3      	subs	r3, r2, r3
 800120e:	617b      	str	r3, [r7, #20]
 8001210:	697b      	ldr	r3, [r7, #20]
 8001212:	613b      	str	r3, [r7, #16]
 8001214:	4b13      	ldr	r3, [pc, #76]	; (8001264 <_sbrk+0x64>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	2b00      	cmp	r3, #0
 800121a:	d102      	bne.n	8001222 <_sbrk+0x22>
 800121c:	4b11      	ldr	r3, [pc, #68]	; (8001264 <_sbrk+0x64>)
 800121e:	4a12      	ldr	r2, [pc, #72]	; (8001268 <_sbrk+0x68>)
 8001220:	601a      	str	r2, [r3, #0]
 8001222:	4b10      	ldr	r3, [pc, #64]	; (8001264 <_sbrk+0x64>)
 8001224:	681a      	ldr	r2, [r3, #0]
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	4413      	add	r3, r2
 800122a:	693a      	ldr	r2, [r7, #16]
 800122c:	429a      	cmp	r2, r3
 800122e:	d207      	bcs.n	8001240 <_sbrk+0x40>
 8001230:	f001 ffdc 	bl	80031ec <__errno>
 8001234:	4603      	mov	r3, r0
 8001236:	220c      	movs	r2, #12
 8001238:	601a      	str	r2, [r3, #0]
 800123a:	f04f 33ff 	mov.w	r3, #4294967295
 800123e:	e009      	b.n	8001254 <_sbrk+0x54>
 8001240:	4b08      	ldr	r3, [pc, #32]	; (8001264 <_sbrk+0x64>)
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	60fb      	str	r3, [r7, #12]
 8001246:	4b07      	ldr	r3, [pc, #28]	; (8001264 <_sbrk+0x64>)
 8001248:	681a      	ldr	r2, [r3, #0]
 800124a:	687b      	ldr	r3, [r7, #4]
 800124c:	4413      	add	r3, r2
 800124e:	4a05      	ldr	r2, [pc, #20]	; (8001264 <_sbrk+0x64>)
 8001250:	6013      	str	r3, [r2, #0]
 8001252:	68fb      	ldr	r3, [r7, #12]
 8001254:	4618      	mov	r0, r3
 8001256:	3718      	adds	r7, #24
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}
 800125c:	20005000 	.word	0x20005000
 8001260:	00000400 	.word	0x00000400
 8001264:	200001fc 	.word	0x200001fc
 8001268:	20000218 	.word	0x20000218

0800126c <SystemInit>:
 800126c:	b480      	push	{r7}
 800126e:	af00      	add	r7, sp, #0
 8001270:	bf00      	nop
 8001272:	46bd      	mov	sp, r7
 8001274:	bc80      	pop	{r7}
 8001276:	4770      	bx	lr

08001278 <Reset_Handler>:
 8001278:	480c      	ldr	r0, [pc, #48]	; (80012ac <LoopFillZerobss+0x12>)
 800127a:	490d      	ldr	r1, [pc, #52]	; (80012b0 <LoopFillZerobss+0x16>)
 800127c:	4a0d      	ldr	r2, [pc, #52]	; (80012b4 <LoopFillZerobss+0x1a>)
 800127e:	2300      	movs	r3, #0
 8001280:	e002      	b.n	8001288 <LoopCopyDataInit>

08001282 <CopyDataInit>:
 8001282:	58d4      	ldr	r4, [r2, r3]
 8001284:	50c4      	str	r4, [r0, r3]
 8001286:	3304      	adds	r3, #4

08001288 <LoopCopyDataInit>:
 8001288:	18c4      	adds	r4, r0, r3
 800128a:	428c      	cmp	r4, r1
 800128c:	d3f9      	bcc.n	8001282 <CopyDataInit>
 800128e:	4a0a      	ldr	r2, [pc, #40]	; (80012b8 <LoopFillZerobss+0x1e>)
 8001290:	4c0a      	ldr	r4, [pc, #40]	; (80012bc <LoopFillZerobss+0x22>)
 8001292:	2300      	movs	r3, #0
 8001294:	e001      	b.n	800129a <LoopFillZerobss>

08001296 <FillZerobss>:
 8001296:	6013      	str	r3, [r2, #0]
 8001298:	3204      	adds	r2, #4

0800129a <LoopFillZerobss>:
 800129a:	42a2      	cmp	r2, r4
 800129c:	d3fb      	bcc.n	8001296 <FillZerobss>
 800129e:	f7ff ffe5 	bl	800126c <SystemInit>
 80012a2:	f001 ffa9 	bl	80031f8 <__libc_init_array>
 80012a6:	f7ff fc57 	bl	8000b58 <main>
 80012aa:	4770      	bx	lr
 80012ac:	20000000 	.word	0x20000000
 80012b0:	20000090 	.word	0x20000090
 80012b4:	08003bdc 	.word	0x08003bdc
 80012b8:	20000090 	.word	0x20000090
 80012bc:	20000214 	.word	0x20000214

080012c0 <ADC1_2_IRQHandler>:
 80012c0:	e7fe      	b.n	80012c0 <ADC1_2_IRQHandler>
	...

080012c4 <HAL_Init>:
 80012c4:	b580      	push	{r7, lr}
 80012c6:	af00      	add	r7, sp, #0
 80012c8:	4b08      	ldr	r3, [pc, #32]	; (80012ec <HAL_Init+0x28>)
 80012ca:	681b      	ldr	r3, [r3, #0]
 80012cc:	4a07      	ldr	r2, [pc, #28]	; (80012ec <HAL_Init+0x28>)
 80012ce:	f043 0310 	orr.w	r3, r3, #16
 80012d2:	6013      	str	r3, [r2, #0]
 80012d4:	2003      	movs	r0, #3
 80012d6:	f000 f947 	bl	8001568 <HAL_NVIC_SetPriorityGrouping>
 80012da:	200f      	movs	r0, #15
 80012dc:	f000 f808 	bl	80012f0 <HAL_InitTick>
 80012e0:	f7ff fec8 	bl	8001074 <HAL_MspInit>
 80012e4:	2300      	movs	r3, #0
 80012e6:	4618      	mov	r0, r3
 80012e8:	bd80      	pop	{r7, pc}
 80012ea:	bf00      	nop
 80012ec:	40022000 	.word	0x40022000

080012f0 <HAL_InitTick>:
 80012f0:	b580      	push	{r7, lr}
 80012f2:	b082      	sub	sp, #8
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	6078      	str	r0, [r7, #4]
 80012f8:	4b12      	ldr	r3, [pc, #72]	; (8001344 <HAL_InitTick+0x54>)
 80012fa:	681a      	ldr	r2, [r3, #0]
 80012fc:	4b12      	ldr	r3, [pc, #72]	; (8001348 <HAL_InitTick+0x58>)
 80012fe:	781b      	ldrb	r3, [r3, #0]
 8001300:	4619      	mov	r1, r3
 8001302:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001306:	fbb3 f3f1 	udiv	r3, r3, r1
 800130a:	fbb2 f3f3 	udiv	r3, r2, r3
 800130e:	4618      	mov	r0, r3
 8001310:	f000 f95f 	bl	80015d2 <HAL_SYSTICK_Config>
 8001314:	4603      	mov	r3, r0
 8001316:	2b00      	cmp	r3, #0
 8001318:	d001      	beq.n	800131e <HAL_InitTick+0x2e>
 800131a:	2301      	movs	r3, #1
 800131c:	e00e      	b.n	800133c <HAL_InitTick+0x4c>
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	2b0f      	cmp	r3, #15
 8001322:	d80a      	bhi.n	800133a <HAL_InitTick+0x4a>
 8001324:	2200      	movs	r2, #0
 8001326:	6879      	ldr	r1, [r7, #4]
 8001328:	f04f 30ff 	mov.w	r0, #4294967295
 800132c:	f000 f927 	bl	800157e <HAL_NVIC_SetPriority>
 8001330:	4a06      	ldr	r2, [pc, #24]	; (800134c <HAL_InitTick+0x5c>)
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	6013      	str	r3, [r2, #0]
 8001336:	2300      	movs	r3, #0
 8001338:	e000      	b.n	800133c <HAL_InitTick+0x4c>
 800133a:	2301      	movs	r3, #1
 800133c:	4618      	mov	r0, r3
 800133e:	3708      	adds	r7, #8
 8001340:	46bd      	mov	sp, r7
 8001342:	bd80      	pop	{r7, pc}
 8001344:	20000020 	.word	0x20000020
 8001348:	20000028 	.word	0x20000028
 800134c:	20000024 	.word	0x20000024

08001350 <HAL_IncTick>:
 8001350:	b480      	push	{r7}
 8001352:	af00      	add	r7, sp, #0
 8001354:	4b05      	ldr	r3, [pc, #20]	; (800136c <HAL_IncTick+0x1c>)
 8001356:	781b      	ldrb	r3, [r3, #0]
 8001358:	461a      	mov	r2, r3
 800135a:	4b05      	ldr	r3, [pc, #20]	; (8001370 <HAL_IncTick+0x20>)
 800135c:	681b      	ldr	r3, [r3, #0]
 800135e:	4413      	add	r3, r2
 8001360:	4a03      	ldr	r2, [pc, #12]	; (8001370 <HAL_IncTick+0x20>)
 8001362:	6013      	str	r3, [r2, #0]
 8001364:	bf00      	nop
 8001366:	46bd      	mov	sp, r7
 8001368:	bc80      	pop	{r7}
 800136a:	4770      	bx	lr
 800136c:	20000028 	.word	0x20000028
 8001370:	20000200 	.word	0x20000200

08001374 <HAL_GetTick>:
 8001374:	b480      	push	{r7}
 8001376:	af00      	add	r7, sp, #0
 8001378:	4b02      	ldr	r3, [pc, #8]	; (8001384 <HAL_GetTick+0x10>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	4618      	mov	r0, r3
 800137e:	46bd      	mov	sp, r7
 8001380:	bc80      	pop	{r7}
 8001382:	4770      	bx	lr
 8001384:	20000200 	.word	0x20000200

08001388 <HAL_Delay>:
 8001388:	b580      	push	{r7, lr}
 800138a:	b084      	sub	sp, #16
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
 8001390:	f7ff fff0 	bl	8001374 <HAL_GetTick>
 8001394:	60b8      	str	r0, [r7, #8]
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	60fb      	str	r3, [r7, #12]
 800139a:	68fb      	ldr	r3, [r7, #12]
 800139c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80013a0:	d005      	beq.n	80013ae <HAL_Delay+0x26>
 80013a2:	4b0a      	ldr	r3, [pc, #40]	; (80013cc <HAL_Delay+0x44>)
 80013a4:	781b      	ldrb	r3, [r3, #0]
 80013a6:	461a      	mov	r2, r3
 80013a8:	68fb      	ldr	r3, [r7, #12]
 80013aa:	4413      	add	r3, r2
 80013ac:	60fb      	str	r3, [r7, #12]
 80013ae:	bf00      	nop
 80013b0:	f7ff ffe0 	bl	8001374 <HAL_GetTick>
 80013b4:	4602      	mov	r2, r0
 80013b6:	68bb      	ldr	r3, [r7, #8]
 80013b8:	1ad3      	subs	r3, r2, r3
 80013ba:	68fa      	ldr	r2, [r7, #12]
 80013bc:	429a      	cmp	r2, r3
 80013be:	d8f7      	bhi.n	80013b0 <HAL_Delay+0x28>
 80013c0:	bf00      	nop
 80013c2:	bf00      	nop
 80013c4:	3710      	adds	r7, #16
 80013c6:	46bd      	mov	sp, r7
 80013c8:	bd80      	pop	{r7, pc}
 80013ca:	bf00      	nop
 80013cc:	20000028 	.word	0x20000028

080013d0 <__NVIC_SetPriorityGrouping>:
 80013d0:	b480      	push	{r7}
 80013d2:	b085      	sub	sp, #20
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6078      	str	r0, [r7, #4]
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	f003 0307 	and.w	r3, r3, #7
 80013de:	60fb      	str	r3, [r7, #12]
 80013e0:	4b0c      	ldr	r3, [pc, #48]	; (8001414 <__NVIC_SetPriorityGrouping+0x44>)
 80013e2:	68db      	ldr	r3, [r3, #12]
 80013e4:	60bb      	str	r3, [r7, #8]
 80013e6:	68ba      	ldr	r2, [r7, #8]
 80013e8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80013ec:	4013      	ands	r3, r2
 80013ee:	60bb      	str	r3, [r7, #8]
 80013f0:	68fb      	ldr	r3, [r7, #12]
 80013f2:	021a      	lsls	r2, r3, #8
 80013f4:	68bb      	ldr	r3, [r7, #8]
 80013f6:	4313      	orrs	r3, r2
 80013f8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80013fc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001400:	60bb      	str	r3, [r7, #8]
 8001402:	4a04      	ldr	r2, [pc, #16]	; (8001414 <__NVIC_SetPriorityGrouping+0x44>)
 8001404:	68bb      	ldr	r3, [r7, #8]
 8001406:	60d3      	str	r3, [r2, #12]
 8001408:	bf00      	nop
 800140a:	3714      	adds	r7, #20
 800140c:	46bd      	mov	sp, r7
 800140e:	bc80      	pop	{r7}
 8001410:	4770      	bx	lr
 8001412:	bf00      	nop
 8001414:	e000ed00 	.word	0xe000ed00

08001418 <__NVIC_GetPriorityGrouping>:
 8001418:	b480      	push	{r7}
 800141a:	af00      	add	r7, sp, #0
 800141c:	4b04      	ldr	r3, [pc, #16]	; (8001430 <__NVIC_GetPriorityGrouping+0x18>)
 800141e:	68db      	ldr	r3, [r3, #12]
 8001420:	0a1b      	lsrs	r3, r3, #8
 8001422:	f003 0307 	and.w	r3, r3, #7
 8001426:	4618      	mov	r0, r3
 8001428:	46bd      	mov	sp, r7
 800142a:	bc80      	pop	{r7}
 800142c:	4770      	bx	lr
 800142e:	bf00      	nop
 8001430:	e000ed00 	.word	0xe000ed00

08001434 <__NVIC_EnableIRQ>:
 8001434:	b480      	push	{r7}
 8001436:	b083      	sub	sp, #12
 8001438:	af00      	add	r7, sp, #0
 800143a:	4603      	mov	r3, r0
 800143c:	71fb      	strb	r3, [r7, #7]
 800143e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001442:	2b00      	cmp	r3, #0
 8001444:	db0b      	blt.n	800145e <__NVIC_EnableIRQ+0x2a>
 8001446:	79fb      	ldrb	r3, [r7, #7]
 8001448:	f003 021f 	and.w	r2, r3, #31
 800144c:	4906      	ldr	r1, [pc, #24]	; (8001468 <__NVIC_EnableIRQ+0x34>)
 800144e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001452:	095b      	lsrs	r3, r3, #5
 8001454:	2001      	movs	r0, #1
 8001456:	fa00 f202 	lsl.w	r2, r0, r2
 800145a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800145e:	bf00      	nop
 8001460:	370c      	adds	r7, #12
 8001462:	46bd      	mov	sp, r7
 8001464:	bc80      	pop	{r7}
 8001466:	4770      	bx	lr
 8001468:	e000e100 	.word	0xe000e100

0800146c <__NVIC_SetPriority>:
 800146c:	b480      	push	{r7}
 800146e:	b083      	sub	sp, #12
 8001470:	af00      	add	r7, sp, #0
 8001472:	4603      	mov	r3, r0
 8001474:	6039      	str	r1, [r7, #0]
 8001476:	71fb      	strb	r3, [r7, #7]
 8001478:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800147c:	2b00      	cmp	r3, #0
 800147e:	db0a      	blt.n	8001496 <__NVIC_SetPriority+0x2a>
 8001480:	683b      	ldr	r3, [r7, #0]
 8001482:	b2da      	uxtb	r2, r3
 8001484:	490c      	ldr	r1, [pc, #48]	; (80014b8 <__NVIC_SetPriority+0x4c>)
 8001486:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800148a:	0112      	lsls	r2, r2, #4
 800148c:	b2d2      	uxtb	r2, r2
 800148e:	440b      	add	r3, r1
 8001490:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001494:	e00a      	b.n	80014ac <__NVIC_SetPriority+0x40>
 8001496:	683b      	ldr	r3, [r7, #0]
 8001498:	b2da      	uxtb	r2, r3
 800149a:	4908      	ldr	r1, [pc, #32]	; (80014bc <__NVIC_SetPriority+0x50>)
 800149c:	79fb      	ldrb	r3, [r7, #7]
 800149e:	f003 030f 	and.w	r3, r3, #15
 80014a2:	3b04      	subs	r3, #4
 80014a4:	0112      	lsls	r2, r2, #4
 80014a6:	b2d2      	uxtb	r2, r2
 80014a8:	440b      	add	r3, r1
 80014aa:	761a      	strb	r2, [r3, #24]
 80014ac:	bf00      	nop
 80014ae:	370c      	adds	r7, #12
 80014b0:	46bd      	mov	sp, r7
 80014b2:	bc80      	pop	{r7}
 80014b4:	4770      	bx	lr
 80014b6:	bf00      	nop
 80014b8:	e000e100 	.word	0xe000e100
 80014bc:	e000ed00 	.word	0xe000ed00

080014c0 <NVIC_EncodePriority>:
 80014c0:	b480      	push	{r7}
 80014c2:	b089      	sub	sp, #36	; 0x24
 80014c4:	af00      	add	r7, sp, #0
 80014c6:	60f8      	str	r0, [r7, #12]
 80014c8:	60b9      	str	r1, [r7, #8]
 80014ca:	607a      	str	r2, [r7, #4]
 80014cc:	68fb      	ldr	r3, [r7, #12]
 80014ce:	f003 0307 	and.w	r3, r3, #7
 80014d2:	61fb      	str	r3, [r7, #28]
 80014d4:	69fb      	ldr	r3, [r7, #28]
 80014d6:	f1c3 0307 	rsb	r3, r3, #7
 80014da:	2b04      	cmp	r3, #4
 80014dc:	bf28      	it	cs
 80014de:	2304      	movcs	r3, #4
 80014e0:	61bb      	str	r3, [r7, #24]
 80014e2:	69fb      	ldr	r3, [r7, #28]
 80014e4:	3304      	adds	r3, #4
 80014e6:	2b06      	cmp	r3, #6
 80014e8:	d902      	bls.n	80014f0 <NVIC_EncodePriority+0x30>
 80014ea:	69fb      	ldr	r3, [r7, #28]
 80014ec:	3b03      	subs	r3, #3
 80014ee:	e000      	b.n	80014f2 <NVIC_EncodePriority+0x32>
 80014f0:	2300      	movs	r3, #0
 80014f2:	617b      	str	r3, [r7, #20]
 80014f4:	f04f 32ff 	mov.w	r2, #4294967295
 80014f8:	69bb      	ldr	r3, [r7, #24]
 80014fa:	fa02 f303 	lsl.w	r3, r2, r3
 80014fe:	43da      	mvns	r2, r3
 8001500:	68bb      	ldr	r3, [r7, #8]
 8001502:	401a      	ands	r2, r3
 8001504:	697b      	ldr	r3, [r7, #20]
 8001506:	409a      	lsls	r2, r3
 8001508:	f04f 31ff 	mov.w	r1, #4294967295
 800150c:	697b      	ldr	r3, [r7, #20]
 800150e:	fa01 f303 	lsl.w	r3, r1, r3
 8001512:	43d9      	mvns	r1, r3
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	400b      	ands	r3, r1
 8001518:	4313      	orrs	r3, r2
 800151a:	4618      	mov	r0, r3
 800151c:	3724      	adds	r7, #36	; 0x24
 800151e:	46bd      	mov	sp, r7
 8001520:	bc80      	pop	{r7}
 8001522:	4770      	bx	lr

08001524 <SysTick_Config>:
 8001524:	b580      	push	{r7, lr}
 8001526:	b082      	sub	sp, #8
 8001528:	af00      	add	r7, sp, #0
 800152a:	6078      	str	r0, [r7, #4]
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	3b01      	subs	r3, #1
 8001530:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001534:	d301      	bcc.n	800153a <SysTick_Config+0x16>
 8001536:	2301      	movs	r3, #1
 8001538:	e00f      	b.n	800155a <SysTick_Config+0x36>
 800153a:	4a0a      	ldr	r2, [pc, #40]	; (8001564 <SysTick_Config+0x40>)
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	3b01      	subs	r3, #1
 8001540:	6053      	str	r3, [r2, #4]
 8001542:	210f      	movs	r1, #15
 8001544:	f04f 30ff 	mov.w	r0, #4294967295
 8001548:	f7ff ff90 	bl	800146c <__NVIC_SetPriority>
 800154c:	4b05      	ldr	r3, [pc, #20]	; (8001564 <SysTick_Config+0x40>)
 800154e:	2200      	movs	r2, #0
 8001550:	609a      	str	r2, [r3, #8]
 8001552:	4b04      	ldr	r3, [pc, #16]	; (8001564 <SysTick_Config+0x40>)
 8001554:	2207      	movs	r2, #7
 8001556:	601a      	str	r2, [r3, #0]
 8001558:	2300      	movs	r3, #0
 800155a:	4618      	mov	r0, r3
 800155c:	3708      	adds	r7, #8
 800155e:	46bd      	mov	sp, r7
 8001560:	bd80      	pop	{r7, pc}
 8001562:	bf00      	nop
 8001564:	e000e010 	.word	0xe000e010

08001568 <HAL_NVIC_SetPriorityGrouping>:
 8001568:	b580      	push	{r7, lr}
 800156a:	b082      	sub	sp, #8
 800156c:	af00      	add	r7, sp, #0
 800156e:	6078      	str	r0, [r7, #4]
 8001570:	6878      	ldr	r0, [r7, #4]
 8001572:	f7ff ff2d 	bl	80013d0 <__NVIC_SetPriorityGrouping>
 8001576:	bf00      	nop
 8001578:	3708      	adds	r7, #8
 800157a:	46bd      	mov	sp, r7
 800157c:	bd80      	pop	{r7, pc}

0800157e <HAL_NVIC_SetPriority>:
 800157e:	b580      	push	{r7, lr}
 8001580:	b086      	sub	sp, #24
 8001582:	af00      	add	r7, sp, #0
 8001584:	4603      	mov	r3, r0
 8001586:	60b9      	str	r1, [r7, #8]
 8001588:	607a      	str	r2, [r7, #4]
 800158a:	73fb      	strb	r3, [r7, #15]
 800158c:	2300      	movs	r3, #0
 800158e:	617b      	str	r3, [r7, #20]
 8001590:	f7ff ff42 	bl	8001418 <__NVIC_GetPriorityGrouping>
 8001594:	6178      	str	r0, [r7, #20]
 8001596:	687a      	ldr	r2, [r7, #4]
 8001598:	68b9      	ldr	r1, [r7, #8]
 800159a:	6978      	ldr	r0, [r7, #20]
 800159c:	f7ff ff90 	bl	80014c0 <NVIC_EncodePriority>
 80015a0:	4602      	mov	r2, r0
 80015a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015a6:	4611      	mov	r1, r2
 80015a8:	4618      	mov	r0, r3
 80015aa:	f7ff ff5f 	bl	800146c <__NVIC_SetPriority>
 80015ae:	bf00      	nop
 80015b0:	3718      	adds	r7, #24
 80015b2:	46bd      	mov	sp, r7
 80015b4:	bd80      	pop	{r7, pc}

080015b6 <HAL_NVIC_EnableIRQ>:
 80015b6:	b580      	push	{r7, lr}
 80015b8:	b082      	sub	sp, #8
 80015ba:	af00      	add	r7, sp, #0
 80015bc:	4603      	mov	r3, r0
 80015be:	71fb      	strb	r3, [r7, #7]
 80015c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015c4:	4618      	mov	r0, r3
 80015c6:	f7ff ff35 	bl	8001434 <__NVIC_EnableIRQ>
 80015ca:	bf00      	nop
 80015cc:	3708      	adds	r7, #8
 80015ce:	46bd      	mov	sp, r7
 80015d0:	bd80      	pop	{r7, pc}

080015d2 <HAL_SYSTICK_Config>:
 80015d2:	b580      	push	{r7, lr}
 80015d4:	b082      	sub	sp, #8
 80015d6:	af00      	add	r7, sp, #0
 80015d8:	6078      	str	r0, [r7, #4]
 80015da:	6878      	ldr	r0, [r7, #4]
 80015dc:	f7ff ffa2 	bl	8001524 <SysTick_Config>
 80015e0:	4603      	mov	r3, r0
 80015e2:	4618      	mov	r0, r3
 80015e4:	3708      	adds	r7, #8
 80015e6:	46bd      	mov	sp, r7
 80015e8:	bd80      	pop	{r7, pc}
	...

080015ec <HAL_GPIO_Init>:
 80015ec:	b480      	push	{r7}
 80015ee:	b08b      	sub	sp, #44	; 0x2c
 80015f0:	af00      	add	r7, sp, #0
 80015f2:	6078      	str	r0, [r7, #4]
 80015f4:	6039      	str	r1, [r7, #0]
 80015f6:	2300      	movs	r3, #0
 80015f8:	627b      	str	r3, [r7, #36]	; 0x24
 80015fa:	2300      	movs	r3, #0
 80015fc:	623b      	str	r3, [r7, #32]
 80015fe:	e169      	b.n	80018d4 <HAL_GPIO_Init+0x2e8>
 8001600:	2201      	movs	r2, #1
 8001602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001604:	fa02 f303 	lsl.w	r3, r2, r3
 8001608:	61fb      	str	r3, [r7, #28]
 800160a:	683b      	ldr	r3, [r7, #0]
 800160c:	681b      	ldr	r3, [r3, #0]
 800160e:	69fa      	ldr	r2, [r7, #28]
 8001610:	4013      	ands	r3, r2
 8001612:	61bb      	str	r3, [r7, #24]
 8001614:	69ba      	ldr	r2, [r7, #24]
 8001616:	69fb      	ldr	r3, [r7, #28]
 8001618:	429a      	cmp	r2, r3
 800161a:	f040 8158 	bne.w	80018ce <HAL_GPIO_Init+0x2e2>
 800161e:	683b      	ldr	r3, [r7, #0]
 8001620:	685b      	ldr	r3, [r3, #4]
 8001622:	4a9a      	ldr	r2, [pc, #616]	; (800188c <HAL_GPIO_Init+0x2a0>)
 8001624:	4293      	cmp	r3, r2
 8001626:	d05e      	beq.n	80016e6 <HAL_GPIO_Init+0xfa>
 8001628:	4a98      	ldr	r2, [pc, #608]	; (800188c <HAL_GPIO_Init+0x2a0>)
 800162a:	4293      	cmp	r3, r2
 800162c:	d875      	bhi.n	800171a <HAL_GPIO_Init+0x12e>
 800162e:	4a98      	ldr	r2, [pc, #608]	; (8001890 <HAL_GPIO_Init+0x2a4>)
 8001630:	4293      	cmp	r3, r2
 8001632:	d058      	beq.n	80016e6 <HAL_GPIO_Init+0xfa>
 8001634:	4a96      	ldr	r2, [pc, #600]	; (8001890 <HAL_GPIO_Init+0x2a4>)
 8001636:	4293      	cmp	r3, r2
 8001638:	d86f      	bhi.n	800171a <HAL_GPIO_Init+0x12e>
 800163a:	4a96      	ldr	r2, [pc, #600]	; (8001894 <HAL_GPIO_Init+0x2a8>)
 800163c:	4293      	cmp	r3, r2
 800163e:	d052      	beq.n	80016e6 <HAL_GPIO_Init+0xfa>
 8001640:	4a94      	ldr	r2, [pc, #592]	; (8001894 <HAL_GPIO_Init+0x2a8>)
 8001642:	4293      	cmp	r3, r2
 8001644:	d869      	bhi.n	800171a <HAL_GPIO_Init+0x12e>
 8001646:	4a94      	ldr	r2, [pc, #592]	; (8001898 <HAL_GPIO_Init+0x2ac>)
 8001648:	4293      	cmp	r3, r2
 800164a:	d04c      	beq.n	80016e6 <HAL_GPIO_Init+0xfa>
 800164c:	4a92      	ldr	r2, [pc, #584]	; (8001898 <HAL_GPIO_Init+0x2ac>)
 800164e:	4293      	cmp	r3, r2
 8001650:	d863      	bhi.n	800171a <HAL_GPIO_Init+0x12e>
 8001652:	4a92      	ldr	r2, [pc, #584]	; (800189c <HAL_GPIO_Init+0x2b0>)
 8001654:	4293      	cmp	r3, r2
 8001656:	d046      	beq.n	80016e6 <HAL_GPIO_Init+0xfa>
 8001658:	4a90      	ldr	r2, [pc, #576]	; (800189c <HAL_GPIO_Init+0x2b0>)
 800165a:	4293      	cmp	r3, r2
 800165c:	d85d      	bhi.n	800171a <HAL_GPIO_Init+0x12e>
 800165e:	2b12      	cmp	r3, #18
 8001660:	d82a      	bhi.n	80016b8 <HAL_GPIO_Init+0xcc>
 8001662:	2b12      	cmp	r3, #18
 8001664:	d859      	bhi.n	800171a <HAL_GPIO_Init+0x12e>
 8001666:	a201      	add	r2, pc, #4	; (adr r2, 800166c <HAL_GPIO_Init+0x80>)
 8001668:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800166c:	080016e7 	.word	0x080016e7
 8001670:	080016c1 	.word	0x080016c1
 8001674:	080016d3 	.word	0x080016d3
 8001678:	08001715 	.word	0x08001715
 800167c:	0800171b 	.word	0x0800171b
 8001680:	0800171b 	.word	0x0800171b
 8001684:	0800171b 	.word	0x0800171b
 8001688:	0800171b 	.word	0x0800171b
 800168c:	0800171b 	.word	0x0800171b
 8001690:	0800171b 	.word	0x0800171b
 8001694:	0800171b 	.word	0x0800171b
 8001698:	0800171b 	.word	0x0800171b
 800169c:	0800171b 	.word	0x0800171b
 80016a0:	0800171b 	.word	0x0800171b
 80016a4:	0800171b 	.word	0x0800171b
 80016a8:	0800171b 	.word	0x0800171b
 80016ac:	0800171b 	.word	0x0800171b
 80016b0:	080016c9 	.word	0x080016c9
 80016b4:	080016dd 	.word	0x080016dd
 80016b8:	4a79      	ldr	r2, [pc, #484]	; (80018a0 <HAL_GPIO_Init+0x2b4>)
 80016ba:	4293      	cmp	r3, r2
 80016bc:	d013      	beq.n	80016e6 <HAL_GPIO_Init+0xfa>
 80016be:	e02c      	b.n	800171a <HAL_GPIO_Init+0x12e>
 80016c0:	683b      	ldr	r3, [r7, #0]
 80016c2:	68db      	ldr	r3, [r3, #12]
 80016c4:	623b      	str	r3, [r7, #32]
 80016c6:	e029      	b.n	800171c <HAL_GPIO_Init+0x130>
 80016c8:	683b      	ldr	r3, [r7, #0]
 80016ca:	68db      	ldr	r3, [r3, #12]
 80016cc:	3304      	adds	r3, #4
 80016ce:	623b      	str	r3, [r7, #32]
 80016d0:	e024      	b.n	800171c <HAL_GPIO_Init+0x130>
 80016d2:	683b      	ldr	r3, [r7, #0]
 80016d4:	68db      	ldr	r3, [r3, #12]
 80016d6:	3308      	adds	r3, #8
 80016d8:	623b      	str	r3, [r7, #32]
 80016da:	e01f      	b.n	800171c <HAL_GPIO_Init+0x130>
 80016dc:	683b      	ldr	r3, [r7, #0]
 80016de:	68db      	ldr	r3, [r3, #12]
 80016e0:	330c      	adds	r3, #12
 80016e2:	623b      	str	r3, [r7, #32]
 80016e4:	e01a      	b.n	800171c <HAL_GPIO_Init+0x130>
 80016e6:	683b      	ldr	r3, [r7, #0]
 80016e8:	689b      	ldr	r3, [r3, #8]
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d102      	bne.n	80016f4 <HAL_GPIO_Init+0x108>
 80016ee:	2304      	movs	r3, #4
 80016f0:	623b      	str	r3, [r7, #32]
 80016f2:	e013      	b.n	800171c <HAL_GPIO_Init+0x130>
 80016f4:	683b      	ldr	r3, [r7, #0]
 80016f6:	689b      	ldr	r3, [r3, #8]
 80016f8:	2b01      	cmp	r3, #1
 80016fa:	d105      	bne.n	8001708 <HAL_GPIO_Init+0x11c>
 80016fc:	2308      	movs	r3, #8
 80016fe:	623b      	str	r3, [r7, #32]
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	69fa      	ldr	r2, [r7, #28]
 8001704:	611a      	str	r2, [r3, #16]
 8001706:	e009      	b.n	800171c <HAL_GPIO_Init+0x130>
 8001708:	2308      	movs	r3, #8
 800170a:	623b      	str	r3, [r7, #32]
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	69fa      	ldr	r2, [r7, #28]
 8001710:	615a      	str	r2, [r3, #20]
 8001712:	e003      	b.n	800171c <HAL_GPIO_Init+0x130>
 8001714:	2300      	movs	r3, #0
 8001716:	623b      	str	r3, [r7, #32]
 8001718:	e000      	b.n	800171c <HAL_GPIO_Init+0x130>
 800171a:	bf00      	nop
 800171c:	69bb      	ldr	r3, [r7, #24]
 800171e:	2bff      	cmp	r3, #255	; 0xff
 8001720:	d801      	bhi.n	8001726 <HAL_GPIO_Init+0x13a>
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	e001      	b.n	800172a <HAL_GPIO_Init+0x13e>
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	3304      	adds	r3, #4
 800172a:	617b      	str	r3, [r7, #20]
 800172c:	69bb      	ldr	r3, [r7, #24]
 800172e:	2bff      	cmp	r3, #255	; 0xff
 8001730:	d802      	bhi.n	8001738 <HAL_GPIO_Init+0x14c>
 8001732:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001734:	009b      	lsls	r3, r3, #2
 8001736:	e002      	b.n	800173e <HAL_GPIO_Init+0x152>
 8001738:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800173a:	3b08      	subs	r3, #8
 800173c:	009b      	lsls	r3, r3, #2
 800173e:	613b      	str	r3, [r7, #16]
 8001740:	697b      	ldr	r3, [r7, #20]
 8001742:	681a      	ldr	r2, [r3, #0]
 8001744:	210f      	movs	r1, #15
 8001746:	693b      	ldr	r3, [r7, #16]
 8001748:	fa01 f303 	lsl.w	r3, r1, r3
 800174c:	43db      	mvns	r3, r3
 800174e:	401a      	ands	r2, r3
 8001750:	6a39      	ldr	r1, [r7, #32]
 8001752:	693b      	ldr	r3, [r7, #16]
 8001754:	fa01 f303 	lsl.w	r3, r1, r3
 8001758:	431a      	orrs	r2, r3
 800175a:	697b      	ldr	r3, [r7, #20]
 800175c:	601a      	str	r2, [r3, #0]
 800175e:	683b      	ldr	r3, [r7, #0]
 8001760:	685b      	ldr	r3, [r3, #4]
 8001762:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001766:	2b00      	cmp	r3, #0
 8001768:	f000 80b1 	beq.w	80018ce <HAL_GPIO_Init+0x2e2>
 800176c:	4b4d      	ldr	r3, [pc, #308]	; (80018a4 <HAL_GPIO_Init+0x2b8>)
 800176e:	699b      	ldr	r3, [r3, #24]
 8001770:	4a4c      	ldr	r2, [pc, #304]	; (80018a4 <HAL_GPIO_Init+0x2b8>)
 8001772:	f043 0301 	orr.w	r3, r3, #1
 8001776:	6193      	str	r3, [r2, #24]
 8001778:	4b4a      	ldr	r3, [pc, #296]	; (80018a4 <HAL_GPIO_Init+0x2b8>)
 800177a:	699b      	ldr	r3, [r3, #24]
 800177c:	f003 0301 	and.w	r3, r3, #1
 8001780:	60bb      	str	r3, [r7, #8]
 8001782:	68bb      	ldr	r3, [r7, #8]
 8001784:	4a48      	ldr	r2, [pc, #288]	; (80018a8 <HAL_GPIO_Init+0x2bc>)
 8001786:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001788:	089b      	lsrs	r3, r3, #2
 800178a:	3302      	adds	r3, #2
 800178c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001790:	60fb      	str	r3, [r7, #12]
 8001792:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001794:	f003 0303 	and.w	r3, r3, #3
 8001798:	009b      	lsls	r3, r3, #2
 800179a:	220f      	movs	r2, #15
 800179c:	fa02 f303 	lsl.w	r3, r2, r3
 80017a0:	43db      	mvns	r3, r3
 80017a2:	68fa      	ldr	r2, [r7, #12]
 80017a4:	4013      	ands	r3, r2
 80017a6:	60fb      	str	r3, [r7, #12]
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	4a40      	ldr	r2, [pc, #256]	; (80018ac <HAL_GPIO_Init+0x2c0>)
 80017ac:	4293      	cmp	r3, r2
 80017ae:	d013      	beq.n	80017d8 <HAL_GPIO_Init+0x1ec>
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	4a3f      	ldr	r2, [pc, #252]	; (80018b0 <HAL_GPIO_Init+0x2c4>)
 80017b4:	4293      	cmp	r3, r2
 80017b6:	d00d      	beq.n	80017d4 <HAL_GPIO_Init+0x1e8>
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	4a3e      	ldr	r2, [pc, #248]	; (80018b4 <HAL_GPIO_Init+0x2c8>)
 80017bc:	4293      	cmp	r3, r2
 80017be:	d007      	beq.n	80017d0 <HAL_GPIO_Init+0x1e4>
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	4a3d      	ldr	r2, [pc, #244]	; (80018b8 <HAL_GPIO_Init+0x2cc>)
 80017c4:	4293      	cmp	r3, r2
 80017c6:	d101      	bne.n	80017cc <HAL_GPIO_Init+0x1e0>
 80017c8:	2303      	movs	r3, #3
 80017ca:	e006      	b.n	80017da <HAL_GPIO_Init+0x1ee>
 80017cc:	2304      	movs	r3, #4
 80017ce:	e004      	b.n	80017da <HAL_GPIO_Init+0x1ee>
 80017d0:	2302      	movs	r3, #2
 80017d2:	e002      	b.n	80017da <HAL_GPIO_Init+0x1ee>
 80017d4:	2301      	movs	r3, #1
 80017d6:	e000      	b.n	80017da <HAL_GPIO_Init+0x1ee>
 80017d8:	2300      	movs	r3, #0
 80017da:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80017dc:	f002 0203 	and.w	r2, r2, #3
 80017e0:	0092      	lsls	r2, r2, #2
 80017e2:	4093      	lsls	r3, r2
 80017e4:	68fa      	ldr	r2, [r7, #12]
 80017e6:	4313      	orrs	r3, r2
 80017e8:	60fb      	str	r3, [r7, #12]
 80017ea:	492f      	ldr	r1, [pc, #188]	; (80018a8 <HAL_GPIO_Init+0x2bc>)
 80017ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017ee:	089b      	lsrs	r3, r3, #2
 80017f0:	3302      	adds	r3, #2
 80017f2:	68fa      	ldr	r2, [r7, #12]
 80017f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80017f8:	683b      	ldr	r3, [r7, #0]
 80017fa:	685b      	ldr	r3, [r3, #4]
 80017fc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001800:	2b00      	cmp	r3, #0
 8001802:	d006      	beq.n	8001812 <HAL_GPIO_Init+0x226>
 8001804:	4b2d      	ldr	r3, [pc, #180]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001806:	681a      	ldr	r2, [r3, #0]
 8001808:	492c      	ldr	r1, [pc, #176]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800180a:	69bb      	ldr	r3, [r7, #24]
 800180c:	4313      	orrs	r3, r2
 800180e:	600b      	str	r3, [r1, #0]
 8001810:	e006      	b.n	8001820 <HAL_GPIO_Init+0x234>
 8001812:	4b2a      	ldr	r3, [pc, #168]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001814:	681a      	ldr	r2, [r3, #0]
 8001816:	69bb      	ldr	r3, [r7, #24]
 8001818:	43db      	mvns	r3, r3
 800181a:	4928      	ldr	r1, [pc, #160]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800181c:	4013      	ands	r3, r2
 800181e:	600b      	str	r3, [r1, #0]
 8001820:	683b      	ldr	r3, [r7, #0]
 8001822:	685b      	ldr	r3, [r3, #4]
 8001824:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001828:	2b00      	cmp	r3, #0
 800182a:	d006      	beq.n	800183a <HAL_GPIO_Init+0x24e>
 800182c:	4b23      	ldr	r3, [pc, #140]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800182e:	685a      	ldr	r2, [r3, #4]
 8001830:	4922      	ldr	r1, [pc, #136]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001832:	69bb      	ldr	r3, [r7, #24]
 8001834:	4313      	orrs	r3, r2
 8001836:	604b      	str	r3, [r1, #4]
 8001838:	e006      	b.n	8001848 <HAL_GPIO_Init+0x25c>
 800183a:	4b20      	ldr	r3, [pc, #128]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800183c:	685a      	ldr	r2, [r3, #4]
 800183e:	69bb      	ldr	r3, [r7, #24]
 8001840:	43db      	mvns	r3, r3
 8001842:	491e      	ldr	r1, [pc, #120]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001844:	4013      	ands	r3, r2
 8001846:	604b      	str	r3, [r1, #4]
 8001848:	683b      	ldr	r3, [r7, #0]
 800184a:	685b      	ldr	r3, [r3, #4]
 800184c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001850:	2b00      	cmp	r3, #0
 8001852:	d006      	beq.n	8001862 <HAL_GPIO_Init+0x276>
 8001854:	4b19      	ldr	r3, [pc, #100]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001856:	689a      	ldr	r2, [r3, #8]
 8001858:	4918      	ldr	r1, [pc, #96]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800185a:	69bb      	ldr	r3, [r7, #24]
 800185c:	4313      	orrs	r3, r2
 800185e:	608b      	str	r3, [r1, #8]
 8001860:	e006      	b.n	8001870 <HAL_GPIO_Init+0x284>
 8001862:	4b16      	ldr	r3, [pc, #88]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001864:	689a      	ldr	r2, [r3, #8]
 8001866:	69bb      	ldr	r3, [r7, #24]
 8001868:	43db      	mvns	r3, r3
 800186a:	4914      	ldr	r1, [pc, #80]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800186c:	4013      	ands	r3, r2
 800186e:	608b      	str	r3, [r1, #8]
 8001870:	683b      	ldr	r3, [r7, #0]
 8001872:	685b      	ldr	r3, [r3, #4]
 8001874:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001878:	2b00      	cmp	r3, #0
 800187a:	d021      	beq.n	80018c0 <HAL_GPIO_Init+0x2d4>
 800187c:	4b0f      	ldr	r3, [pc, #60]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 800187e:	68da      	ldr	r2, [r3, #12]
 8001880:	490e      	ldr	r1, [pc, #56]	; (80018bc <HAL_GPIO_Init+0x2d0>)
 8001882:	69bb      	ldr	r3, [r7, #24]
 8001884:	4313      	orrs	r3, r2
 8001886:	60cb      	str	r3, [r1, #12]
 8001888:	e021      	b.n	80018ce <HAL_GPIO_Init+0x2e2>
 800188a:	bf00      	nop
 800188c:	10320000 	.word	0x10320000
 8001890:	10310000 	.word	0x10310000
 8001894:	10220000 	.word	0x10220000
 8001898:	10210000 	.word	0x10210000
 800189c:	10120000 	.word	0x10120000
 80018a0:	10110000 	.word	0x10110000
 80018a4:	40021000 	.word	0x40021000
 80018a8:	40010000 	.word	0x40010000
 80018ac:	40010800 	.word	0x40010800
 80018b0:	40010c00 	.word	0x40010c00
 80018b4:	40011000 	.word	0x40011000
 80018b8:	40011400 	.word	0x40011400
 80018bc:	40010400 	.word	0x40010400
 80018c0:	4b0b      	ldr	r3, [pc, #44]	; (80018f0 <HAL_GPIO_Init+0x304>)
 80018c2:	68da      	ldr	r2, [r3, #12]
 80018c4:	69bb      	ldr	r3, [r7, #24]
 80018c6:	43db      	mvns	r3, r3
 80018c8:	4909      	ldr	r1, [pc, #36]	; (80018f0 <HAL_GPIO_Init+0x304>)
 80018ca:	4013      	ands	r3, r2
 80018cc:	60cb      	str	r3, [r1, #12]
 80018ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018d0:	3301      	adds	r3, #1
 80018d2:	627b      	str	r3, [r7, #36]	; 0x24
 80018d4:	683b      	ldr	r3, [r7, #0]
 80018d6:	681a      	ldr	r2, [r3, #0]
 80018d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018da:	fa22 f303 	lsr.w	r3, r2, r3
 80018de:	2b00      	cmp	r3, #0
 80018e0:	f47f ae8e 	bne.w	8001600 <HAL_GPIO_Init+0x14>
 80018e4:	bf00      	nop
 80018e6:	bf00      	nop
 80018e8:	372c      	adds	r7, #44	; 0x2c
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bc80      	pop	{r7}
 80018ee:	4770      	bx	lr
 80018f0:	40010400 	.word	0x40010400

080018f4 <HAL_GPIO_WritePin>:
 80018f4:	b480      	push	{r7}
 80018f6:	b083      	sub	sp, #12
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	6078      	str	r0, [r7, #4]
 80018fc:	460b      	mov	r3, r1
 80018fe:	807b      	strh	r3, [r7, #2]
 8001900:	4613      	mov	r3, r2
 8001902:	707b      	strb	r3, [r7, #1]
 8001904:	787b      	ldrb	r3, [r7, #1]
 8001906:	2b00      	cmp	r3, #0
 8001908:	d003      	beq.n	8001912 <HAL_GPIO_WritePin+0x1e>
 800190a:	887a      	ldrh	r2, [r7, #2]
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	611a      	str	r2, [r3, #16]
 8001910:	e003      	b.n	800191a <HAL_GPIO_WritePin+0x26>
 8001912:	887b      	ldrh	r3, [r7, #2]
 8001914:	041a      	lsls	r2, r3, #16
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	611a      	str	r2, [r3, #16]
 800191a:	bf00      	nop
 800191c:	370c      	adds	r7, #12
 800191e:	46bd      	mov	sp, r7
 8001920:	bc80      	pop	{r7}
 8001922:	4770      	bx	lr

08001924 <HAL_GPIO_TogglePin>:
 8001924:	b480      	push	{r7}
 8001926:	b085      	sub	sp, #20
 8001928:	af00      	add	r7, sp, #0
 800192a:	6078      	str	r0, [r7, #4]
 800192c:	460b      	mov	r3, r1
 800192e:	807b      	strh	r3, [r7, #2]
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	68db      	ldr	r3, [r3, #12]
 8001934:	60fb      	str	r3, [r7, #12]
 8001936:	887a      	ldrh	r2, [r7, #2]
 8001938:	68fb      	ldr	r3, [r7, #12]
 800193a:	4013      	ands	r3, r2
 800193c:	041a      	lsls	r2, r3, #16
 800193e:	68fb      	ldr	r3, [r7, #12]
 8001940:	43d9      	mvns	r1, r3
 8001942:	887b      	ldrh	r3, [r7, #2]
 8001944:	400b      	ands	r3, r1
 8001946:	431a      	orrs	r2, r3
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	611a      	str	r2, [r3, #16]
 800194c:	bf00      	nop
 800194e:	3714      	adds	r7, #20
 8001950:	46bd      	mov	sp, r7
 8001952:	bc80      	pop	{r7}
 8001954:	4770      	bx	lr
	...

08001958 <HAL_I2C_Init>:
 8001958:	b580      	push	{r7, lr}
 800195a:	b084      	sub	sp, #16
 800195c:	af00      	add	r7, sp, #0
 800195e:	6078      	str	r0, [r7, #4]
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	2b00      	cmp	r3, #0
 8001964:	d101      	bne.n	800196a <HAL_I2C_Init+0x12>
 8001966:	2301      	movs	r3, #1
 8001968:	e12b      	b.n	8001bc2 <HAL_I2C_Init+0x26a>
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001970:	b2db      	uxtb	r3, r3
 8001972:	2b00      	cmp	r3, #0
 8001974:	d106      	bne.n	8001984 <HAL_I2C_Init+0x2c>
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	2200      	movs	r2, #0
 800197a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800197e:	6878      	ldr	r0, [r7, #4]
 8001980:	f7ff fbaa 	bl	80010d8 <HAL_I2C_MspInit>
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	2224      	movs	r2, #36	; 0x24
 8001988:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	681a      	ldr	r2, [r3, #0]
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	f022 0201 	bic.w	r2, r2, #1
 800199a:	601a      	str	r2, [r3, #0]
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	681a      	ldr	r2, [r3, #0]
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	681b      	ldr	r3, [r3, #0]
 80019a6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80019aa:	601a      	str	r2, [r3, #0]
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	681a      	ldr	r2, [r3, #0]
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80019ba:	601a      	str	r2, [r3, #0]
 80019bc:	f000 ffea 	bl	8002994 <HAL_RCC_GetPCLK1Freq>
 80019c0:	60f8      	str	r0, [r7, #12]
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	685b      	ldr	r3, [r3, #4]
 80019c6:	4a81      	ldr	r2, [pc, #516]	; (8001bcc <HAL_I2C_Init+0x274>)
 80019c8:	4293      	cmp	r3, r2
 80019ca:	d807      	bhi.n	80019dc <HAL_I2C_Init+0x84>
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	4a80      	ldr	r2, [pc, #512]	; (8001bd0 <HAL_I2C_Init+0x278>)
 80019d0:	4293      	cmp	r3, r2
 80019d2:	bf94      	ite	ls
 80019d4:	2301      	movls	r3, #1
 80019d6:	2300      	movhi	r3, #0
 80019d8:	b2db      	uxtb	r3, r3
 80019da:	e006      	b.n	80019ea <HAL_I2C_Init+0x92>
 80019dc:	68fb      	ldr	r3, [r7, #12]
 80019de:	4a7d      	ldr	r2, [pc, #500]	; (8001bd4 <HAL_I2C_Init+0x27c>)
 80019e0:	4293      	cmp	r3, r2
 80019e2:	bf94      	ite	ls
 80019e4:	2301      	movls	r3, #1
 80019e6:	2300      	movhi	r3, #0
 80019e8:	b2db      	uxtb	r3, r3
 80019ea:	2b00      	cmp	r3, #0
 80019ec:	d001      	beq.n	80019f2 <HAL_I2C_Init+0x9a>
 80019ee:	2301      	movs	r3, #1
 80019f0:	e0e7      	b.n	8001bc2 <HAL_I2C_Init+0x26a>
 80019f2:	68fb      	ldr	r3, [r7, #12]
 80019f4:	4a78      	ldr	r2, [pc, #480]	; (8001bd8 <HAL_I2C_Init+0x280>)
 80019f6:	fba2 2303 	umull	r2, r3, r2, r3
 80019fa:	0c9b      	lsrs	r3, r3, #18
 80019fc:	60bb      	str	r3, [r7, #8]
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	685b      	ldr	r3, [r3, #4]
 8001a04:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	68ba      	ldr	r2, [r7, #8]
 8001a0e:	430a      	orrs	r2, r1
 8001a10:	605a      	str	r2, [r3, #4]
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	6a1b      	ldr	r3, [r3, #32]
 8001a18:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	685b      	ldr	r3, [r3, #4]
 8001a20:	4a6a      	ldr	r2, [pc, #424]	; (8001bcc <HAL_I2C_Init+0x274>)
 8001a22:	4293      	cmp	r3, r2
 8001a24:	d802      	bhi.n	8001a2c <HAL_I2C_Init+0xd4>
 8001a26:	68bb      	ldr	r3, [r7, #8]
 8001a28:	3301      	adds	r3, #1
 8001a2a:	e009      	b.n	8001a40 <HAL_I2C_Init+0xe8>
 8001a2c:	68bb      	ldr	r3, [r7, #8]
 8001a2e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001a32:	fb02 f303 	mul.w	r3, r2, r3
 8001a36:	4a69      	ldr	r2, [pc, #420]	; (8001bdc <HAL_I2C_Init+0x284>)
 8001a38:	fba2 2303 	umull	r2, r3, r2, r3
 8001a3c:	099b      	lsrs	r3, r3, #6
 8001a3e:	3301      	adds	r3, #1
 8001a40:	687a      	ldr	r2, [r7, #4]
 8001a42:	6812      	ldr	r2, [r2, #0]
 8001a44:	430b      	orrs	r3, r1
 8001a46:	6213      	str	r3, [r2, #32]
 8001a48:	687b      	ldr	r3, [r7, #4]
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	69db      	ldr	r3, [r3, #28]
 8001a4e:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8001a52:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	685b      	ldr	r3, [r3, #4]
 8001a5a:	495c      	ldr	r1, [pc, #368]	; (8001bcc <HAL_I2C_Init+0x274>)
 8001a5c:	428b      	cmp	r3, r1
 8001a5e:	d819      	bhi.n	8001a94 <HAL_I2C_Init+0x13c>
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	1e59      	subs	r1, r3, #1
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	685b      	ldr	r3, [r3, #4]
 8001a68:	005b      	lsls	r3, r3, #1
 8001a6a:	fbb1 f3f3 	udiv	r3, r1, r3
 8001a6e:	1c59      	adds	r1, r3, #1
 8001a70:	f640 73fc 	movw	r3, #4092	; 0xffc
 8001a74:	400b      	ands	r3, r1
 8001a76:	2b00      	cmp	r3, #0
 8001a78:	d00a      	beq.n	8001a90 <HAL_I2C_Init+0x138>
 8001a7a:	68fb      	ldr	r3, [r7, #12]
 8001a7c:	1e59      	subs	r1, r3, #1
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	685b      	ldr	r3, [r3, #4]
 8001a82:	005b      	lsls	r3, r3, #1
 8001a84:	fbb1 f3f3 	udiv	r3, r1, r3
 8001a88:	3301      	adds	r3, #1
 8001a8a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001a8e:	e051      	b.n	8001b34 <HAL_I2C_Init+0x1dc>
 8001a90:	2304      	movs	r3, #4
 8001a92:	e04f      	b.n	8001b34 <HAL_I2C_Init+0x1dc>
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	689b      	ldr	r3, [r3, #8]
 8001a98:	2b00      	cmp	r3, #0
 8001a9a:	d111      	bne.n	8001ac0 <HAL_I2C_Init+0x168>
 8001a9c:	68fb      	ldr	r3, [r7, #12]
 8001a9e:	1e58      	subs	r0, r3, #1
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	6859      	ldr	r1, [r3, #4]
 8001aa4:	460b      	mov	r3, r1
 8001aa6:	005b      	lsls	r3, r3, #1
 8001aa8:	440b      	add	r3, r1
 8001aaa:	fbb0 f3f3 	udiv	r3, r0, r3
 8001aae:	3301      	adds	r3, #1
 8001ab0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001ab4:	2b00      	cmp	r3, #0
 8001ab6:	bf0c      	ite	eq
 8001ab8:	2301      	moveq	r3, #1
 8001aba:	2300      	movne	r3, #0
 8001abc:	b2db      	uxtb	r3, r3
 8001abe:	e012      	b.n	8001ae6 <HAL_I2C_Init+0x18e>
 8001ac0:	68fb      	ldr	r3, [r7, #12]
 8001ac2:	1e58      	subs	r0, r3, #1
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	6859      	ldr	r1, [r3, #4]
 8001ac8:	460b      	mov	r3, r1
 8001aca:	009b      	lsls	r3, r3, #2
 8001acc:	440b      	add	r3, r1
 8001ace:	0099      	lsls	r1, r3, #2
 8001ad0:	440b      	add	r3, r1
 8001ad2:	fbb0 f3f3 	udiv	r3, r0, r3
 8001ad6:	3301      	adds	r3, #1
 8001ad8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	bf0c      	ite	eq
 8001ae0:	2301      	moveq	r3, #1
 8001ae2:	2300      	movne	r3, #0
 8001ae4:	b2db      	uxtb	r3, r3
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	d001      	beq.n	8001aee <HAL_I2C_Init+0x196>
 8001aea:	2301      	movs	r3, #1
 8001aec:	e022      	b.n	8001b34 <HAL_I2C_Init+0x1dc>
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	689b      	ldr	r3, [r3, #8]
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	d10e      	bne.n	8001b14 <HAL_I2C_Init+0x1bc>
 8001af6:	68fb      	ldr	r3, [r7, #12]
 8001af8:	1e58      	subs	r0, r3, #1
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	6859      	ldr	r1, [r3, #4]
 8001afe:	460b      	mov	r3, r1
 8001b00:	005b      	lsls	r3, r3, #1
 8001b02:	440b      	add	r3, r1
 8001b04:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b08:	3301      	adds	r3, #1
 8001b0a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b0e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001b12:	e00f      	b.n	8001b34 <HAL_I2C_Init+0x1dc>
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	1e58      	subs	r0, r3, #1
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	6859      	ldr	r1, [r3, #4]
 8001b1c:	460b      	mov	r3, r1
 8001b1e:	009b      	lsls	r3, r3, #2
 8001b20:	440b      	add	r3, r1
 8001b22:	0099      	lsls	r1, r3, #2
 8001b24:	440b      	add	r3, r1
 8001b26:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b2a:	3301      	adds	r3, #1
 8001b2c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b30:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001b34:	6879      	ldr	r1, [r7, #4]
 8001b36:	6809      	ldr	r1, [r1, #0]
 8001b38:	4313      	orrs	r3, r2
 8001b3a:	61cb      	str	r3, [r1, #28]
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	69da      	ldr	r2, [r3, #28]
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	6a1b      	ldr	r3, [r3, #32]
 8001b4e:	431a      	orrs	r2, r3
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	430a      	orrs	r2, r1
 8001b56:	601a      	str	r2, [r3, #0]
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	689b      	ldr	r3, [r3, #8]
 8001b5e:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8001b62:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8001b66:	687a      	ldr	r2, [r7, #4]
 8001b68:	6911      	ldr	r1, [r2, #16]
 8001b6a:	687a      	ldr	r2, [r7, #4]
 8001b6c:	68d2      	ldr	r2, [r2, #12]
 8001b6e:	4311      	orrs	r1, r2
 8001b70:	687a      	ldr	r2, [r7, #4]
 8001b72:	6812      	ldr	r2, [r2, #0]
 8001b74:	430b      	orrs	r3, r1
 8001b76:	6093      	str	r3, [r2, #8]
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	68db      	ldr	r3, [r3, #12]
 8001b7e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	695a      	ldr	r2, [r3, #20]
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	699b      	ldr	r3, [r3, #24]
 8001b8a:	431a      	orrs	r2, r3
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	681b      	ldr	r3, [r3, #0]
 8001b90:	430a      	orrs	r2, r1
 8001b92:	60da      	str	r2, [r3, #12]
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	681a      	ldr	r2, [r3, #0]
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	f042 0201 	orr.w	r2, r2, #1
 8001ba2:	601a      	str	r2, [r3, #0]
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	2200      	movs	r2, #0
 8001ba8:	641a      	str	r2, [r3, #64]	; 0x40
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	2220      	movs	r2, #32
 8001bae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	2200      	movs	r2, #0
 8001bb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	2200      	movs	r2, #0
 8001bbc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	4618      	mov	r0, r3
 8001bc4:	3710      	adds	r7, #16
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	bd80      	pop	{r7, pc}
 8001bca:	bf00      	nop
 8001bcc:	000186a0 	.word	0x000186a0
 8001bd0:	001e847f 	.word	0x001e847f
 8001bd4:	003d08ff 	.word	0x003d08ff
 8001bd8:	431bde83 	.word	0x431bde83
 8001bdc:	10624dd3 	.word	0x10624dd3

08001be0 <HAL_I2C_Master_Transmit>:
 8001be0:	b580      	push	{r7, lr}
 8001be2:	b088      	sub	sp, #32
 8001be4:	af02      	add	r7, sp, #8
 8001be6:	60f8      	str	r0, [r7, #12]
 8001be8:	607a      	str	r2, [r7, #4]
 8001bea:	461a      	mov	r2, r3
 8001bec:	460b      	mov	r3, r1
 8001bee:	817b      	strh	r3, [r7, #10]
 8001bf0:	4613      	mov	r3, r2
 8001bf2:	813b      	strh	r3, [r7, #8]
 8001bf4:	f7ff fbbe 	bl	8001374 <HAL_GetTick>
 8001bf8:	6178      	str	r0, [r7, #20]
 8001bfa:	68fb      	ldr	r3, [r7, #12]
 8001bfc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001c00:	b2db      	uxtb	r3, r3
 8001c02:	2b20      	cmp	r3, #32
 8001c04:	f040 80e0 	bne.w	8001dc8 <HAL_I2C_Master_Transmit+0x1e8>
 8001c08:	697b      	ldr	r3, [r7, #20]
 8001c0a:	9300      	str	r3, [sp, #0]
 8001c0c:	2319      	movs	r3, #25
 8001c0e:	2201      	movs	r2, #1
 8001c10:	4970      	ldr	r1, [pc, #448]	; (8001dd4 <HAL_I2C_Master_Transmit+0x1f4>)
 8001c12:	68f8      	ldr	r0, [r7, #12]
 8001c14:	f000 f964 	bl	8001ee0 <I2C_WaitOnFlagUntilTimeout>
 8001c18:	4603      	mov	r3, r0
 8001c1a:	2b00      	cmp	r3, #0
 8001c1c:	d001      	beq.n	8001c22 <HAL_I2C_Master_Transmit+0x42>
 8001c1e:	2302      	movs	r3, #2
 8001c20:	e0d3      	b.n	8001dca <HAL_I2C_Master_Transmit+0x1ea>
 8001c22:	68fb      	ldr	r3, [r7, #12]
 8001c24:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001c28:	2b01      	cmp	r3, #1
 8001c2a:	d101      	bne.n	8001c30 <HAL_I2C_Master_Transmit+0x50>
 8001c2c:	2302      	movs	r3, #2
 8001c2e:	e0cc      	b.n	8001dca <HAL_I2C_Master_Transmit+0x1ea>
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	2201      	movs	r2, #1
 8001c34:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c38:	68fb      	ldr	r3, [r7, #12]
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	f003 0301 	and.w	r3, r3, #1
 8001c42:	2b01      	cmp	r3, #1
 8001c44:	d007      	beq.n	8001c56 <HAL_I2C_Master_Transmit+0x76>
 8001c46:	68fb      	ldr	r3, [r7, #12]
 8001c48:	681b      	ldr	r3, [r3, #0]
 8001c4a:	681a      	ldr	r2, [r3, #0]
 8001c4c:	68fb      	ldr	r3, [r7, #12]
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	f042 0201 	orr.w	r2, r2, #1
 8001c54:	601a      	str	r2, [r3, #0]
 8001c56:	68fb      	ldr	r3, [r7, #12]
 8001c58:	681b      	ldr	r3, [r3, #0]
 8001c5a:	681a      	ldr	r2, [r3, #0]
 8001c5c:	68fb      	ldr	r3, [r7, #12]
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001c64:	601a      	str	r2, [r3, #0]
 8001c66:	68fb      	ldr	r3, [r7, #12]
 8001c68:	2221      	movs	r2, #33	; 0x21
 8001c6a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001c6e:	68fb      	ldr	r3, [r7, #12]
 8001c70:	2210      	movs	r2, #16
 8001c72:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001c76:	68fb      	ldr	r3, [r7, #12]
 8001c78:	2200      	movs	r2, #0
 8001c7a:	641a      	str	r2, [r3, #64]	; 0x40
 8001c7c:	68fb      	ldr	r3, [r7, #12]
 8001c7e:	687a      	ldr	r2, [r7, #4]
 8001c80:	625a      	str	r2, [r3, #36]	; 0x24
 8001c82:	68fb      	ldr	r3, [r7, #12]
 8001c84:	893a      	ldrh	r2, [r7, #8]
 8001c86:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001c88:	68fb      	ldr	r3, [r7, #12]
 8001c8a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001c8c:	b29a      	uxth	r2, r3
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	851a      	strh	r2, [r3, #40]	; 0x28
 8001c92:	68fb      	ldr	r3, [r7, #12]
 8001c94:	4a50      	ldr	r2, [pc, #320]	; (8001dd8 <HAL_I2C_Master_Transmit+0x1f8>)
 8001c96:	62da      	str	r2, [r3, #44]	; 0x2c
 8001c98:	8979      	ldrh	r1, [r7, #10]
 8001c9a:	697b      	ldr	r3, [r7, #20]
 8001c9c:	6a3a      	ldr	r2, [r7, #32]
 8001c9e:	68f8      	ldr	r0, [r7, #12]
 8001ca0:	f000 f89c 	bl	8001ddc <I2C_MasterRequestWrite>
 8001ca4:	4603      	mov	r3, r0
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	d001      	beq.n	8001cae <HAL_I2C_Master_Transmit+0xce>
 8001caa:	2301      	movs	r3, #1
 8001cac:	e08d      	b.n	8001dca <HAL_I2C_Master_Transmit+0x1ea>
 8001cae:	2300      	movs	r3, #0
 8001cb0:	613b      	str	r3, [r7, #16]
 8001cb2:	68fb      	ldr	r3, [r7, #12]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	695b      	ldr	r3, [r3, #20]
 8001cb8:	613b      	str	r3, [r7, #16]
 8001cba:	68fb      	ldr	r3, [r7, #12]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	699b      	ldr	r3, [r3, #24]
 8001cc0:	613b      	str	r3, [r7, #16]
 8001cc2:	693b      	ldr	r3, [r7, #16]
 8001cc4:	e066      	b.n	8001d94 <HAL_I2C_Master_Transmit+0x1b4>
 8001cc6:	697a      	ldr	r2, [r7, #20]
 8001cc8:	6a39      	ldr	r1, [r7, #32]
 8001cca:	68f8      	ldr	r0, [r7, #12]
 8001ccc:	f000 f9de 	bl	800208c <I2C_WaitOnTXEFlagUntilTimeout>
 8001cd0:	4603      	mov	r3, r0
 8001cd2:	2b00      	cmp	r3, #0
 8001cd4:	d00d      	beq.n	8001cf2 <HAL_I2C_Master_Transmit+0x112>
 8001cd6:	68fb      	ldr	r3, [r7, #12]
 8001cd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cda:	2b04      	cmp	r3, #4
 8001cdc:	d107      	bne.n	8001cee <HAL_I2C_Master_Transmit+0x10e>
 8001cde:	68fb      	ldr	r3, [r7, #12]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	681a      	ldr	r2, [r3, #0]
 8001ce4:	68fb      	ldr	r3, [r7, #12]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001cec:	601a      	str	r2, [r3, #0]
 8001cee:	2301      	movs	r3, #1
 8001cf0:	e06b      	b.n	8001dca <HAL_I2C_Master_Transmit+0x1ea>
 8001cf2:	68fb      	ldr	r3, [r7, #12]
 8001cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cf6:	781a      	ldrb	r2, [r3, #0]
 8001cf8:	68fb      	ldr	r3, [r7, #12]
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	611a      	str	r2, [r3, #16]
 8001cfe:	68fb      	ldr	r3, [r7, #12]
 8001d00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d02:	1c5a      	adds	r2, r3, #1
 8001d04:	68fb      	ldr	r3, [r7, #12]
 8001d06:	625a      	str	r2, [r3, #36]	; 0x24
 8001d08:	68fb      	ldr	r3, [r7, #12]
 8001d0a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001d0c:	b29b      	uxth	r3, r3
 8001d0e:	3b01      	subs	r3, #1
 8001d10:	b29a      	uxth	r2, r3
 8001d12:	68fb      	ldr	r3, [r7, #12]
 8001d14:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001d16:	68fb      	ldr	r3, [r7, #12]
 8001d18:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001d1a:	3b01      	subs	r3, #1
 8001d1c:	b29a      	uxth	r2, r3
 8001d1e:	68fb      	ldr	r3, [r7, #12]
 8001d20:	851a      	strh	r2, [r3, #40]	; 0x28
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	695b      	ldr	r3, [r3, #20]
 8001d28:	f003 0304 	and.w	r3, r3, #4
 8001d2c:	2b04      	cmp	r3, #4
 8001d2e:	d11b      	bne.n	8001d68 <HAL_I2C_Master_Transmit+0x188>
 8001d30:	68fb      	ldr	r3, [r7, #12]
 8001d32:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	d017      	beq.n	8001d68 <HAL_I2C_Master_Transmit+0x188>
 8001d38:	68fb      	ldr	r3, [r7, #12]
 8001d3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d3c:	781a      	ldrb	r2, [r3, #0]
 8001d3e:	68fb      	ldr	r3, [r7, #12]
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	611a      	str	r2, [r3, #16]
 8001d44:	68fb      	ldr	r3, [r7, #12]
 8001d46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d48:	1c5a      	adds	r2, r3, #1
 8001d4a:	68fb      	ldr	r3, [r7, #12]
 8001d4c:	625a      	str	r2, [r3, #36]	; 0x24
 8001d4e:	68fb      	ldr	r3, [r7, #12]
 8001d50:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001d52:	b29b      	uxth	r3, r3
 8001d54:	3b01      	subs	r3, #1
 8001d56:	b29a      	uxth	r2, r3
 8001d58:	68fb      	ldr	r3, [r7, #12]
 8001d5a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001d60:	3b01      	subs	r3, #1
 8001d62:	b29a      	uxth	r2, r3
 8001d64:	68fb      	ldr	r3, [r7, #12]
 8001d66:	851a      	strh	r2, [r3, #40]	; 0x28
 8001d68:	697a      	ldr	r2, [r7, #20]
 8001d6a:	6a39      	ldr	r1, [r7, #32]
 8001d6c:	68f8      	ldr	r0, [r7, #12]
 8001d6e:	f000 f9ce 	bl	800210e <I2C_WaitOnBTFFlagUntilTimeout>
 8001d72:	4603      	mov	r3, r0
 8001d74:	2b00      	cmp	r3, #0
 8001d76:	d00d      	beq.n	8001d94 <HAL_I2C_Master_Transmit+0x1b4>
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d7c:	2b04      	cmp	r3, #4
 8001d7e:	d107      	bne.n	8001d90 <HAL_I2C_Master_Transmit+0x1b0>
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	681a      	ldr	r2, [r3, #0]
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001d8e:	601a      	str	r2, [r3, #0]
 8001d90:	2301      	movs	r3, #1
 8001d92:	e01a      	b.n	8001dca <HAL_I2C_Master_Transmit+0x1ea>
 8001d94:	68fb      	ldr	r3, [r7, #12]
 8001d96:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	d194      	bne.n	8001cc6 <HAL_I2C_Master_Transmit+0xe6>
 8001d9c:	68fb      	ldr	r3, [r7, #12]
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	681a      	ldr	r2, [r3, #0]
 8001da2:	68fb      	ldr	r3, [r7, #12]
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001daa:	601a      	str	r2, [r3, #0]
 8001dac:	68fb      	ldr	r3, [r7, #12]
 8001dae:	2220      	movs	r2, #32
 8001db0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001db4:	68fb      	ldr	r3, [r7, #12]
 8001db6:	2200      	movs	r2, #0
 8001db8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001dbc:	68fb      	ldr	r3, [r7, #12]
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001dc4:	2300      	movs	r3, #0
 8001dc6:	e000      	b.n	8001dca <HAL_I2C_Master_Transmit+0x1ea>
 8001dc8:	2302      	movs	r3, #2
 8001dca:	4618      	mov	r0, r3
 8001dcc:	3718      	adds	r7, #24
 8001dce:	46bd      	mov	sp, r7
 8001dd0:	bd80      	pop	{r7, pc}
 8001dd2:	bf00      	nop
 8001dd4:	00100002 	.word	0x00100002
 8001dd8:	ffff0000 	.word	0xffff0000

08001ddc <I2C_MasterRequestWrite>:
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	b088      	sub	sp, #32
 8001de0:	af02      	add	r7, sp, #8
 8001de2:	60f8      	str	r0, [r7, #12]
 8001de4:	607a      	str	r2, [r7, #4]
 8001de6:	603b      	str	r3, [r7, #0]
 8001de8:	460b      	mov	r3, r1
 8001dea:	817b      	strh	r3, [r7, #10]
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001df0:	617b      	str	r3, [r7, #20]
 8001df2:	697b      	ldr	r3, [r7, #20]
 8001df4:	2b08      	cmp	r3, #8
 8001df6:	d006      	beq.n	8001e06 <I2C_MasterRequestWrite+0x2a>
 8001df8:	697b      	ldr	r3, [r7, #20]
 8001dfa:	2b01      	cmp	r3, #1
 8001dfc:	d003      	beq.n	8001e06 <I2C_MasterRequestWrite+0x2a>
 8001dfe:	697b      	ldr	r3, [r7, #20]
 8001e00:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8001e04:	d108      	bne.n	8001e18 <I2C_MasterRequestWrite+0x3c>
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	681a      	ldr	r2, [r3, #0]
 8001e0c:	68fb      	ldr	r3, [r7, #12]
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e14:	601a      	str	r2, [r3, #0]
 8001e16:	e00b      	b.n	8001e30 <I2C_MasterRequestWrite+0x54>
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e1c:	2b12      	cmp	r3, #18
 8001e1e:	d107      	bne.n	8001e30 <I2C_MasterRequestWrite+0x54>
 8001e20:	68fb      	ldr	r3, [r7, #12]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	681a      	ldr	r2, [r3, #0]
 8001e26:	68fb      	ldr	r3, [r7, #12]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e2e:	601a      	str	r2, [r3, #0]
 8001e30:	683b      	ldr	r3, [r7, #0]
 8001e32:	9300      	str	r3, [sp, #0]
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	2200      	movs	r2, #0
 8001e38:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8001e3c:	68f8      	ldr	r0, [r7, #12]
 8001e3e:	f000 f84f 	bl	8001ee0 <I2C_WaitOnFlagUntilTimeout>
 8001e42:	4603      	mov	r3, r0
 8001e44:	2b00      	cmp	r3, #0
 8001e46:	d00d      	beq.n	8001e64 <I2C_MasterRequestWrite+0x88>
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e52:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001e56:	d103      	bne.n	8001e60 <I2C_MasterRequestWrite+0x84>
 8001e58:	68fb      	ldr	r3, [r7, #12]
 8001e5a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001e5e:	641a      	str	r2, [r3, #64]	; 0x40
 8001e60:	2303      	movs	r3, #3
 8001e62:	e035      	b.n	8001ed0 <I2C_MasterRequestWrite+0xf4>
 8001e64:	68fb      	ldr	r3, [r7, #12]
 8001e66:	691b      	ldr	r3, [r3, #16]
 8001e68:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8001e6c:	d108      	bne.n	8001e80 <I2C_MasterRequestWrite+0xa4>
 8001e6e:	897b      	ldrh	r3, [r7, #10]
 8001e70:	b2db      	uxtb	r3, r3
 8001e72:	461a      	mov	r2, r3
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8001e7c:	611a      	str	r2, [r3, #16]
 8001e7e:	e01b      	b.n	8001eb8 <I2C_MasterRequestWrite+0xdc>
 8001e80:	897b      	ldrh	r3, [r7, #10]
 8001e82:	11db      	asrs	r3, r3, #7
 8001e84:	b2db      	uxtb	r3, r3
 8001e86:	f003 0306 	and.w	r3, r3, #6
 8001e8a:	b2db      	uxtb	r3, r3
 8001e8c:	f063 030f 	orn	r3, r3, #15
 8001e90:	b2da      	uxtb	r2, r3
 8001e92:	68fb      	ldr	r3, [r7, #12]
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	611a      	str	r2, [r3, #16]
 8001e98:	683b      	ldr	r3, [r7, #0]
 8001e9a:	687a      	ldr	r2, [r7, #4]
 8001e9c:	490e      	ldr	r1, [pc, #56]	; (8001ed8 <I2C_MasterRequestWrite+0xfc>)
 8001e9e:	68f8      	ldr	r0, [r7, #12]
 8001ea0:	f000 f875 	bl	8001f8e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001ea4:	4603      	mov	r3, r0
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	d001      	beq.n	8001eae <I2C_MasterRequestWrite+0xd2>
 8001eaa:	2301      	movs	r3, #1
 8001eac:	e010      	b.n	8001ed0 <I2C_MasterRequestWrite+0xf4>
 8001eae:	897b      	ldrh	r3, [r7, #10]
 8001eb0:	b2da      	uxtb	r2, r3
 8001eb2:	68fb      	ldr	r3, [r7, #12]
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	611a      	str	r2, [r3, #16]
 8001eb8:	683b      	ldr	r3, [r7, #0]
 8001eba:	687a      	ldr	r2, [r7, #4]
 8001ebc:	4907      	ldr	r1, [pc, #28]	; (8001edc <I2C_MasterRequestWrite+0x100>)
 8001ebe:	68f8      	ldr	r0, [r7, #12]
 8001ec0:	f000 f865 	bl	8001f8e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001ec4:	4603      	mov	r3, r0
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	d001      	beq.n	8001ece <I2C_MasterRequestWrite+0xf2>
 8001eca:	2301      	movs	r3, #1
 8001ecc:	e000      	b.n	8001ed0 <I2C_MasterRequestWrite+0xf4>
 8001ece:	2300      	movs	r3, #0
 8001ed0:	4618      	mov	r0, r3
 8001ed2:	3718      	adds	r7, #24
 8001ed4:	46bd      	mov	sp, r7
 8001ed6:	bd80      	pop	{r7, pc}
 8001ed8:	00010008 	.word	0x00010008
 8001edc:	00010002 	.word	0x00010002

08001ee0 <I2C_WaitOnFlagUntilTimeout>:
 8001ee0:	b580      	push	{r7, lr}
 8001ee2:	b084      	sub	sp, #16
 8001ee4:	af00      	add	r7, sp, #0
 8001ee6:	60f8      	str	r0, [r7, #12]
 8001ee8:	60b9      	str	r1, [r7, #8]
 8001eea:	603b      	str	r3, [r7, #0]
 8001eec:	4613      	mov	r3, r2
 8001eee:	71fb      	strb	r3, [r7, #7]
 8001ef0:	e025      	b.n	8001f3e <I2C_WaitOnFlagUntilTimeout+0x5e>
 8001ef2:	683b      	ldr	r3, [r7, #0]
 8001ef4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ef8:	d021      	beq.n	8001f3e <I2C_WaitOnFlagUntilTimeout+0x5e>
 8001efa:	f7ff fa3b 	bl	8001374 <HAL_GetTick>
 8001efe:	4602      	mov	r2, r0
 8001f00:	69bb      	ldr	r3, [r7, #24]
 8001f02:	1ad3      	subs	r3, r2, r3
 8001f04:	683a      	ldr	r2, [r7, #0]
 8001f06:	429a      	cmp	r2, r3
 8001f08:	d302      	bcc.n	8001f10 <I2C_WaitOnFlagUntilTimeout+0x30>
 8001f0a:	683b      	ldr	r3, [r7, #0]
 8001f0c:	2b00      	cmp	r3, #0
 8001f0e:	d116      	bne.n	8001f3e <I2C_WaitOnFlagUntilTimeout+0x5e>
 8001f10:	68fb      	ldr	r3, [r7, #12]
 8001f12:	2200      	movs	r2, #0
 8001f14:	631a      	str	r2, [r3, #48]	; 0x30
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	2220      	movs	r2, #32
 8001f1a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f1e:	68fb      	ldr	r3, [r7, #12]
 8001f20:	2200      	movs	r2, #0
 8001f22:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f2a:	f043 0220 	orr.w	r2, r3, #32
 8001f2e:	68fb      	ldr	r3, [r7, #12]
 8001f30:	641a      	str	r2, [r3, #64]	; 0x40
 8001f32:	68fb      	ldr	r3, [r7, #12]
 8001f34:	2200      	movs	r2, #0
 8001f36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f3a:	2301      	movs	r3, #1
 8001f3c:	e023      	b.n	8001f86 <I2C_WaitOnFlagUntilTimeout+0xa6>
 8001f3e:	68bb      	ldr	r3, [r7, #8]
 8001f40:	0c1b      	lsrs	r3, r3, #16
 8001f42:	b2db      	uxtb	r3, r3
 8001f44:	2b01      	cmp	r3, #1
 8001f46:	d10d      	bne.n	8001f64 <I2C_WaitOnFlagUntilTimeout+0x84>
 8001f48:	68fb      	ldr	r3, [r7, #12]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	695b      	ldr	r3, [r3, #20]
 8001f4e:	43da      	mvns	r2, r3
 8001f50:	68bb      	ldr	r3, [r7, #8]
 8001f52:	4013      	ands	r3, r2
 8001f54:	b29b      	uxth	r3, r3
 8001f56:	2b00      	cmp	r3, #0
 8001f58:	bf0c      	ite	eq
 8001f5a:	2301      	moveq	r3, #1
 8001f5c:	2300      	movne	r3, #0
 8001f5e:	b2db      	uxtb	r3, r3
 8001f60:	461a      	mov	r2, r3
 8001f62:	e00c      	b.n	8001f7e <I2C_WaitOnFlagUntilTimeout+0x9e>
 8001f64:	68fb      	ldr	r3, [r7, #12]
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	699b      	ldr	r3, [r3, #24]
 8001f6a:	43da      	mvns	r2, r3
 8001f6c:	68bb      	ldr	r3, [r7, #8]
 8001f6e:	4013      	ands	r3, r2
 8001f70:	b29b      	uxth	r3, r3
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	bf0c      	ite	eq
 8001f76:	2301      	moveq	r3, #1
 8001f78:	2300      	movne	r3, #0
 8001f7a:	b2db      	uxtb	r3, r3
 8001f7c:	461a      	mov	r2, r3
 8001f7e:	79fb      	ldrb	r3, [r7, #7]
 8001f80:	429a      	cmp	r2, r3
 8001f82:	d0b6      	beq.n	8001ef2 <I2C_WaitOnFlagUntilTimeout+0x12>
 8001f84:	2300      	movs	r3, #0
 8001f86:	4618      	mov	r0, r3
 8001f88:	3710      	adds	r7, #16
 8001f8a:	46bd      	mov	sp, r7
 8001f8c:	bd80      	pop	{r7, pc}

08001f8e <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8001f8e:	b580      	push	{r7, lr}
 8001f90:	b084      	sub	sp, #16
 8001f92:	af00      	add	r7, sp, #0
 8001f94:	60f8      	str	r0, [r7, #12]
 8001f96:	60b9      	str	r1, [r7, #8]
 8001f98:	607a      	str	r2, [r7, #4]
 8001f9a:	603b      	str	r3, [r7, #0]
 8001f9c:	e051      	b.n	8002042 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8001f9e:	68fb      	ldr	r3, [r7, #12]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	695b      	ldr	r3, [r3, #20]
 8001fa4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001fa8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001fac:	d123      	bne.n	8001ff6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	681a      	ldr	r2, [r3, #0]
 8001fb4:	68fb      	ldr	r3, [r7, #12]
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001fbc:	601a      	str	r2, [r3, #0]
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8001fc6:	615a      	str	r2, [r3, #20]
 8001fc8:	68fb      	ldr	r3, [r7, #12]
 8001fca:	2200      	movs	r2, #0
 8001fcc:	631a      	str	r2, [r3, #48]	; 0x30
 8001fce:	68fb      	ldr	r3, [r7, #12]
 8001fd0:	2220      	movs	r2, #32
 8001fd2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	2200      	movs	r2, #0
 8001fda:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001fde:	68fb      	ldr	r3, [r7, #12]
 8001fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fe2:	f043 0204 	orr.w	r2, r3, #4
 8001fe6:	68fb      	ldr	r3, [r7, #12]
 8001fe8:	641a      	str	r2, [r3, #64]	; 0x40
 8001fea:	68fb      	ldr	r3, [r7, #12]
 8001fec:	2200      	movs	r2, #0
 8001fee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001ff2:	2301      	movs	r3, #1
 8001ff4:	e046      	b.n	8002084 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ffc:	d021      	beq.n	8002042 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8001ffe:	f7ff f9b9 	bl	8001374 <HAL_GetTick>
 8002002:	4602      	mov	r2, r0
 8002004:	683b      	ldr	r3, [r7, #0]
 8002006:	1ad3      	subs	r3, r2, r3
 8002008:	687a      	ldr	r2, [r7, #4]
 800200a:	429a      	cmp	r2, r3
 800200c:	d302      	bcc.n	8002014 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	2b00      	cmp	r3, #0
 8002012:	d116      	bne.n	8002042 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	2200      	movs	r2, #0
 8002018:	631a      	str	r2, [r3, #48]	; 0x30
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	2220      	movs	r2, #32
 800201e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002022:	68fb      	ldr	r3, [r7, #12]
 8002024:	2200      	movs	r2, #0
 8002026:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800202a:	68fb      	ldr	r3, [r7, #12]
 800202c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800202e:	f043 0220 	orr.w	r2, r3, #32
 8002032:	68fb      	ldr	r3, [r7, #12]
 8002034:	641a      	str	r2, [r3, #64]	; 0x40
 8002036:	68fb      	ldr	r3, [r7, #12]
 8002038:	2200      	movs	r2, #0
 800203a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800203e:	2301      	movs	r3, #1
 8002040:	e020      	b.n	8002084 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8002042:	68bb      	ldr	r3, [r7, #8]
 8002044:	0c1b      	lsrs	r3, r3, #16
 8002046:	b2db      	uxtb	r3, r3
 8002048:	2b01      	cmp	r3, #1
 800204a:	d10c      	bne.n	8002066 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 800204c:	68fb      	ldr	r3, [r7, #12]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	695b      	ldr	r3, [r3, #20]
 8002052:	43da      	mvns	r2, r3
 8002054:	68bb      	ldr	r3, [r7, #8]
 8002056:	4013      	ands	r3, r2
 8002058:	b29b      	uxth	r3, r3
 800205a:	2b00      	cmp	r3, #0
 800205c:	bf14      	ite	ne
 800205e:	2301      	movne	r3, #1
 8002060:	2300      	moveq	r3, #0
 8002062:	b2db      	uxtb	r3, r3
 8002064:	e00b      	b.n	800207e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8002066:	68fb      	ldr	r3, [r7, #12]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	699b      	ldr	r3, [r3, #24]
 800206c:	43da      	mvns	r2, r3
 800206e:	68bb      	ldr	r3, [r7, #8]
 8002070:	4013      	ands	r3, r2
 8002072:	b29b      	uxth	r3, r3
 8002074:	2b00      	cmp	r3, #0
 8002076:	bf14      	ite	ne
 8002078:	2301      	movne	r3, #1
 800207a:	2300      	moveq	r3, #0
 800207c:	b2db      	uxtb	r3, r3
 800207e:	2b00      	cmp	r3, #0
 8002080:	d18d      	bne.n	8001f9e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002082:	2300      	movs	r3, #0
 8002084:	4618      	mov	r0, r3
 8002086:	3710      	adds	r7, #16
 8002088:	46bd      	mov	sp, r7
 800208a:	bd80      	pop	{r7, pc}

0800208c <I2C_WaitOnTXEFlagUntilTimeout>:
 800208c:	b580      	push	{r7, lr}
 800208e:	b084      	sub	sp, #16
 8002090:	af00      	add	r7, sp, #0
 8002092:	60f8      	str	r0, [r7, #12]
 8002094:	60b9      	str	r1, [r7, #8]
 8002096:	607a      	str	r2, [r7, #4]
 8002098:	e02d      	b.n	80020f6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800209a:	68f8      	ldr	r0, [r7, #12]
 800209c:	f000 f878 	bl	8002190 <I2C_IsAcknowledgeFailed>
 80020a0:	4603      	mov	r3, r0
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d001      	beq.n	80020aa <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80020a6:	2301      	movs	r3, #1
 80020a8:	e02d      	b.n	8002106 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80020aa:	68bb      	ldr	r3, [r7, #8]
 80020ac:	f1b3 3fff 	cmp.w	r3, #4294967295
 80020b0:	d021      	beq.n	80020f6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80020b2:	f7ff f95f 	bl	8001374 <HAL_GetTick>
 80020b6:	4602      	mov	r2, r0
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	1ad3      	subs	r3, r2, r3
 80020bc:	68ba      	ldr	r2, [r7, #8]
 80020be:	429a      	cmp	r2, r3
 80020c0:	d302      	bcc.n	80020c8 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80020c2:	68bb      	ldr	r3, [r7, #8]
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d116      	bne.n	80020f6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80020c8:	68fb      	ldr	r3, [r7, #12]
 80020ca:	2200      	movs	r2, #0
 80020cc:	631a      	str	r2, [r3, #48]	; 0x30
 80020ce:	68fb      	ldr	r3, [r7, #12]
 80020d0:	2220      	movs	r2, #32
 80020d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020d6:	68fb      	ldr	r3, [r7, #12]
 80020d8:	2200      	movs	r2, #0
 80020da:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80020de:	68fb      	ldr	r3, [r7, #12]
 80020e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020e2:	f043 0220 	orr.w	r2, r3, #32
 80020e6:	68fb      	ldr	r3, [r7, #12]
 80020e8:	641a      	str	r2, [r3, #64]	; 0x40
 80020ea:	68fb      	ldr	r3, [r7, #12]
 80020ec:	2200      	movs	r2, #0
 80020ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80020f2:	2301      	movs	r3, #1
 80020f4:	e007      	b.n	8002106 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	695b      	ldr	r3, [r3, #20]
 80020fc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002100:	2b80      	cmp	r3, #128	; 0x80
 8002102:	d1ca      	bne.n	800209a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8002104:	2300      	movs	r3, #0
 8002106:	4618      	mov	r0, r3
 8002108:	3710      	adds	r7, #16
 800210a:	46bd      	mov	sp, r7
 800210c:	bd80      	pop	{r7, pc}

0800210e <I2C_WaitOnBTFFlagUntilTimeout>:
 800210e:	b580      	push	{r7, lr}
 8002110:	b084      	sub	sp, #16
 8002112:	af00      	add	r7, sp, #0
 8002114:	60f8      	str	r0, [r7, #12]
 8002116:	60b9      	str	r1, [r7, #8]
 8002118:	607a      	str	r2, [r7, #4]
 800211a:	e02d      	b.n	8002178 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800211c:	68f8      	ldr	r0, [r7, #12]
 800211e:	f000 f837 	bl	8002190 <I2C_IsAcknowledgeFailed>
 8002122:	4603      	mov	r3, r0
 8002124:	2b00      	cmp	r3, #0
 8002126:	d001      	beq.n	800212c <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002128:	2301      	movs	r3, #1
 800212a:	e02d      	b.n	8002188 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800212c:	68bb      	ldr	r3, [r7, #8]
 800212e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002132:	d021      	beq.n	8002178 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002134:	f7ff f91e 	bl	8001374 <HAL_GetTick>
 8002138:	4602      	mov	r2, r0
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	1ad3      	subs	r3, r2, r3
 800213e:	68ba      	ldr	r2, [r7, #8]
 8002140:	429a      	cmp	r2, r3
 8002142:	d302      	bcc.n	800214a <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002144:	68bb      	ldr	r3, [r7, #8]
 8002146:	2b00      	cmp	r3, #0
 8002148:	d116      	bne.n	8002178 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800214a:	68fb      	ldr	r3, [r7, #12]
 800214c:	2200      	movs	r2, #0
 800214e:	631a      	str	r2, [r3, #48]	; 0x30
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	2220      	movs	r2, #32
 8002154:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002158:	68fb      	ldr	r3, [r7, #12]
 800215a:	2200      	movs	r2, #0
 800215c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002164:	f043 0220 	orr.w	r2, r3, #32
 8002168:	68fb      	ldr	r3, [r7, #12]
 800216a:	641a      	str	r2, [r3, #64]	; 0x40
 800216c:	68fb      	ldr	r3, [r7, #12]
 800216e:	2200      	movs	r2, #0
 8002170:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002174:	2301      	movs	r3, #1
 8002176:	e007      	b.n	8002188 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8002178:	68fb      	ldr	r3, [r7, #12]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	695b      	ldr	r3, [r3, #20]
 800217e:	f003 0304 	and.w	r3, r3, #4
 8002182:	2b04      	cmp	r3, #4
 8002184:	d1ca      	bne.n	800211c <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002186:	2300      	movs	r3, #0
 8002188:	4618      	mov	r0, r3
 800218a:	3710      	adds	r7, #16
 800218c:	46bd      	mov	sp, r7
 800218e:	bd80      	pop	{r7, pc}

08002190 <I2C_IsAcknowledgeFailed>:
 8002190:	b480      	push	{r7}
 8002192:	b083      	sub	sp, #12
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	695b      	ldr	r3, [r3, #20]
 800219e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80021a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80021a6:	d11b      	bne.n	80021e0 <I2C_IsAcknowledgeFailed+0x50>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80021b0:	615a      	str	r2, [r3, #20]
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	2200      	movs	r2, #0
 80021b6:	631a      	str	r2, [r3, #48]	; 0x30
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	2220      	movs	r2, #32
 80021bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	2200      	movs	r2, #0
 80021c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021cc:	f043 0204 	orr.w	r2, r3, #4
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	641a      	str	r2, [r3, #64]	; 0x40
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	2200      	movs	r2, #0
 80021d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021dc:	2301      	movs	r3, #1
 80021de:	e000      	b.n	80021e2 <I2C_IsAcknowledgeFailed+0x52>
 80021e0:	2300      	movs	r3, #0
 80021e2:	4618      	mov	r0, r3
 80021e4:	370c      	adds	r7, #12
 80021e6:	46bd      	mov	sp, r7
 80021e8:	bc80      	pop	{r7}
 80021ea:	4770      	bx	lr

080021ec <HAL_RCC_OscConfig>:
 80021ec:	b580      	push	{r7, lr}
 80021ee:	b086      	sub	sp, #24
 80021f0:	af00      	add	r7, sp, #0
 80021f2:	6078      	str	r0, [r7, #4]
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d101      	bne.n	80021fe <HAL_RCC_OscConfig+0x12>
 80021fa:	2301      	movs	r3, #1
 80021fc:	e272      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	f003 0301 	and.w	r3, r3, #1
 8002206:	2b00      	cmp	r3, #0
 8002208:	f000 8087 	beq.w	800231a <HAL_RCC_OscConfig+0x12e>
 800220c:	4b92      	ldr	r3, [pc, #584]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	f003 030c 	and.w	r3, r3, #12
 8002214:	2b04      	cmp	r3, #4
 8002216:	d00c      	beq.n	8002232 <HAL_RCC_OscConfig+0x46>
 8002218:	4b8f      	ldr	r3, [pc, #572]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800221a:	685b      	ldr	r3, [r3, #4]
 800221c:	f003 030c 	and.w	r3, r3, #12
 8002220:	2b08      	cmp	r3, #8
 8002222:	d112      	bne.n	800224a <HAL_RCC_OscConfig+0x5e>
 8002224:	4b8c      	ldr	r3, [pc, #560]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002226:	685b      	ldr	r3, [r3, #4]
 8002228:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800222c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002230:	d10b      	bne.n	800224a <HAL_RCC_OscConfig+0x5e>
 8002232:	4b89      	ldr	r3, [pc, #548]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800223a:	2b00      	cmp	r3, #0
 800223c:	d06c      	beq.n	8002318 <HAL_RCC_OscConfig+0x12c>
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	685b      	ldr	r3, [r3, #4]
 8002242:	2b00      	cmp	r3, #0
 8002244:	d168      	bne.n	8002318 <HAL_RCC_OscConfig+0x12c>
 8002246:	2301      	movs	r3, #1
 8002248:	e24c      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	685b      	ldr	r3, [r3, #4]
 800224e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002252:	d106      	bne.n	8002262 <HAL_RCC_OscConfig+0x76>
 8002254:	4b80      	ldr	r3, [pc, #512]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	4a7f      	ldr	r2, [pc, #508]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800225a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800225e:	6013      	str	r3, [r2, #0]
 8002260:	e02e      	b.n	80022c0 <HAL_RCC_OscConfig+0xd4>
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	685b      	ldr	r3, [r3, #4]
 8002266:	2b00      	cmp	r3, #0
 8002268:	d10c      	bne.n	8002284 <HAL_RCC_OscConfig+0x98>
 800226a:	4b7b      	ldr	r3, [pc, #492]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	4a7a      	ldr	r2, [pc, #488]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002270:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002274:	6013      	str	r3, [r2, #0]
 8002276:	4b78      	ldr	r3, [pc, #480]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	4a77      	ldr	r2, [pc, #476]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800227c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002280:	6013      	str	r3, [r2, #0]
 8002282:	e01d      	b.n	80022c0 <HAL_RCC_OscConfig+0xd4>
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	685b      	ldr	r3, [r3, #4]
 8002288:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800228c:	d10c      	bne.n	80022a8 <HAL_RCC_OscConfig+0xbc>
 800228e:	4b72      	ldr	r3, [pc, #456]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	4a71      	ldr	r2, [pc, #452]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002294:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002298:	6013      	str	r3, [r2, #0]
 800229a:	4b6f      	ldr	r3, [pc, #444]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	4a6e      	ldr	r2, [pc, #440]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80022a0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022a4:	6013      	str	r3, [r2, #0]
 80022a6:	e00b      	b.n	80022c0 <HAL_RCC_OscConfig+0xd4>
 80022a8:	4b6b      	ldr	r3, [pc, #428]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	4a6a      	ldr	r2, [pc, #424]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80022ae:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80022b2:	6013      	str	r3, [r2, #0]
 80022b4:	4b68      	ldr	r3, [pc, #416]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4a67      	ldr	r2, [pc, #412]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80022ba:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80022be:	6013      	str	r3, [r2, #0]
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	685b      	ldr	r3, [r3, #4]
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d013      	beq.n	80022f0 <HAL_RCC_OscConfig+0x104>
 80022c8:	f7ff f854 	bl	8001374 <HAL_GetTick>
 80022cc:	6138      	str	r0, [r7, #16]
 80022ce:	e008      	b.n	80022e2 <HAL_RCC_OscConfig+0xf6>
 80022d0:	f7ff f850 	bl	8001374 <HAL_GetTick>
 80022d4:	4602      	mov	r2, r0
 80022d6:	693b      	ldr	r3, [r7, #16]
 80022d8:	1ad3      	subs	r3, r2, r3
 80022da:	2b64      	cmp	r3, #100	; 0x64
 80022dc:	d901      	bls.n	80022e2 <HAL_RCC_OscConfig+0xf6>
 80022de:	2303      	movs	r3, #3
 80022e0:	e200      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80022e2:	4b5d      	ldr	r3, [pc, #372]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d0f0      	beq.n	80022d0 <HAL_RCC_OscConfig+0xe4>
 80022ee:	e014      	b.n	800231a <HAL_RCC_OscConfig+0x12e>
 80022f0:	f7ff f840 	bl	8001374 <HAL_GetTick>
 80022f4:	6138      	str	r0, [r7, #16]
 80022f6:	e008      	b.n	800230a <HAL_RCC_OscConfig+0x11e>
 80022f8:	f7ff f83c 	bl	8001374 <HAL_GetTick>
 80022fc:	4602      	mov	r2, r0
 80022fe:	693b      	ldr	r3, [r7, #16]
 8002300:	1ad3      	subs	r3, r2, r3
 8002302:	2b64      	cmp	r3, #100	; 0x64
 8002304:	d901      	bls.n	800230a <HAL_RCC_OscConfig+0x11e>
 8002306:	2303      	movs	r3, #3
 8002308:	e1ec      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 800230a:	4b53      	ldr	r3, [pc, #332]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002312:	2b00      	cmp	r3, #0
 8002314:	d1f0      	bne.n	80022f8 <HAL_RCC_OscConfig+0x10c>
 8002316:	e000      	b.n	800231a <HAL_RCC_OscConfig+0x12e>
 8002318:	bf00      	nop
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	f003 0302 	and.w	r3, r3, #2
 8002322:	2b00      	cmp	r3, #0
 8002324:	d063      	beq.n	80023ee <HAL_RCC_OscConfig+0x202>
 8002326:	4b4c      	ldr	r3, [pc, #304]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002328:	685b      	ldr	r3, [r3, #4]
 800232a:	f003 030c 	and.w	r3, r3, #12
 800232e:	2b00      	cmp	r3, #0
 8002330:	d00b      	beq.n	800234a <HAL_RCC_OscConfig+0x15e>
 8002332:	4b49      	ldr	r3, [pc, #292]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002334:	685b      	ldr	r3, [r3, #4]
 8002336:	f003 030c 	and.w	r3, r3, #12
 800233a:	2b08      	cmp	r3, #8
 800233c:	d11c      	bne.n	8002378 <HAL_RCC_OscConfig+0x18c>
 800233e:	4b46      	ldr	r3, [pc, #280]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002340:	685b      	ldr	r3, [r3, #4]
 8002342:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002346:	2b00      	cmp	r3, #0
 8002348:	d116      	bne.n	8002378 <HAL_RCC_OscConfig+0x18c>
 800234a:	4b43      	ldr	r3, [pc, #268]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 800234c:	681b      	ldr	r3, [r3, #0]
 800234e:	f003 0302 	and.w	r3, r3, #2
 8002352:	2b00      	cmp	r3, #0
 8002354:	d005      	beq.n	8002362 <HAL_RCC_OscConfig+0x176>
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	691b      	ldr	r3, [r3, #16]
 800235a:	2b01      	cmp	r3, #1
 800235c:	d001      	beq.n	8002362 <HAL_RCC_OscConfig+0x176>
 800235e:	2301      	movs	r3, #1
 8002360:	e1c0      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002362:	4b3d      	ldr	r3, [pc, #244]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	695b      	ldr	r3, [r3, #20]
 800236e:	00db      	lsls	r3, r3, #3
 8002370:	4939      	ldr	r1, [pc, #228]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002372:	4313      	orrs	r3, r2
 8002374:	600b      	str	r3, [r1, #0]
 8002376:	e03a      	b.n	80023ee <HAL_RCC_OscConfig+0x202>
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	691b      	ldr	r3, [r3, #16]
 800237c:	2b00      	cmp	r3, #0
 800237e:	d020      	beq.n	80023c2 <HAL_RCC_OscConfig+0x1d6>
 8002380:	4b36      	ldr	r3, [pc, #216]	; (800245c <HAL_RCC_OscConfig+0x270>)
 8002382:	2201      	movs	r2, #1
 8002384:	601a      	str	r2, [r3, #0]
 8002386:	f7fe fff5 	bl	8001374 <HAL_GetTick>
 800238a:	6138      	str	r0, [r7, #16]
 800238c:	e008      	b.n	80023a0 <HAL_RCC_OscConfig+0x1b4>
 800238e:	f7fe fff1 	bl	8001374 <HAL_GetTick>
 8002392:	4602      	mov	r2, r0
 8002394:	693b      	ldr	r3, [r7, #16]
 8002396:	1ad3      	subs	r3, r2, r3
 8002398:	2b02      	cmp	r3, #2
 800239a:	d901      	bls.n	80023a0 <HAL_RCC_OscConfig+0x1b4>
 800239c:	2303      	movs	r3, #3
 800239e:	e1a1      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80023a0:	4b2d      	ldr	r3, [pc, #180]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f003 0302 	and.w	r3, r3, #2
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d0f0      	beq.n	800238e <HAL_RCC_OscConfig+0x1a2>
 80023ac:	4b2a      	ldr	r3, [pc, #168]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	695b      	ldr	r3, [r3, #20]
 80023b8:	00db      	lsls	r3, r3, #3
 80023ba:	4927      	ldr	r1, [pc, #156]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80023bc:	4313      	orrs	r3, r2
 80023be:	600b      	str	r3, [r1, #0]
 80023c0:	e015      	b.n	80023ee <HAL_RCC_OscConfig+0x202>
 80023c2:	4b26      	ldr	r3, [pc, #152]	; (800245c <HAL_RCC_OscConfig+0x270>)
 80023c4:	2200      	movs	r2, #0
 80023c6:	601a      	str	r2, [r3, #0]
 80023c8:	f7fe ffd4 	bl	8001374 <HAL_GetTick>
 80023cc:	6138      	str	r0, [r7, #16]
 80023ce:	e008      	b.n	80023e2 <HAL_RCC_OscConfig+0x1f6>
 80023d0:	f7fe ffd0 	bl	8001374 <HAL_GetTick>
 80023d4:	4602      	mov	r2, r0
 80023d6:	693b      	ldr	r3, [r7, #16]
 80023d8:	1ad3      	subs	r3, r2, r3
 80023da:	2b02      	cmp	r3, #2
 80023dc:	d901      	bls.n	80023e2 <HAL_RCC_OscConfig+0x1f6>
 80023de:	2303      	movs	r3, #3
 80023e0:	e180      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80023e2:	4b1d      	ldr	r3, [pc, #116]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	f003 0302 	and.w	r3, r3, #2
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d1f0      	bne.n	80023d0 <HAL_RCC_OscConfig+0x1e4>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	f003 0308 	and.w	r3, r3, #8
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	d03a      	beq.n	8002470 <HAL_RCC_OscConfig+0x284>
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	699b      	ldr	r3, [r3, #24]
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d019      	beq.n	8002436 <HAL_RCC_OscConfig+0x24a>
 8002402:	4b17      	ldr	r3, [pc, #92]	; (8002460 <HAL_RCC_OscConfig+0x274>)
 8002404:	2201      	movs	r2, #1
 8002406:	601a      	str	r2, [r3, #0]
 8002408:	f7fe ffb4 	bl	8001374 <HAL_GetTick>
 800240c:	6138      	str	r0, [r7, #16]
 800240e:	e008      	b.n	8002422 <HAL_RCC_OscConfig+0x236>
 8002410:	f7fe ffb0 	bl	8001374 <HAL_GetTick>
 8002414:	4602      	mov	r2, r0
 8002416:	693b      	ldr	r3, [r7, #16]
 8002418:	1ad3      	subs	r3, r2, r3
 800241a:	2b02      	cmp	r3, #2
 800241c:	d901      	bls.n	8002422 <HAL_RCC_OscConfig+0x236>
 800241e:	2303      	movs	r3, #3
 8002420:	e160      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002422:	4b0d      	ldr	r3, [pc, #52]	; (8002458 <HAL_RCC_OscConfig+0x26c>)
 8002424:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002426:	f003 0302 	and.w	r3, r3, #2
 800242a:	2b00      	cmp	r3, #0
 800242c:	d0f0      	beq.n	8002410 <HAL_RCC_OscConfig+0x224>
 800242e:	2001      	movs	r0, #1
 8002430:	f000 fac4 	bl	80029bc <RCC_Delay>
 8002434:	e01c      	b.n	8002470 <HAL_RCC_OscConfig+0x284>
 8002436:	4b0a      	ldr	r3, [pc, #40]	; (8002460 <HAL_RCC_OscConfig+0x274>)
 8002438:	2200      	movs	r2, #0
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	f7fe ff9a 	bl	8001374 <HAL_GetTick>
 8002440:	6138      	str	r0, [r7, #16]
 8002442:	e00f      	b.n	8002464 <HAL_RCC_OscConfig+0x278>
 8002444:	f7fe ff96 	bl	8001374 <HAL_GetTick>
 8002448:	4602      	mov	r2, r0
 800244a:	693b      	ldr	r3, [r7, #16]
 800244c:	1ad3      	subs	r3, r2, r3
 800244e:	2b02      	cmp	r3, #2
 8002450:	d908      	bls.n	8002464 <HAL_RCC_OscConfig+0x278>
 8002452:	2303      	movs	r3, #3
 8002454:	e146      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002456:	bf00      	nop
 8002458:	40021000 	.word	0x40021000
 800245c:	42420000 	.word	0x42420000
 8002460:	42420480 	.word	0x42420480
 8002464:	4b92      	ldr	r3, [pc, #584]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002468:	f003 0302 	and.w	r3, r3, #2
 800246c:	2b00      	cmp	r3, #0
 800246e:	d1e9      	bne.n	8002444 <HAL_RCC_OscConfig+0x258>
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	f003 0304 	and.w	r3, r3, #4
 8002478:	2b00      	cmp	r3, #0
 800247a:	f000 80a6 	beq.w	80025ca <HAL_RCC_OscConfig+0x3de>
 800247e:	2300      	movs	r3, #0
 8002480:	75fb      	strb	r3, [r7, #23]
 8002482:	4b8b      	ldr	r3, [pc, #556]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002484:	69db      	ldr	r3, [r3, #28]
 8002486:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800248a:	2b00      	cmp	r3, #0
 800248c:	d10d      	bne.n	80024aa <HAL_RCC_OscConfig+0x2be>
 800248e:	4b88      	ldr	r3, [pc, #544]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002490:	69db      	ldr	r3, [r3, #28]
 8002492:	4a87      	ldr	r2, [pc, #540]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002494:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002498:	61d3      	str	r3, [r2, #28]
 800249a:	4b85      	ldr	r3, [pc, #532]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800249c:	69db      	ldr	r3, [r3, #28]
 800249e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80024a2:	60bb      	str	r3, [r7, #8]
 80024a4:	68bb      	ldr	r3, [r7, #8]
 80024a6:	2301      	movs	r3, #1
 80024a8:	75fb      	strb	r3, [r7, #23]
 80024aa:	4b82      	ldr	r3, [pc, #520]	; (80026b4 <HAL_RCC_OscConfig+0x4c8>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d118      	bne.n	80024e8 <HAL_RCC_OscConfig+0x2fc>
 80024b6:	4b7f      	ldr	r3, [pc, #508]	; (80026b4 <HAL_RCC_OscConfig+0x4c8>)
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	4a7e      	ldr	r2, [pc, #504]	; (80026b4 <HAL_RCC_OscConfig+0x4c8>)
 80024bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80024c0:	6013      	str	r3, [r2, #0]
 80024c2:	f7fe ff57 	bl	8001374 <HAL_GetTick>
 80024c6:	6138      	str	r0, [r7, #16]
 80024c8:	e008      	b.n	80024dc <HAL_RCC_OscConfig+0x2f0>
 80024ca:	f7fe ff53 	bl	8001374 <HAL_GetTick>
 80024ce:	4602      	mov	r2, r0
 80024d0:	693b      	ldr	r3, [r7, #16]
 80024d2:	1ad3      	subs	r3, r2, r3
 80024d4:	2b64      	cmp	r3, #100	; 0x64
 80024d6:	d901      	bls.n	80024dc <HAL_RCC_OscConfig+0x2f0>
 80024d8:	2303      	movs	r3, #3
 80024da:	e103      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80024dc:	4b75      	ldr	r3, [pc, #468]	; (80026b4 <HAL_RCC_OscConfig+0x4c8>)
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024e4:	2b00      	cmp	r3, #0
 80024e6:	d0f0      	beq.n	80024ca <HAL_RCC_OscConfig+0x2de>
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	68db      	ldr	r3, [r3, #12]
 80024ec:	2b01      	cmp	r3, #1
 80024ee:	d106      	bne.n	80024fe <HAL_RCC_OscConfig+0x312>
 80024f0:	4b6f      	ldr	r3, [pc, #444]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 80024f2:	6a1b      	ldr	r3, [r3, #32]
 80024f4:	4a6e      	ldr	r2, [pc, #440]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 80024f6:	f043 0301 	orr.w	r3, r3, #1
 80024fa:	6213      	str	r3, [r2, #32]
 80024fc:	e02d      	b.n	800255a <HAL_RCC_OscConfig+0x36e>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	68db      	ldr	r3, [r3, #12]
 8002502:	2b00      	cmp	r3, #0
 8002504:	d10c      	bne.n	8002520 <HAL_RCC_OscConfig+0x334>
 8002506:	4b6a      	ldr	r3, [pc, #424]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002508:	6a1b      	ldr	r3, [r3, #32]
 800250a:	4a69      	ldr	r2, [pc, #420]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800250c:	f023 0301 	bic.w	r3, r3, #1
 8002510:	6213      	str	r3, [r2, #32]
 8002512:	4b67      	ldr	r3, [pc, #412]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002514:	6a1b      	ldr	r3, [r3, #32]
 8002516:	4a66      	ldr	r2, [pc, #408]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002518:	f023 0304 	bic.w	r3, r3, #4
 800251c:	6213      	str	r3, [r2, #32]
 800251e:	e01c      	b.n	800255a <HAL_RCC_OscConfig+0x36e>
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	68db      	ldr	r3, [r3, #12]
 8002524:	2b05      	cmp	r3, #5
 8002526:	d10c      	bne.n	8002542 <HAL_RCC_OscConfig+0x356>
 8002528:	4b61      	ldr	r3, [pc, #388]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800252a:	6a1b      	ldr	r3, [r3, #32]
 800252c:	4a60      	ldr	r2, [pc, #384]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800252e:	f043 0304 	orr.w	r3, r3, #4
 8002532:	6213      	str	r3, [r2, #32]
 8002534:	4b5e      	ldr	r3, [pc, #376]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002536:	6a1b      	ldr	r3, [r3, #32]
 8002538:	4a5d      	ldr	r2, [pc, #372]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800253a:	f043 0301 	orr.w	r3, r3, #1
 800253e:	6213      	str	r3, [r2, #32]
 8002540:	e00b      	b.n	800255a <HAL_RCC_OscConfig+0x36e>
 8002542:	4b5b      	ldr	r3, [pc, #364]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002544:	6a1b      	ldr	r3, [r3, #32]
 8002546:	4a5a      	ldr	r2, [pc, #360]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002548:	f023 0301 	bic.w	r3, r3, #1
 800254c:	6213      	str	r3, [r2, #32]
 800254e:	4b58      	ldr	r3, [pc, #352]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002550:	6a1b      	ldr	r3, [r3, #32]
 8002552:	4a57      	ldr	r2, [pc, #348]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002554:	f023 0304 	bic.w	r3, r3, #4
 8002558:	6213      	str	r3, [r2, #32]
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	68db      	ldr	r3, [r3, #12]
 800255e:	2b00      	cmp	r3, #0
 8002560:	d015      	beq.n	800258e <HAL_RCC_OscConfig+0x3a2>
 8002562:	f7fe ff07 	bl	8001374 <HAL_GetTick>
 8002566:	6138      	str	r0, [r7, #16]
 8002568:	e00a      	b.n	8002580 <HAL_RCC_OscConfig+0x394>
 800256a:	f7fe ff03 	bl	8001374 <HAL_GetTick>
 800256e:	4602      	mov	r2, r0
 8002570:	693b      	ldr	r3, [r7, #16]
 8002572:	1ad3      	subs	r3, r2, r3
 8002574:	f241 3288 	movw	r2, #5000	; 0x1388
 8002578:	4293      	cmp	r3, r2
 800257a:	d901      	bls.n	8002580 <HAL_RCC_OscConfig+0x394>
 800257c:	2303      	movs	r3, #3
 800257e:	e0b1      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002580:	4b4b      	ldr	r3, [pc, #300]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002582:	6a1b      	ldr	r3, [r3, #32]
 8002584:	f003 0302 	and.w	r3, r3, #2
 8002588:	2b00      	cmp	r3, #0
 800258a:	d0ee      	beq.n	800256a <HAL_RCC_OscConfig+0x37e>
 800258c:	e014      	b.n	80025b8 <HAL_RCC_OscConfig+0x3cc>
 800258e:	f7fe fef1 	bl	8001374 <HAL_GetTick>
 8002592:	6138      	str	r0, [r7, #16]
 8002594:	e00a      	b.n	80025ac <HAL_RCC_OscConfig+0x3c0>
 8002596:	f7fe feed 	bl	8001374 <HAL_GetTick>
 800259a:	4602      	mov	r2, r0
 800259c:	693b      	ldr	r3, [r7, #16]
 800259e:	1ad3      	subs	r3, r2, r3
 80025a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80025a4:	4293      	cmp	r3, r2
 80025a6:	d901      	bls.n	80025ac <HAL_RCC_OscConfig+0x3c0>
 80025a8:	2303      	movs	r3, #3
 80025aa:	e09b      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80025ac:	4b40      	ldr	r3, [pc, #256]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 80025ae:	6a1b      	ldr	r3, [r3, #32]
 80025b0:	f003 0302 	and.w	r3, r3, #2
 80025b4:	2b00      	cmp	r3, #0
 80025b6:	d1ee      	bne.n	8002596 <HAL_RCC_OscConfig+0x3aa>
 80025b8:	7dfb      	ldrb	r3, [r7, #23]
 80025ba:	2b01      	cmp	r3, #1
 80025bc:	d105      	bne.n	80025ca <HAL_RCC_OscConfig+0x3de>
 80025be:	4b3c      	ldr	r3, [pc, #240]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 80025c0:	69db      	ldr	r3, [r3, #28]
 80025c2:	4a3b      	ldr	r2, [pc, #236]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 80025c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80025c8:	61d3      	str	r3, [r2, #28]
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	69db      	ldr	r3, [r3, #28]
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	f000 8087 	beq.w	80026e2 <HAL_RCC_OscConfig+0x4f6>
 80025d4:	4b36      	ldr	r3, [pc, #216]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 80025d6:	685b      	ldr	r3, [r3, #4]
 80025d8:	f003 030c 	and.w	r3, r3, #12
 80025dc:	2b08      	cmp	r3, #8
 80025de:	d061      	beq.n	80026a4 <HAL_RCC_OscConfig+0x4b8>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	69db      	ldr	r3, [r3, #28]
 80025e4:	2b02      	cmp	r3, #2
 80025e6:	d146      	bne.n	8002676 <HAL_RCC_OscConfig+0x48a>
 80025e8:	4b33      	ldr	r3, [pc, #204]	; (80026b8 <HAL_RCC_OscConfig+0x4cc>)
 80025ea:	2200      	movs	r2, #0
 80025ec:	601a      	str	r2, [r3, #0]
 80025ee:	f7fe fec1 	bl	8001374 <HAL_GetTick>
 80025f2:	6138      	str	r0, [r7, #16]
 80025f4:	e008      	b.n	8002608 <HAL_RCC_OscConfig+0x41c>
 80025f6:	f7fe febd 	bl	8001374 <HAL_GetTick>
 80025fa:	4602      	mov	r2, r0
 80025fc:	693b      	ldr	r3, [r7, #16]
 80025fe:	1ad3      	subs	r3, r2, r3
 8002600:	2b02      	cmp	r3, #2
 8002602:	d901      	bls.n	8002608 <HAL_RCC_OscConfig+0x41c>
 8002604:	2303      	movs	r3, #3
 8002606:	e06d      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002608:	4b29      	ldr	r3, [pc, #164]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800260a:	681b      	ldr	r3, [r3, #0]
 800260c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002610:	2b00      	cmp	r3, #0
 8002612:	d1f0      	bne.n	80025f6 <HAL_RCC_OscConfig+0x40a>
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	6a1b      	ldr	r3, [r3, #32]
 8002618:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800261c:	d108      	bne.n	8002630 <HAL_RCC_OscConfig+0x444>
 800261e:	4b24      	ldr	r3, [pc, #144]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002620:	685b      	ldr	r3, [r3, #4]
 8002622:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	689b      	ldr	r3, [r3, #8]
 800262a:	4921      	ldr	r1, [pc, #132]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800262c:	4313      	orrs	r3, r2
 800262e:	604b      	str	r3, [r1, #4]
 8002630:	4b1f      	ldr	r3, [pc, #124]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002632:	685b      	ldr	r3, [r3, #4]
 8002634:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	6a19      	ldr	r1, [r3, #32]
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002640:	430b      	orrs	r3, r1
 8002642:	491b      	ldr	r1, [pc, #108]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002644:	4313      	orrs	r3, r2
 8002646:	604b      	str	r3, [r1, #4]
 8002648:	4b1b      	ldr	r3, [pc, #108]	; (80026b8 <HAL_RCC_OscConfig+0x4cc>)
 800264a:	2201      	movs	r2, #1
 800264c:	601a      	str	r2, [r3, #0]
 800264e:	f7fe fe91 	bl	8001374 <HAL_GetTick>
 8002652:	6138      	str	r0, [r7, #16]
 8002654:	e008      	b.n	8002668 <HAL_RCC_OscConfig+0x47c>
 8002656:	f7fe fe8d 	bl	8001374 <HAL_GetTick>
 800265a:	4602      	mov	r2, r0
 800265c:	693b      	ldr	r3, [r7, #16]
 800265e:	1ad3      	subs	r3, r2, r3
 8002660:	2b02      	cmp	r3, #2
 8002662:	d901      	bls.n	8002668 <HAL_RCC_OscConfig+0x47c>
 8002664:	2303      	movs	r3, #3
 8002666:	e03d      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002668:	4b11      	ldr	r3, [pc, #68]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002670:	2b00      	cmp	r3, #0
 8002672:	d0f0      	beq.n	8002656 <HAL_RCC_OscConfig+0x46a>
 8002674:	e035      	b.n	80026e2 <HAL_RCC_OscConfig+0x4f6>
 8002676:	4b10      	ldr	r3, [pc, #64]	; (80026b8 <HAL_RCC_OscConfig+0x4cc>)
 8002678:	2200      	movs	r2, #0
 800267a:	601a      	str	r2, [r3, #0]
 800267c:	f7fe fe7a 	bl	8001374 <HAL_GetTick>
 8002680:	6138      	str	r0, [r7, #16]
 8002682:	e008      	b.n	8002696 <HAL_RCC_OscConfig+0x4aa>
 8002684:	f7fe fe76 	bl	8001374 <HAL_GetTick>
 8002688:	4602      	mov	r2, r0
 800268a:	693b      	ldr	r3, [r7, #16]
 800268c:	1ad3      	subs	r3, r2, r3
 800268e:	2b02      	cmp	r3, #2
 8002690:	d901      	bls.n	8002696 <HAL_RCC_OscConfig+0x4aa>
 8002692:	2303      	movs	r3, #3
 8002694:	e026      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 8002696:	4b06      	ldr	r3, [pc, #24]	; (80026b0 <HAL_RCC_OscConfig+0x4c4>)
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d1f0      	bne.n	8002684 <HAL_RCC_OscConfig+0x498>
 80026a2:	e01e      	b.n	80026e2 <HAL_RCC_OscConfig+0x4f6>
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	69db      	ldr	r3, [r3, #28]
 80026a8:	2b01      	cmp	r3, #1
 80026aa:	d107      	bne.n	80026bc <HAL_RCC_OscConfig+0x4d0>
 80026ac:	2301      	movs	r3, #1
 80026ae:	e019      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80026b0:	40021000 	.word	0x40021000
 80026b4:	40007000 	.word	0x40007000
 80026b8:	42420060 	.word	0x42420060
 80026bc:	4b0b      	ldr	r3, [pc, #44]	; (80026ec <HAL_RCC_OscConfig+0x500>)
 80026be:	685b      	ldr	r3, [r3, #4]
 80026c0:	60fb      	str	r3, [r7, #12]
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	6a1b      	ldr	r3, [r3, #32]
 80026cc:	429a      	cmp	r2, r3
 80026ce:	d106      	bne.n	80026de <HAL_RCC_OscConfig+0x4f2>
 80026d0:	68fb      	ldr	r3, [r7, #12]
 80026d2:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026da:	429a      	cmp	r2, r3
 80026dc:	d001      	beq.n	80026e2 <HAL_RCC_OscConfig+0x4f6>
 80026de:	2301      	movs	r3, #1
 80026e0:	e000      	b.n	80026e4 <HAL_RCC_OscConfig+0x4f8>
 80026e2:	2300      	movs	r3, #0
 80026e4:	4618      	mov	r0, r3
 80026e6:	3718      	adds	r7, #24
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bd80      	pop	{r7, pc}
 80026ec:	40021000 	.word	0x40021000

080026f0 <HAL_RCC_ClockConfig>:
 80026f0:	b580      	push	{r7, lr}
 80026f2:	b084      	sub	sp, #16
 80026f4:	af00      	add	r7, sp, #0
 80026f6:	6078      	str	r0, [r7, #4]
 80026f8:	6039      	str	r1, [r7, #0]
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d101      	bne.n	8002704 <HAL_RCC_ClockConfig+0x14>
 8002700:	2301      	movs	r3, #1
 8002702:	e0d0      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 8002704:	4b6a      	ldr	r3, [pc, #424]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002706:	681b      	ldr	r3, [r3, #0]
 8002708:	f003 0307 	and.w	r3, r3, #7
 800270c:	683a      	ldr	r2, [r7, #0]
 800270e:	429a      	cmp	r2, r3
 8002710:	d910      	bls.n	8002734 <HAL_RCC_ClockConfig+0x44>
 8002712:	4b67      	ldr	r3, [pc, #412]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	f023 0207 	bic.w	r2, r3, #7
 800271a:	4965      	ldr	r1, [pc, #404]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 800271c:	683b      	ldr	r3, [r7, #0]
 800271e:	4313      	orrs	r3, r2
 8002720:	600b      	str	r3, [r1, #0]
 8002722:	4b63      	ldr	r3, [pc, #396]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	f003 0307 	and.w	r3, r3, #7
 800272a:	683a      	ldr	r2, [r7, #0]
 800272c:	429a      	cmp	r2, r3
 800272e:	d001      	beq.n	8002734 <HAL_RCC_ClockConfig+0x44>
 8002730:	2301      	movs	r3, #1
 8002732:	e0b8      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	f003 0302 	and.w	r3, r3, #2
 800273c:	2b00      	cmp	r3, #0
 800273e:	d020      	beq.n	8002782 <HAL_RCC_ClockConfig+0x92>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	f003 0304 	and.w	r3, r3, #4
 8002748:	2b00      	cmp	r3, #0
 800274a:	d005      	beq.n	8002758 <HAL_RCC_ClockConfig+0x68>
 800274c:	4b59      	ldr	r3, [pc, #356]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800274e:	685b      	ldr	r3, [r3, #4]
 8002750:	4a58      	ldr	r2, [pc, #352]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002752:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002756:	6053      	str	r3, [r2, #4]
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	f003 0308 	and.w	r3, r3, #8
 8002760:	2b00      	cmp	r3, #0
 8002762:	d005      	beq.n	8002770 <HAL_RCC_ClockConfig+0x80>
 8002764:	4b53      	ldr	r3, [pc, #332]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002766:	685b      	ldr	r3, [r3, #4]
 8002768:	4a52      	ldr	r2, [pc, #328]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800276a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800276e:	6053      	str	r3, [r2, #4]
 8002770:	4b50      	ldr	r3, [pc, #320]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002772:	685b      	ldr	r3, [r3, #4]
 8002774:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	689b      	ldr	r3, [r3, #8]
 800277c:	494d      	ldr	r1, [pc, #308]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800277e:	4313      	orrs	r3, r2
 8002780:	604b      	str	r3, [r1, #4]
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	f003 0301 	and.w	r3, r3, #1
 800278a:	2b00      	cmp	r3, #0
 800278c:	d040      	beq.n	8002810 <HAL_RCC_ClockConfig+0x120>
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	685b      	ldr	r3, [r3, #4]
 8002792:	2b01      	cmp	r3, #1
 8002794:	d107      	bne.n	80027a6 <HAL_RCC_ClockConfig+0xb6>
 8002796:	4b47      	ldr	r3, [pc, #284]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d115      	bne.n	80027ce <HAL_RCC_ClockConfig+0xde>
 80027a2:	2301      	movs	r3, #1
 80027a4:	e07f      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	685b      	ldr	r3, [r3, #4]
 80027aa:	2b02      	cmp	r3, #2
 80027ac:	d107      	bne.n	80027be <HAL_RCC_ClockConfig+0xce>
 80027ae:	4b41      	ldr	r3, [pc, #260]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	d109      	bne.n	80027ce <HAL_RCC_ClockConfig+0xde>
 80027ba:	2301      	movs	r3, #1
 80027bc:	e073      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 80027be:	4b3d      	ldr	r3, [pc, #244]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	f003 0302 	and.w	r3, r3, #2
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d101      	bne.n	80027ce <HAL_RCC_ClockConfig+0xde>
 80027ca:	2301      	movs	r3, #1
 80027cc:	e06b      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 80027ce:	4b39      	ldr	r3, [pc, #228]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 80027d0:	685b      	ldr	r3, [r3, #4]
 80027d2:	f023 0203 	bic.w	r2, r3, #3
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	685b      	ldr	r3, [r3, #4]
 80027da:	4936      	ldr	r1, [pc, #216]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 80027dc:	4313      	orrs	r3, r2
 80027de:	604b      	str	r3, [r1, #4]
 80027e0:	f7fe fdc8 	bl	8001374 <HAL_GetTick>
 80027e4:	60f8      	str	r0, [r7, #12]
 80027e6:	e00a      	b.n	80027fe <HAL_RCC_ClockConfig+0x10e>
 80027e8:	f7fe fdc4 	bl	8001374 <HAL_GetTick>
 80027ec:	4602      	mov	r2, r0
 80027ee:	68fb      	ldr	r3, [r7, #12]
 80027f0:	1ad3      	subs	r3, r2, r3
 80027f2:	f241 3288 	movw	r2, #5000	; 0x1388
 80027f6:	4293      	cmp	r3, r2
 80027f8:	d901      	bls.n	80027fe <HAL_RCC_ClockConfig+0x10e>
 80027fa:	2303      	movs	r3, #3
 80027fc:	e053      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 80027fe:	4b2d      	ldr	r3, [pc, #180]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	f003 020c 	and.w	r2, r3, #12
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	685b      	ldr	r3, [r3, #4]
 800280a:	009b      	lsls	r3, r3, #2
 800280c:	429a      	cmp	r2, r3
 800280e:	d1eb      	bne.n	80027e8 <HAL_RCC_ClockConfig+0xf8>
 8002810:	4b27      	ldr	r3, [pc, #156]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	f003 0307 	and.w	r3, r3, #7
 8002818:	683a      	ldr	r2, [r7, #0]
 800281a:	429a      	cmp	r2, r3
 800281c:	d210      	bcs.n	8002840 <HAL_RCC_ClockConfig+0x150>
 800281e:	4b24      	ldr	r3, [pc, #144]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	f023 0207 	bic.w	r2, r3, #7
 8002826:	4922      	ldr	r1, [pc, #136]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002828:	683b      	ldr	r3, [r7, #0]
 800282a:	4313      	orrs	r3, r2
 800282c:	600b      	str	r3, [r1, #0]
 800282e:	4b20      	ldr	r3, [pc, #128]	; (80028b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	f003 0307 	and.w	r3, r3, #7
 8002836:	683a      	ldr	r2, [r7, #0]
 8002838:	429a      	cmp	r2, r3
 800283a:	d001      	beq.n	8002840 <HAL_RCC_ClockConfig+0x150>
 800283c:	2301      	movs	r3, #1
 800283e:	e032      	b.n	80028a6 <HAL_RCC_ClockConfig+0x1b6>
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	f003 0304 	and.w	r3, r3, #4
 8002848:	2b00      	cmp	r3, #0
 800284a:	d008      	beq.n	800285e <HAL_RCC_ClockConfig+0x16e>
 800284c:	4b19      	ldr	r3, [pc, #100]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800284e:	685b      	ldr	r3, [r3, #4]
 8002850:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	68db      	ldr	r3, [r3, #12]
 8002858:	4916      	ldr	r1, [pc, #88]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800285a:	4313      	orrs	r3, r2
 800285c:	604b      	str	r3, [r1, #4]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	f003 0308 	and.w	r3, r3, #8
 8002866:	2b00      	cmp	r3, #0
 8002868:	d009      	beq.n	800287e <HAL_RCC_ClockConfig+0x18e>
 800286a:	4b12      	ldr	r3, [pc, #72]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800286c:	685b      	ldr	r3, [r3, #4]
 800286e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	691b      	ldr	r3, [r3, #16]
 8002876:	00db      	lsls	r3, r3, #3
 8002878:	490e      	ldr	r1, [pc, #56]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 800287a:	4313      	orrs	r3, r2
 800287c:	604b      	str	r3, [r1, #4]
 800287e:	f000 f821 	bl	80028c4 <HAL_RCC_GetSysClockFreq>
 8002882:	4602      	mov	r2, r0
 8002884:	4b0b      	ldr	r3, [pc, #44]	; (80028b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002886:	685b      	ldr	r3, [r3, #4]
 8002888:	091b      	lsrs	r3, r3, #4
 800288a:	f003 030f 	and.w	r3, r3, #15
 800288e:	490a      	ldr	r1, [pc, #40]	; (80028b8 <HAL_RCC_ClockConfig+0x1c8>)
 8002890:	5ccb      	ldrb	r3, [r1, r3]
 8002892:	fa22 f303 	lsr.w	r3, r2, r3
 8002896:	4a09      	ldr	r2, [pc, #36]	; (80028bc <HAL_RCC_ClockConfig+0x1cc>)
 8002898:	6013      	str	r3, [r2, #0]
 800289a:	4b09      	ldr	r3, [pc, #36]	; (80028c0 <HAL_RCC_ClockConfig+0x1d0>)
 800289c:	681b      	ldr	r3, [r3, #0]
 800289e:	4618      	mov	r0, r3
 80028a0:	f7fe fd26 	bl	80012f0 <HAL_InitTick>
 80028a4:	2300      	movs	r3, #0
 80028a6:	4618      	mov	r0, r3
 80028a8:	3710      	adds	r7, #16
 80028aa:	46bd      	mov	sp, r7
 80028ac:	bd80      	pop	{r7, pc}
 80028ae:	bf00      	nop
 80028b0:	40022000 	.word	0x40022000
 80028b4:	40021000 	.word	0x40021000
 80028b8:	08003b88 	.word	0x08003b88
 80028bc:	20000020 	.word	0x20000020
 80028c0:	20000024 	.word	0x20000024

080028c4 <HAL_RCC_GetSysClockFreq>:
 80028c4:	b490      	push	{r4, r7}
 80028c6:	b08a      	sub	sp, #40	; 0x28
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	4b29      	ldr	r3, [pc, #164]	; (8002970 <HAL_RCC_GetSysClockFreq+0xac>)
 80028cc:	1d3c      	adds	r4, r7, #4
 80028ce:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80028d0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80028d4:	f240 2301 	movw	r3, #513	; 0x201
 80028d8:	803b      	strh	r3, [r7, #0]
 80028da:	2300      	movs	r3, #0
 80028dc:	61fb      	str	r3, [r7, #28]
 80028de:	2300      	movs	r3, #0
 80028e0:	61bb      	str	r3, [r7, #24]
 80028e2:	2300      	movs	r3, #0
 80028e4:	627b      	str	r3, [r7, #36]	; 0x24
 80028e6:	2300      	movs	r3, #0
 80028e8:	617b      	str	r3, [r7, #20]
 80028ea:	2300      	movs	r3, #0
 80028ec:	623b      	str	r3, [r7, #32]
 80028ee:	4b21      	ldr	r3, [pc, #132]	; (8002974 <HAL_RCC_GetSysClockFreq+0xb0>)
 80028f0:	685b      	ldr	r3, [r3, #4]
 80028f2:	61fb      	str	r3, [r7, #28]
 80028f4:	69fb      	ldr	r3, [r7, #28]
 80028f6:	f003 030c 	and.w	r3, r3, #12
 80028fa:	2b04      	cmp	r3, #4
 80028fc:	d002      	beq.n	8002904 <HAL_RCC_GetSysClockFreq+0x40>
 80028fe:	2b08      	cmp	r3, #8
 8002900:	d003      	beq.n	800290a <HAL_RCC_GetSysClockFreq+0x46>
 8002902:	e02b      	b.n	800295c <HAL_RCC_GetSysClockFreq+0x98>
 8002904:	4b1c      	ldr	r3, [pc, #112]	; (8002978 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002906:	623b      	str	r3, [r7, #32]
 8002908:	e02b      	b.n	8002962 <HAL_RCC_GetSysClockFreq+0x9e>
 800290a:	69fb      	ldr	r3, [r7, #28]
 800290c:	0c9b      	lsrs	r3, r3, #18
 800290e:	f003 030f 	and.w	r3, r3, #15
 8002912:	3328      	adds	r3, #40	; 0x28
 8002914:	443b      	add	r3, r7
 8002916:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800291a:	617b      	str	r3, [r7, #20]
 800291c:	69fb      	ldr	r3, [r7, #28]
 800291e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002922:	2b00      	cmp	r3, #0
 8002924:	d012      	beq.n	800294c <HAL_RCC_GetSysClockFreq+0x88>
 8002926:	4b13      	ldr	r3, [pc, #76]	; (8002974 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002928:	685b      	ldr	r3, [r3, #4]
 800292a:	0c5b      	lsrs	r3, r3, #17
 800292c:	f003 0301 	and.w	r3, r3, #1
 8002930:	3328      	adds	r3, #40	; 0x28
 8002932:	443b      	add	r3, r7
 8002934:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002938:	61bb      	str	r3, [r7, #24]
 800293a:	697b      	ldr	r3, [r7, #20]
 800293c:	4a0e      	ldr	r2, [pc, #56]	; (8002978 <HAL_RCC_GetSysClockFreq+0xb4>)
 800293e:	fb03 f202 	mul.w	r2, r3, r2
 8002942:	69bb      	ldr	r3, [r7, #24]
 8002944:	fbb2 f3f3 	udiv	r3, r2, r3
 8002948:	627b      	str	r3, [r7, #36]	; 0x24
 800294a:	e004      	b.n	8002956 <HAL_RCC_GetSysClockFreq+0x92>
 800294c:	697b      	ldr	r3, [r7, #20]
 800294e:	4a0b      	ldr	r2, [pc, #44]	; (800297c <HAL_RCC_GetSysClockFreq+0xb8>)
 8002950:	fb02 f303 	mul.w	r3, r2, r3
 8002954:	627b      	str	r3, [r7, #36]	; 0x24
 8002956:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002958:	623b      	str	r3, [r7, #32]
 800295a:	e002      	b.n	8002962 <HAL_RCC_GetSysClockFreq+0x9e>
 800295c:	4b06      	ldr	r3, [pc, #24]	; (8002978 <HAL_RCC_GetSysClockFreq+0xb4>)
 800295e:	623b      	str	r3, [r7, #32]
 8002960:	bf00      	nop
 8002962:	6a3b      	ldr	r3, [r7, #32]
 8002964:	4618      	mov	r0, r3
 8002966:	3728      	adds	r7, #40	; 0x28
 8002968:	46bd      	mov	sp, r7
 800296a:	bc90      	pop	{r4, r7}
 800296c:	4770      	bx	lr
 800296e:	bf00      	nop
 8002970:	08003b78 	.word	0x08003b78
 8002974:	40021000 	.word	0x40021000
 8002978:	007a1200 	.word	0x007a1200
 800297c:	003d0900 	.word	0x003d0900

08002980 <HAL_RCC_GetHCLKFreq>:
 8002980:	b480      	push	{r7}
 8002982:	af00      	add	r7, sp, #0
 8002984:	4b02      	ldr	r3, [pc, #8]	; (8002990 <HAL_RCC_GetHCLKFreq+0x10>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	4618      	mov	r0, r3
 800298a:	46bd      	mov	sp, r7
 800298c:	bc80      	pop	{r7}
 800298e:	4770      	bx	lr
 8002990:	20000020 	.word	0x20000020

08002994 <HAL_RCC_GetPCLK1Freq>:
 8002994:	b580      	push	{r7, lr}
 8002996:	af00      	add	r7, sp, #0
 8002998:	f7ff fff2 	bl	8002980 <HAL_RCC_GetHCLKFreq>
 800299c:	4602      	mov	r2, r0
 800299e:	4b05      	ldr	r3, [pc, #20]	; (80029b4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80029a0:	685b      	ldr	r3, [r3, #4]
 80029a2:	0a1b      	lsrs	r3, r3, #8
 80029a4:	f003 0307 	and.w	r3, r3, #7
 80029a8:	4903      	ldr	r1, [pc, #12]	; (80029b8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80029aa:	5ccb      	ldrb	r3, [r1, r3]
 80029ac:	fa22 f303 	lsr.w	r3, r2, r3
 80029b0:	4618      	mov	r0, r3
 80029b2:	bd80      	pop	{r7, pc}
 80029b4:	40021000 	.word	0x40021000
 80029b8:	08003b98 	.word	0x08003b98

080029bc <RCC_Delay>:
 80029bc:	b480      	push	{r7}
 80029be:	b085      	sub	sp, #20
 80029c0:	af00      	add	r7, sp, #0
 80029c2:	6078      	str	r0, [r7, #4]
 80029c4:	4b0a      	ldr	r3, [pc, #40]	; (80029f0 <RCC_Delay+0x34>)
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	4a0a      	ldr	r2, [pc, #40]	; (80029f4 <RCC_Delay+0x38>)
 80029ca:	fba2 2303 	umull	r2, r3, r2, r3
 80029ce:	0a5b      	lsrs	r3, r3, #9
 80029d0:	687a      	ldr	r2, [r7, #4]
 80029d2:	fb02 f303 	mul.w	r3, r2, r3
 80029d6:	60fb      	str	r3, [r7, #12]
 80029d8:	bf00      	nop
 80029da:	68fb      	ldr	r3, [r7, #12]
 80029dc:	1e5a      	subs	r2, r3, #1
 80029de:	60fa      	str	r2, [r7, #12]
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	d1f9      	bne.n	80029d8 <RCC_Delay+0x1c>
 80029e4:	bf00      	nop
 80029e6:	bf00      	nop
 80029e8:	3714      	adds	r7, #20
 80029ea:	46bd      	mov	sp, r7
 80029ec:	bc80      	pop	{r7}
 80029ee:	4770      	bx	lr
 80029f0:	20000020 	.word	0x20000020
 80029f4:	10624dd3 	.word	0x10624dd3

080029f8 <HAL_TIM_Base_Init>:
 80029f8:	b580      	push	{r7, lr}
 80029fa:	b082      	sub	sp, #8
 80029fc:	af00      	add	r7, sp, #0
 80029fe:	6078      	str	r0, [r7, #4]
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d101      	bne.n	8002a0a <HAL_TIM_Base_Init+0x12>
 8002a06:	2301      	movs	r3, #1
 8002a08:	e041      	b.n	8002a8e <HAL_TIM_Base_Init+0x96>
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a10:	b2db      	uxtb	r3, r3
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d106      	bne.n	8002a24 <HAL_TIM_Base_Init+0x2c>
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	2200      	movs	r2, #0
 8002a1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a1e:	6878      	ldr	r0, [r7, #4]
 8002a20:	f7fe fb98 	bl	8001154 <HAL_TIM_Base_MspInit>
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	2202      	movs	r2, #2
 8002a28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	681a      	ldr	r2, [r3, #0]
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	3304      	adds	r3, #4
 8002a34:	4619      	mov	r1, r3
 8002a36:	4610      	mov	r0, r2
 8002a38:	f000 fa70 	bl	8002f1c <TIM_Base_SetConfig>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	2201      	movs	r2, #1
 8002a40:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	2201      	movs	r2, #1
 8002a48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	2201      	movs	r2, #1
 8002a50:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	2201      	movs	r2, #1
 8002a58:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	2201      	movs	r2, #1
 8002a60:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	2201      	movs	r2, #1
 8002a68:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	2201      	movs	r2, #1
 8002a70:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	2201      	movs	r2, #1
 8002a78:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	2201      	movs	r2, #1
 8002a80:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	2201      	movs	r2, #1
 8002a88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	4618      	mov	r0, r3
 8002a90:	3708      	adds	r7, #8
 8002a92:	46bd      	mov	sp, r7
 8002a94:	bd80      	pop	{r7, pc}
	...

08002a98 <HAL_TIM_Base_Start_IT>:
 8002a98:	b480      	push	{r7}
 8002a9a:	b085      	sub	sp, #20
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002aa6:	b2db      	uxtb	r3, r3
 8002aa8:	2b01      	cmp	r3, #1
 8002aaa:	d001      	beq.n	8002ab0 <HAL_TIM_Base_Start_IT+0x18>
 8002aac:	2301      	movs	r3, #1
 8002aae:	e03a      	b.n	8002b26 <HAL_TIM_Base_Start_IT+0x8e>
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	2202      	movs	r2, #2
 8002ab4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	68da      	ldr	r2, [r3, #12]
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	681b      	ldr	r3, [r3, #0]
 8002ac2:	f042 0201 	orr.w	r2, r2, #1
 8002ac6:	60da      	str	r2, [r3, #12]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4a18      	ldr	r2, [pc, #96]	; (8002b30 <HAL_TIM_Base_Start_IT+0x98>)
 8002ace:	4293      	cmp	r3, r2
 8002ad0:	d00e      	beq.n	8002af0 <HAL_TIM_Base_Start_IT+0x58>
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002ada:	d009      	beq.n	8002af0 <HAL_TIM_Base_Start_IT+0x58>
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	4a14      	ldr	r2, [pc, #80]	; (8002b34 <HAL_TIM_Base_Start_IT+0x9c>)
 8002ae2:	4293      	cmp	r3, r2
 8002ae4:	d004      	beq.n	8002af0 <HAL_TIM_Base_Start_IT+0x58>
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	4a13      	ldr	r2, [pc, #76]	; (8002b38 <HAL_TIM_Base_Start_IT+0xa0>)
 8002aec:	4293      	cmp	r3, r2
 8002aee:	d111      	bne.n	8002b14 <HAL_TIM_Base_Start_IT+0x7c>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	689b      	ldr	r3, [r3, #8]
 8002af6:	f003 0307 	and.w	r3, r3, #7
 8002afa:	60fb      	str	r3, [r7, #12]
 8002afc:	68fb      	ldr	r3, [r7, #12]
 8002afe:	2b06      	cmp	r3, #6
 8002b00:	d010      	beq.n	8002b24 <HAL_TIM_Base_Start_IT+0x8c>
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	681b      	ldr	r3, [r3, #0]
 8002b06:	681a      	ldr	r2, [r3, #0]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	f042 0201 	orr.w	r2, r2, #1
 8002b10:	601a      	str	r2, [r3, #0]
 8002b12:	e007      	b.n	8002b24 <HAL_TIM_Base_Start_IT+0x8c>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	681a      	ldr	r2, [r3, #0]
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f042 0201 	orr.w	r2, r2, #1
 8002b22:	601a      	str	r2, [r3, #0]
 8002b24:	2300      	movs	r3, #0
 8002b26:	4618      	mov	r0, r3
 8002b28:	3714      	adds	r7, #20
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	bc80      	pop	{r7}
 8002b2e:	4770      	bx	lr
 8002b30:	40012c00 	.word	0x40012c00
 8002b34:	40000400 	.word	0x40000400
 8002b38:	40000800 	.word	0x40000800

08002b3c <HAL_TIM_IRQHandler>:
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b082      	sub	sp, #8
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	6078      	str	r0, [r7, #4]
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	691b      	ldr	r3, [r3, #16]
 8002b4a:	f003 0302 	and.w	r3, r3, #2
 8002b4e:	2b02      	cmp	r3, #2
 8002b50:	d122      	bne.n	8002b98 <HAL_TIM_IRQHandler+0x5c>
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	68db      	ldr	r3, [r3, #12]
 8002b58:	f003 0302 	and.w	r3, r3, #2
 8002b5c:	2b02      	cmp	r3, #2
 8002b5e:	d11b      	bne.n	8002b98 <HAL_TIM_IRQHandler+0x5c>
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	f06f 0202 	mvn.w	r2, #2
 8002b68:	611a      	str	r2, [r3, #16]
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	2201      	movs	r2, #1
 8002b6e:	771a      	strb	r2, [r3, #28]
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	699b      	ldr	r3, [r3, #24]
 8002b76:	f003 0303 	and.w	r3, r3, #3
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d003      	beq.n	8002b86 <HAL_TIM_IRQHandler+0x4a>
 8002b7e:	6878      	ldr	r0, [r7, #4]
 8002b80:	f000 f9b1 	bl	8002ee6 <HAL_TIM_IC_CaptureCallback>
 8002b84:	e005      	b.n	8002b92 <HAL_TIM_IRQHandler+0x56>
 8002b86:	6878      	ldr	r0, [r7, #4]
 8002b88:	f000 f9a4 	bl	8002ed4 <HAL_TIM_OC_DelayElapsedCallback>
 8002b8c:	6878      	ldr	r0, [r7, #4]
 8002b8e:	f000 f9b3 	bl	8002ef8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	2200      	movs	r2, #0
 8002b96:	771a      	strb	r2, [r3, #28]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	691b      	ldr	r3, [r3, #16]
 8002b9e:	f003 0304 	and.w	r3, r3, #4
 8002ba2:	2b04      	cmp	r3, #4
 8002ba4:	d122      	bne.n	8002bec <HAL_TIM_IRQHandler+0xb0>
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	68db      	ldr	r3, [r3, #12]
 8002bac:	f003 0304 	and.w	r3, r3, #4
 8002bb0:	2b04      	cmp	r3, #4
 8002bb2:	d11b      	bne.n	8002bec <HAL_TIM_IRQHandler+0xb0>
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	f06f 0204 	mvn.w	r2, #4
 8002bbc:	611a      	str	r2, [r3, #16]
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	2202      	movs	r2, #2
 8002bc2:	771a      	strb	r2, [r3, #28]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	699b      	ldr	r3, [r3, #24]
 8002bca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d003      	beq.n	8002bda <HAL_TIM_IRQHandler+0x9e>
 8002bd2:	6878      	ldr	r0, [r7, #4]
 8002bd4:	f000 f987 	bl	8002ee6 <HAL_TIM_IC_CaptureCallback>
 8002bd8:	e005      	b.n	8002be6 <HAL_TIM_IRQHandler+0xaa>
 8002bda:	6878      	ldr	r0, [r7, #4]
 8002bdc:	f000 f97a 	bl	8002ed4 <HAL_TIM_OC_DelayElapsedCallback>
 8002be0:	6878      	ldr	r0, [r7, #4]
 8002be2:	f000 f989 	bl	8002ef8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	2200      	movs	r2, #0
 8002bea:	771a      	strb	r2, [r3, #28]
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	691b      	ldr	r3, [r3, #16]
 8002bf2:	f003 0308 	and.w	r3, r3, #8
 8002bf6:	2b08      	cmp	r3, #8
 8002bf8:	d122      	bne.n	8002c40 <HAL_TIM_IRQHandler+0x104>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	68db      	ldr	r3, [r3, #12]
 8002c00:	f003 0308 	and.w	r3, r3, #8
 8002c04:	2b08      	cmp	r3, #8
 8002c06:	d11b      	bne.n	8002c40 <HAL_TIM_IRQHandler+0x104>
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f06f 0208 	mvn.w	r2, #8
 8002c10:	611a      	str	r2, [r3, #16]
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	2204      	movs	r2, #4
 8002c16:	771a      	strb	r2, [r3, #28]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	69db      	ldr	r3, [r3, #28]
 8002c1e:	f003 0303 	and.w	r3, r3, #3
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d003      	beq.n	8002c2e <HAL_TIM_IRQHandler+0xf2>
 8002c26:	6878      	ldr	r0, [r7, #4]
 8002c28:	f000 f95d 	bl	8002ee6 <HAL_TIM_IC_CaptureCallback>
 8002c2c:	e005      	b.n	8002c3a <HAL_TIM_IRQHandler+0xfe>
 8002c2e:	6878      	ldr	r0, [r7, #4]
 8002c30:	f000 f950 	bl	8002ed4 <HAL_TIM_OC_DelayElapsedCallback>
 8002c34:	6878      	ldr	r0, [r7, #4]
 8002c36:	f000 f95f 	bl	8002ef8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	2200      	movs	r2, #0
 8002c3e:	771a      	strb	r2, [r3, #28]
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	691b      	ldr	r3, [r3, #16]
 8002c46:	f003 0310 	and.w	r3, r3, #16
 8002c4a:	2b10      	cmp	r3, #16
 8002c4c:	d122      	bne.n	8002c94 <HAL_TIM_IRQHandler+0x158>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	68db      	ldr	r3, [r3, #12]
 8002c54:	f003 0310 	and.w	r3, r3, #16
 8002c58:	2b10      	cmp	r3, #16
 8002c5a:	d11b      	bne.n	8002c94 <HAL_TIM_IRQHandler+0x158>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f06f 0210 	mvn.w	r2, #16
 8002c64:	611a      	str	r2, [r3, #16]
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	2208      	movs	r2, #8
 8002c6a:	771a      	strb	r2, [r3, #28]
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	69db      	ldr	r3, [r3, #28]
 8002c72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d003      	beq.n	8002c82 <HAL_TIM_IRQHandler+0x146>
 8002c7a:	6878      	ldr	r0, [r7, #4]
 8002c7c:	f000 f933 	bl	8002ee6 <HAL_TIM_IC_CaptureCallback>
 8002c80:	e005      	b.n	8002c8e <HAL_TIM_IRQHandler+0x152>
 8002c82:	6878      	ldr	r0, [r7, #4]
 8002c84:	f000 f926 	bl	8002ed4 <HAL_TIM_OC_DelayElapsedCallback>
 8002c88:	6878      	ldr	r0, [r7, #4]
 8002c8a:	f000 f935 	bl	8002ef8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	2200      	movs	r2, #0
 8002c92:	771a      	strb	r2, [r3, #28]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	691b      	ldr	r3, [r3, #16]
 8002c9a:	f003 0301 	and.w	r3, r3, #1
 8002c9e:	2b01      	cmp	r3, #1
 8002ca0:	d10e      	bne.n	8002cc0 <HAL_TIM_IRQHandler+0x184>
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	68db      	ldr	r3, [r3, #12]
 8002ca8:	f003 0301 	and.w	r3, r3, #1
 8002cac:	2b01      	cmp	r3, #1
 8002cae:	d107      	bne.n	8002cc0 <HAL_TIM_IRQHandler+0x184>
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	f06f 0201 	mvn.w	r2, #1
 8002cb8:	611a      	str	r2, [r3, #16]
 8002cba:	6878      	ldr	r0, [r7, #4]
 8002cbc:	f7fe f8d4 	bl	8000e68 <HAL_TIM_PeriodElapsedCallback>
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	691b      	ldr	r3, [r3, #16]
 8002cc6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002cca:	2b80      	cmp	r3, #128	; 0x80
 8002ccc:	d10e      	bne.n	8002cec <HAL_TIM_IRQHandler+0x1b0>
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	68db      	ldr	r3, [r3, #12]
 8002cd4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002cd8:	2b80      	cmp	r3, #128	; 0x80
 8002cda:	d107      	bne.n	8002cec <HAL_TIM_IRQHandler+0x1b0>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002ce4:	611a      	str	r2, [r3, #16]
 8002ce6:	6878      	ldr	r0, [r7, #4]
 8002ce8:	f000 fa77 	bl	80031da <HAL_TIMEx_BreakCallback>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	691b      	ldr	r3, [r3, #16]
 8002cf2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002cf6:	2b40      	cmp	r3, #64	; 0x40
 8002cf8:	d10e      	bne.n	8002d18 <HAL_TIM_IRQHandler+0x1dc>
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	68db      	ldr	r3, [r3, #12]
 8002d00:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d04:	2b40      	cmp	r3, #64	; 0x40
 8002d06:	d107      	bne.n	8002d18 <HAL_TIM_IRQHandler+0x1dc>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002d10:	611a      	str	r2, [r3, #16]
 8002d12:	6878      	ldr	r0, [r7, #4]
 8002d14:	f000 f8f9 	bl	8002f0a <HAL_TIM_TriggerCallback>
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	691b      	ldr	r3, [r3, #16]
 8002d1e:	f003 0320 	and.w	r3, r3, #32
 8002d22:	2b20      	cmp	r3, #32
 8002d24:	d10e      	bne.n	8002d44 <HAL_TIM_IRQHandler+0x208>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	68db      	ldr	r3, [r3, #12]
 8002d2c:	f003 0320 	and.w	r3, r3, #32
 8002d30:	2b20      	cmp	r3, #32
 8002d32:	d107      	bne.n	8002d44 <HAL_TIM_IRQHandler+0x208>
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	f06f 0220 	mvn.w	r2, #32
 8002d3c:	611a      	str	r2, [r3, #16]
 8002d3e:	6878      	ldr	r0, [r7, #4]
 8002d40:	f000 fa42 	bl	80031c8 <HAL_TIMEx_CommutCallback>
 8002d44:	bf00      	nop
 8002d46:	3708      	adds	r7, #8
 8002d48:	46bd      	mov	sp, r7
 8002d4a:	bd80      	pop	{r7, pc}

08002d4c <HAL_TIM_ConfigClockSource>:
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	b084      	sub	sp, #16
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
 8002d54:	6039      	str	r1, [r7, #0]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d5c:	2b01      	cmp	r3, #1
 8002d5e:	d101      	bne.n	8002d64 <HAL_TIM_ConfigClockSource+0x18>
 8002d60:	2302      	movs	r3, #2
 8002d62:	e0b3      	b.n	8002ecc <HAL_TIM_ConfigClockSource+0x180>
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	2201      	movs	r2, #1
 8002d68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	2202      	movs	r2, #2
 8002d70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	689b      	ldr	r3, [r3, #8]
 8002d7a:	60fb      	str	r3, [r7, #12]
 8002d7c:	68fb      	ldr	r3, [r7, #12]
 8002d7e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002d82:	60fb      	str	r3, [r7, #12]
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002d8a:	60fb      	str	r3, [r7, #12]
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	68fa      	ldr	r2, [r7, #12]
 8002d92:	609a      	str	r2, [r3, #8]
 8002d94:	683b      	ldr	r3, [r7, #0]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d9c:	d03e      	beq.n	8002e1c <HAL_TIM_ConfigClockSource+0xd0>
 8002d9e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002da2:	f200 8087 	bhi.w	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002da6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002daa:	f000 8085 	beq.w	8002eb8 <HAL_TIM_ConfigClockSource+0x16c>
 8002dae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002db2:	d87f      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002db4:	2b70      	cmp	r3, #112	; 0x70
 8002db6:	d01a      	beq.n	8002dee <HAL_TIM_ConfigClockSource+0xa2>
 8002db8:	2b70      	cmp	r3, #112	; 0x70
 8002dba:	d87b      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002dbc:	2b60      	cmp	r3, #96	; 0x60
 8002dbe:	d050      	beq.n	8002e62 <HAL_TIM_ConfigClockSource+0x116>
 8002dc0:	2b60      	cmp	r3, #96	; 0x60
 8002dc2:	d877      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002dc4:	2b50      	cmp	r3, #80	; 0x50
 8002dc6:	d03c      	beq.n	8002e42 <HAL_TIM_ConfigClockSource+0xf6>
 8002dc8:	2b50      	cmp	r3, #80	; 0x50
 8002dca:	d873      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002dcc:	2b40      	cmp	r3, #64	; 0x40
 8002dce:	d058      	beq.n	8002e82 <HAL_TIM_ConfigClockSource+0x136>
 8002dd0:	2b40      	cmp	r3, #64	; 0x40
 8002dd2:	d86f      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002dd4:	2b30      	cmp	r3, #48	; 0x30
 8002dd6:	d064      	beq.n	8002ea2 <HAL_TIM_ConfigClockSource+0x156>
 8002dd8:	2b30      	cmp	r3, #48	; 0x30
 8002dda:	d86b      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002ddc:	2b20      	cmp	r3, #32
 8002dde:	d060      	beq.n	8002ea2 <HAL_TIM_ConfigClockSource+0x156>
 8002de0:	2b20      	cmp	r3, #32
 8002de2:	d867      	bhi.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d05c      	beq.n	8002ea2 <HAL_TIM_ConfigClockSource+0x156>
 8002de8:	2b10      	cmp	r3, #16
 8002dea:	d05a      	beq.n	8002ea2 <HAL_TIM_ConfigClockSource+0x156>
 8002dec:	e062      	b.n	8002eb4 <HAL_TIM_ConfigClockSource+0x168>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	6818      	ldr	r0, [r3, #0]
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	6899      	ldr	r1, [r3, #8]
 8002df6:	683b      	ldr	r3, [r7, #0]
 8002df8:	685a      	ldr	r2, [r3, #4]
 8002dfa:	683b      	ldr	r3, [r7, #0]
 8002dfc:	68db      	ldr	r3, [r3, #12]
 8002dfe:	f000 f966 	bl	80030ce <TIM_ETR_SetConfig>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	689b      	ldr	r3, [r3, #8]
 8002e08:	60fb      	str	r3, [r7, #12]
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002e10:	60fb      	str	r3, [r7, #12]
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	68fa      	ldr	r2, [r7, #12]
 8002e18:	609a      	str	r2, [r3, #8]
 8002e1a:	e04e      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	6818      	ldr	r0, [r3, #0]
 8002e20:	683b      	ldr	r3, [r7, #0]
 8002e22:	6899      	ldr	r1, [r3, #8]
 8002e24:	683b      	ldr	r3, [r7, #0]
 8002e26:	685a      	ldr	r2, [r3, #4]
 8002e28:	683b      	ldr	r3, [r7, #0]
 8002e2a:	68db      	ldr	r3, [r3, #12]
 8002e2c:	f000 f94f 	bl	80030ce <TIM_ETR_SetConfig>
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	689a      	ldr	r2, [r3, #8]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002e3e:	609a      	str	r2, [r3, #8]
 8002e40:	e03b      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	6818      	ldr	r0, [r3, #0]
 8002e46:	683b      	ldr	r3, [r7, #0]
 8002e48:	6859      	ldr	r1, [r3, #4]
 8002e4a:	683b      	ldr	r3, [r7, #0]
 8002e4c:	68db      	ldr	r3, [r3, #12]
 8002e4e:	461a      	mov	r2, r3
 8002e50:	f000 f8c6 	bl	8002fe0 <TIM_TI1_ConfigInputStage>
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	2150      	movs	r1, #80	; 0x50
 8002e5a:	4618      	mov	r0, r3
 8002e5c:	f000 f91d 	bl	800309a <TIM_ITRx_SetConfig>
 8002e60:	e02b      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	6818      	ldr	r0, [r3, #0]
 8002e66:	683b      	ldr	r3, [r7, #0]
 8002e68:	6859      	ldr	r1, [r3, #4]
 8002e6a:	683b      	ldr	r3, [r7, #0]
 8002e6c:	68db      	ldr	r3, [r3, #12]
 8002e6e:	461a      	mov	r2, r3
 8002e70:	f000 f8e4 	bl	800303c <TIM_TI2_ConfigInputStage>
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	2160      	movs	r1, #96	; 0x60
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	f000 f90d 	bl	800309a <TIM_ITRx_SetConfig>
 8002e80:	e01b      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	6818      	ldr	r0, [r3, #0]
 8002e86:	683b      	ldr	r3, [r7, #0]
 8002e88:	6859      	ldr	r1, [r3, #4]
 8002e8a:	683b      	ldr	r3, [r7, #0]
 8002e8c:	68db      	ldr	r3, [r3, #12]
 8002e8e:	461a      	mov	r2, r3
 8002e90:	f000 f8a6 	bl	8002fe0 <TIM_TI1_ConfigInputStage>
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	2140      	movs	r1, #64	; 0x40
 8002e9a:	4618      	mov	r0, r3
 8002e9c:	f000 f8fd 	bl	800309a <TIM_ITRx_SetConfig>
 8002ea0:	e00b      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	681a      	ldr	r2, [r3, #0]
 8002ea6:	683b      	ldr	r3, [r7, #0]
 8002ea8:	681b      	ldr	r3, [r3, #0]
 8002eaa:	4619      	mov	r1, r3
 8002eac:	4610      	mov	r0, r2
 8002eae:	f000 f8f4 	bl	800309a <TIM_ITRx_SetConfig>
 8002eb2:	e002      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002eb4:	bf00      	nop
 8002eb6:	e000      	b.n	8002eba <HAL_TIM_ConfigClockSource+0x16e>
 8002eb8:	bf00      	nop
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	2201      	movs	r2, #1
 8002ebe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	2200      	movs	r2, #0
 8002ec6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002eca:	2300      	movs	r3, #0
 8002ecc:	4618      	mov	r0, r3
 8002ece:	3710      	adds	r7, #16
 8002ed0:	46bd      	mov	sp, r7
 8002ed2:	bd80      	pop	{r7, pc}

08002ed4 <HAL_TIM_OC_DelayElapsedCallback>:
 8002ed4:	b480      	push	{r7}
 8002ed6:	b083      	sub	sp, #12
 8002ed8:	af00      	add	r7, sp, #0
 8002eda:	6078      	str	r0, [r7, #4]
 8002edc:	bf00      	nop
 8002ede:	370c      	adds	r7, #12
 8002ee0:	46bd      	mov	sp, r7
 8002ee2:	bc80      	pop	{r7}
 8002ee4:	4770      	bx	lr

08002ee6 <HAL_TIM_IC_CaptureCallback>:
 8002ee6:	b480      	push	{r7}
 8002ee8:	b083      	sub	sp, #12
 8002eea:	af00      	add	r7, sp, #0
 8002eec:	6078      	str	r0, [r7, #4]
 8002eee:	bf00      	nop
 8002ef0:	370c      	adds	r7, #12
 8002ef2:	46bd      	mov	sp, r7
 8002ef4:	bc80      	pop	{r7}
 8002ef6:	4770      	bx	lr

08002ef8 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002ef8:	b480      	push	{r7}
 8002efa:	b083      	sub	sp, #12
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	bf00      	nop
 8002f02:	370c      	adds	r7, #12
 8002f04:	46bd      	mov	sp, r7
 8002f06:	bc80      	pop	{r7}
 8002f08:	4770      	bx	lr

08002f0a <HAL_TIM_TriggerCallback>:
 8002f0a:	b480      	push	{r7}
 8002f0c:	b083      	sub	sp, #12
 8002f0e:	af00      	add	r7, sp, #0
 8002f10:	6078      	str	r0, [r7, #4]
 8002f12:	bf00      	nop
 8002f14:	370c      	adds	r7, #12
 8002f16:	46bd      	mov	sp, r7
 8002f18:	bc80      	pop	{r7}
 8002f1a:	4770      	bx	lr

08002f1c <TIM_Base_SetConfig>:
 8002f1c:	b480      	push	{r7}
 8002f1e:	b085      	sub	sp, #20
 8002f20:	af00      	add	r7, sp, #0
 8002f22:	6078      	str	r0, [r7, #4]
 8002f24:	6039      	str	r1, [r7, #0]
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	60fb      	str	r3, [r7, #12]
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	4a29      	ldr	r2, [pc, #164]	; (8002fd4 <TIM_Base_SetConfig+0xb8>)
 8002f30:	4293      	cmp	r3, r2
 8002f32:	d00b      	beq.n	8002f4c <TIM_Base_SetConfig+0x30>
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f3a:	d007      	beq.n	8002f4c <TIM_Base_SetConfig+0x30>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	4a26      	ldr	r2, [pc, #152]	; (8002fd8 <TIM_Base_SetConfig+0xbc>)
 8002f40:	4293      	cmp	r3, r2
 8002f42:	d003      	beq.n	8002f4c <TIM_Base_SetConfig+0x30>
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	4a25      	ldr	r2, [pc, #148]	; (8002fdc <TIM_Base_SetConfig+0xc0>)
 8002f48:	4293      	cmp	r3, r2
 8002f4a:	d108      	bne.n	8002f5e <TIM_Base_SetConfig+0x42>
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002f52:	60fb      	str	r3, [r7, #12]
 8002f54:	683b      	ldr	r3, [r7, #0]
 8002f56:	685b      	ldr	r3, [r3, #4]
 8002f58:	68fa      	ldr	r2, [r7, #12]
 8002f5a:	4313      	orrs	r3, r2
 8002f5c:	60fb      	str	r3, [r7, #12]
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	4a1c      	ldr	r2, [pc, #112]	; (8002fd4 <TIM_Base_SetConfig+0xb8>)
 8002f62:	4293      	cmp	r3, r2
 8002f64:	d00b      	beq.n	8002f7e <TIM_Base_SetConfig+0x62>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f6c:	d007      	beq.n	8002f7e <TIM_Base_SetConfig+0x62>
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	4a19      	ldr	r2, [pc, #100]	; (8002fd8 <TIM_Base_SetConfig+0xbc>)
 8002f72:	4293      	cmp	r3, r2
 8002f74:	d003      	beq.n	8002f7e <TIM_Base_SetConfig+0x62>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	4a18      	ldr	r2, [pc, #96]	; (8002fdc <TIM_Base_SetConfig+0xc0>)
 8002f7a:	4293      	cmp	r3, r2
 8002f7c:	d108      	bne.n	8002f90 <TIM_Base_SetConfig+0x74>
 8002f7e:	68fb      	ldr	r3, [r7, #12]
 8002f80:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002f84:	60fb      	str	r3, [r7, #12]
 8002f86:	683b      	ldr	r3, [r7, #0]
 8002f88:	68db      	ldr	r3, [r3, #12]
 8002f8a:	68fa      	ldr	r2, [r7, #12]
 8002f8c:	4313      	orrs	r3, r2
 8002f8e:	60fb      	str	r3, [r7, #12]
 8002f90:	68fb      	ldr	r3, [r7, #12]
 8002f92:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002f96:	683b      	ldr	r3, [r7, #0]
 8002f98:	695b      	ldr	r3, [r3, #20]
 8002f9a:	4313      	orrs	r3, r2
 8002f9c:	60fb      	str	r3, [r7, #12]
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	68fa      	ldr	r2, [r7, #12]
 8002fa2:	601a      	str	r2, [r3, #0]
 8002fa4:	683b      	ldr	r3, [r7, #0]
 8002fa6:	689a      	ldr	r2, [r3, #8]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	62da      	str	r2, [r3, #44]	; 0x2c
 8002fac:	683b      	ldr	r3, [r7, #0]
 8002fae:	681a      	ldr	r2, [r3, #0]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	629a      	str	r2, [r3, #40]	; 0x28
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	4a07      	ldr	r2, [pc, #28]	; (8002fd4 <TIM_Base_SetConfig+0xb8>)
 8002fb8:	4293      	cmp	r3, r2
 8002fba:	d103      	bne.n	8002fc4 <TIM_Base_SetConfig+0xa8>
 8002fbc:	683b      	ldr	r3, [r7, #0]
 8002fbe:	691a      	ldr	r2, [r3, #16]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	631a      	str	r2, [r3, #48]	; 0x30
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	2201      	movs	r2, #1
 8002fc8:	615a      	str	r2, [r3, #20]
 8002fca:	bf00      	nop
 8002fcc:	3714      	adds	r7, #20
 8002fce:	46bd      	mov	sp, r7
 8002fd0:	bc80      	pop	{r7}
 8002fd2:	4770      	bx	lr
 8002fd4:	40012c00 	.word	0x40012c00
 8002fd8:	40000400 	.word	0x40000400
 8002fdc:	40000800 	.word	0x40000800

08002fe0 <TIM_TI1_ConfigInputStage>:
 8002fe0:	b480      	push	{r7}
 8002fe2:	b087      	sub	sp, #28
 8002fe4:	af00      	add	r7, sp, #0
 8002fe6:	60f8      	str	r0, [r7, #12]
 8002fe8:	60b9      	str	r1, [r7, #8]
 8002fea:	607a      	str	r2, [r7, #4]
 8002fec:	68fb      	ldr	r3, [r7, #12]
 8002fee:	6a1b      	ldr	r3, [r3, #32]
 8002ff0:	617b      	str	r3, [r7, #20]
 8002ff2:	68fb      	ldr	r3, [r7, #12]
 8002ff4:	6a1b      	ldr	r3, [r3, #32]
 8002ff6:	f023 0201 	bic.w	r2, r3, #1
 8002ffa:	68fb      	ldr	r3, [r7, #12]
 8002ffc:	621a      	str	r2, [r3, #32]
 8002ffe:	68fb      	ldr	r3, [r7, #12]
 8003000:	699b      	ldr	r3, [r3, #24]
 8003002:	613b      	str	r3, [r7, #16]
 8003004:	693b      	ldr	r3, [r7, #16]
 8003006:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800300a:	613b      	str	r3, [r7, #16]
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	011b      	lsls	r3, r3, #4
 8003010:	693a      	ldr	r2, [r7, #16]
 8003012:	4313      	orrs	r3, r2
 8003014:	613b      	str	r3, [r7, #16]
 8003016:	697b      	ldr	r3, [r7, #20]
 8003018:	f023 030a 	bic.w	r3, r3, #10
 800301c:	617b      	str	r3, [r7, #20]
 800301e:	697a      	ldr	r2, [r7, #20]
 8003020:	68bb      	ldr	r3, [r7, #8]
 8003022:	4313      	orrs	r3, r2
 8003024:	617b      	str	r3, [r7, #20]
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	693a      	ldr	r2, [r7, #16]
 800302a:	619a      	str	r2, [r3, #24]
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	697a      	ldr	r2, [r7, #20]
 8003030:	621a      	str	r2, [r3, #32]
 8003032:	bf00      	nop
 8003034:	371c      	adds	r7, #28
 8003036:	46bd      	mov	sp, r7
 8003038:	bc80      	pop	{r7}
 800303a:	4770      	bx	lr

0800303c <TIM_TI2_ConfigInputStage>:
 800303c:	b480      	push	{r7}
 800303e:	b087      	sub	sp, #28
 8003040:	af00      	add	r7, sp, #0
 8003042:	60f8      	str	r0, [r7, #12]
 8003044:	60b9      	str	r1, [r7, #8]
 8003046:	607a      	str	r2, [r7, #4]
 8003048:	68fb      	ldr	r3, [r7, #12]
 800304a:	6a1b      	ldr	r3, [r3, #32]
 800304c:	f023 0210 	bic.w	r2, r3, #16
 8003050:	68fb      	ldr	r3, [r7, #12]
 8003052:	621a      	str	r2, [r3, #32]
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	699b      	ldr	r3, [r3, #24]
 8003058:	617b      	str	r3, [r7, #20]
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	6a1b      	ldr	r3, [r3, #32]
 800305e:	613b      	str	r3, [r7, #16]
 8003060:	697b      	ldr	r3, [r7, #20]
 8003062:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003066:	617b      	str	r3, [r7, #20]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	031b      	lsls	r3, r3, #12
 800306c:	697a      	ldr	r2, [r7, #20]
 800306e:	4313      	orrs	r3, r2
 8003070:	617b      	str	r3, [r7, #20]
 8003072:	693b      	ldr	r3, [r7, #16]
 8003074:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003078:	613b      	str	r3, [r7, #16]
 800307a:	68bb      	ldr	r3, [r7, #8]
 800307c:	011b      	lsls	r3, r3, #4
 800307e:	693a      	ldr	r2, [r7, #16]
 8003080:	4313      	orrs	r3, r2
 8003082:	613b      	str	r3, [r7, #16]
 8003084:	68fb      	ldr	r3, [r7, #12]
 8003086:	697a      	ldr	r2, [r7, #20]
 8003088:	619a      	str	r2, [r3, #24]
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	693a      	ldr	r2, [r7, #16]
 800308e:	621a      	str	r2, [r3, #32]
 8003090:	bf00      	nop
 8003092:	371c      	adds	r7, #28
 8003094:	46bd      	mov	sp, r7
 8003096:	bc80      	pop	{r7}
 8003098:	4770      	bx	lr

0800309a <TIM_ITRx_SetConfig>:
 800309a:	b480      	push	{r7}
 800309c:	b085      	sub	sp, #20
 800309e:	af00      	add	r7, sp, #0
 80030a0:	6078      	str	r0, [r7, #4]
 80030a2:	6039      	str	r1, [r7, #0]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	689b      	ldr	r3, [r3, #8]
 80030a8:	60fb      	str	r3, [r7, #12]
 80030aa:	68fb      	ldr	r3, [r7, #12]
 80030ac:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80030b0:	60fb      	str	r3, [r7, #12]
 80030b2:	683a      	ldr	r2, [r7, #0]
 80030b4:	68fb      	ldr	r3, [r7, #12]
 80030b6:	4313      	orrs	r3, r2
 80030b8:	f043 0307 	orr.w	r3, r3, #7
 80030bc:	60fb      	str	r3, [r7, #12]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	68fa      	ldr	r2, [r7, #12]
 80030c2:	609a      	str	r2, [r3, #8]
 80030c4:	bf00      	nop
 80030c6:	3714      	adds	r7, #20
 80030c8:	46bd      	mov	sp, r7
 80030ca:	bc80      	pop	{r7}
 80030cc:	4770      	bx	lr

080030ce <TIM_ETR_SetConfig>:
 80030ce:	b480      	push	{r7}
 80030d0:	b087      	sub	sp, #28
 80030d2:	af00      	add	r7, sp, #0
 80030d4:	60f8      	str	r0, [r7, #12]
 80030d6:	60b9      	str	r1, [r7, #8]
 80030d8:	607a      	str	r2, [r7, #4]
 80030da:	603b      	str	r3, [r7, #0]
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	689b      	ldr	r3, [r3, #8]
 80030e0:	617b      	str	r3, [r7, #20]
 80030e2:	697b      	ldr	r3, [r7, #20]
 80030e4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80030e8:	617b      	str	r3, [r7, #20]
 80030ea:	683b      	ldr	r3, [r7, #0]
 80030ec:	021a      	lsls	r2, r3, #8
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	431a      	orrs	r2, r3
 80030f2:	68bb      	ldr	r3, [r7, #8]
 80030f4:	4313      	orrs	r3, r2
 80030f6:	697a      	ldr	r2, [r7, #20]
 80030f8:	4313      	orrs	r3, r2
 80030fa:	617b      	str	r3, [r7, #20]
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	697a      	ldr	r2, [r7, #20]
 8003100:	609a      	str	r2, [r3, #8]
 8003102:	bf00      	nop
 8003104:	371c      	adds	r7, #28
 8003106:	46bd      	mov	sp, r7
 8003108:	bc80      	pop	{r7}
 800310a:	4770      	bx	lr

0800310c <HAL_TIMEx_MasterConfigSynchronization>:
 800310c:	b480      	push	{r7}
 800310e:	b085      	sub	sp, #20
 8003110:	af00      	add	r7, sp, #0
 8003112:	6078      	str	r0, [r7, #4]
 8003114:	6039      	str	r1, [r7, #0]
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800311c:	2b01      	cmp	r3, #1
 800311e:	d101      	bne.n	8003124 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003120:	2302      	movs	r3, #2
 8003122:	e046      	b.n	80031b2 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	2201      	movs	r2, #1
 8003128:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	2202      	movs	r2, #2
 8003130:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	685b      	ldr	r3, [r3, #4]
 800313a:	60fb      	str	r3, [r7, #12]
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	689b      	ldr	r3, [r3, #8]
 8003142:	60bb      	str	r3, [r7, #8]
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800314a:	60fb      	str	r3, [r7, #12]
 800314c:	683b      	ldr	r3, [r7, #0]
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	68fa      	ldr	r2, [r7, #12]
 8003152:	4313      	orrs	r3, r2
 8003154:	60fb      	str	r3, [r7, #12]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	68fa      	ldr	r2, [r7, #12]
 800315c:	605a      	str	r2, [r3, #4]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	4a16      	ldr	r2, [pc, #88]	; (80031bc <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003164:	4293      	cmp	r3, r2
 8003166:	d00e      	beq.n	8003186 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003170:	d009      	beq.n	8003186 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	4a12      	ldr	r2, [pc, #72]	; (80031c0 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003178:	4293      	cmp	r3, r2
 800317a:	d004      	beq.n	8003186 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	4a10      	ldr	r2, [pc, #64]	; (80031c4 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003182:	4293      	cmp	r3, r2
 8003184:	d10c      	bne.n	80031a0 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003186:	68bb      	ldr	r3, [r7, #8]
 8003188:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800318c:	60bb      	str	r3, [r7, #8]
 800318e:	683b      	ldr	r3, [r7, #0]
 8003190:	685b      	ldr	r3, [r3, #4]
 8003192:	68ba      	ldr	r2, [r7, #8]
 8003194:	4313      	orrs	r3, r2
 8003196:	60bb      	str	r3, [r7, #8]
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	68ba      	ldr	r2, [r7, #8]
 800319e:	609a      	str	r2, [r3, #8]
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	2201      	movs	r2, #1
 80031a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	2200      	movs	r2, #0
 80031ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031b0:	2300      	movs	r3, #0
 80031b2:	4618      	mov	r0, r3
 80031b4:	3714      	adds	r7, #20
 80031b6:	46bd      	mov	sp, r7
 80031b8:	bc80      	pop	{r7}
 80031ba:	4770      	bx	lr
 80031bc:	40012c00 	.word	0x40012c00
 80031c0:	40000400 	.word	0x40000400
 80031c4:	40000800 	.word	0x40000800

080031c8 <HAL_TIMEx_CommutCallback>:
 80031c8:	b480      	push	{r7}
 80031ca:	b083      	sub	sp, #12
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	6078      	str	r0, [r7, #4]
 80031d0:	bf00      	nop
 80031d2:	370c      	adds	r7, #12
 80031d4:	46bd      	mov	sp, r7
 80031d6:	bc80      	pop	{r7}
 80031d8:	4770      	bx	lr

080031da <HAL_TIMEx_BreakCallback>:
 80031da:	b480      	push	{r7}
 80031dc:	b083      	sub	sp, #12
 80031de:	af00      	add	r7, sp, #0
 80031e0:	6078      	str	r0, [r7, #4]
 80031e2:	bf00      	nop
 80031e4:	370c      	adds	r7, #12
 80031e6:	46bd      	mov	sp, r7
 80031e8:	bc80      	pop	{r7}
 80031ea:	4770      	bx	lr

080031ec <__errno>:
 80031ec:	4b01      	ldr	r3, [pc, #4]	; (80031f4 <__errno+0x8>)
 80031ee:	6818      	ldr	r0, [r3, #0]
 80031f0:	4770      	bx	lr
 80031f2:	bf00      	nop
 80031f4:	2000002c 	.word	0x2000002c

080031f8 <__libc_init_array>:
 80031f8:	b570      	push	{r4, r5, r6, lr}
 80031fa:	2600      	movs	r6, #0
 80031fc:	4d0c      	ldr	r5, [pc, #48]	; (8003230 <__libc_init_array+0x38>)
 80031fe:	4c0d      	ldr	r4, [pc, #52]	; (8003234 <__libc_init_array+0x3c>)
 8003200:	1b64      	subs	r4, r4, r5
 8003202:	10a4      	asrs	r4, r4, #2
 8003204:	42a6      	cmp	r6, r4
 8003206:	d109      	bne.n	800321c <__libc_init_array+0x24>
 8003208:	f000 fc9c 	bl	8003b44 <_init>
 800320c:	2600      	movs	r6, #0
 800320e:	4d0a      	ldr	r5, [pc, #40]	; (8003238 <__libc_init_array+0x40>)
 8003210:	4c0a      	ldr	r4, [pc, #40]	; (800323c <__libc_init_array+0x44>)
 8003212:	1b64      	subs	r4, r4, r5
 8003214:	10a4      	asrs	r4, r4, #2
 8003216:	42a6      	cmp	r6, r4
 8003218:	d105      	bne.n	8003226 <__libc_init_array+0x2e>
 800321a:	bd70      	pop	{r4, r5, r6, pc}
 800321c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003220:	4798      	blx	r3
 8003222:	3601      	adds	r6, #1
 8003224:	e7ee      	b.n	8003204 <__libc_init_array+0xc>
 8003226:	f855 3b04 	ldr.w	r3, [r5], #4
 800322a:	4798      	blx	r3
 800322c:	3601      	adds	r6, #1
 800322e:	e7f2      	b.n	8003216 <__libc_init_array+0x1e>
 8003230:	08003bd4 	.word	0x08003bd4
 8003234:	08003bd4 	.word	0x08003bd4
 8003238:	08003bd4 	.word	0x08003bd4
 800323c:	08003bd8 	.word	0x08003bd8

08003240 <memset>:
 8003240:	4603      	mov	r3, r0
 8003242:	4402      	add	r2, r0
 8003244:	4293      	cmp	r3, r2
 8003246:	d100      	bne.n	800324a <memset+0xa>
 8003248:	4770      	bx	lr
 800324a:	f803 1b01 	strb.w	r1, [r3], #1
 800324e:	e7f9      	b.n	8003244 <memset+0x4>

08003250 <siprintf>:
 8003250:	b40e      	push	{r1, r2, r3}
 8003252:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003256:	b500      	push	{lr}
 8003258:	b09c      	sub	sp, #112	; 0x70
 800325a:	ab1d      	add	r3, sp, #116	; 0x74
 800325c:	9002      	str	r0, [sp, #8]
 800325e:	9006      	str	r0, [sp, #24]
 8003260:	9107      	str	r1, [sp, #28]
 8003262:	9104      	str	r1, [sp, #16]
 8003264:	4808      	ldr	r0, [pc, #32]	; (8003288 <siprintf+0x38>)
 8003266:	4909      	ldr	r1, [pc, #36]	; (800328c <siprintf+0x3c>)
 8003268:	f853 2b04 	ldr.w	r2, [r3], #4
 800326c:	9105      	str	r1, [sp, #20]
 800326e:	6800      	ldr	r0, [r0, #0]
 8003270:	a902      	add	r1, sp, #8
 8003272:	9301      	str	r3, [sp, #4]
 8003274:	f000 f868 	bl	8003348 <_svfiprintf_r>
 8003278:	2200      	movs	r2, #0
 800327a:	9b02      	ldr	r3, [sp, #8]
 800327c:	701a      	strb	r2, [r3, #0]
 800327e:	b01c      	add	sp, #112	; 0x70
 8003280:	f85d eb04 	ldr.w	lr, [sp], #4
 8003284:	b003      	add	sp, #12
 8003286:	4770      	bx	lr
 8003288:	2000002c 	.word	0x2000002c
 800328c:	ffff0208 	.word	0xffff0208

08003290 <__ssputs_r>:
 8003290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003294:	688e      	ldr	r6, [r1, #8]
 8003296:	4682      	mov	sl, r0
 8003298:	429e      	cmp	r6, r3
 800329a:	460c      	mov	r4, r1
 800329c:	4690      	mov	r8, r2
 800329e:	461f      	mov	r7, r3
 80032a0:	d838      	bhi.n	8003314 <__ssputs_r+0x84>
 80032a2:	898a      	ldrh	r2, [r1, #12]
 80032a4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80032a8:	d032      	beq.n	8003310 <__ssputs_r+0x80>
 80032aa:	6825      	ldr	r5, [r4, #0]
 80032ac:	6909      	ldr	r1, [r1, #16]
 80032ae:	3301      	adds	r3, #1
 80032b0:	eba5 0901 	sub.w	r9, r5, r1
 80032b4:	6965      	ldr	r5, [r4, #20]
 80032b6:	444b      	add	r3, r9
 80032b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80032bc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80032c0:	106d      	asrs	r5, r5, #1
 80032c2:	429d      	cmp	r5, r3
 80032c4:	bf38      	it	cc
 80032c6:	461d      	movcc	r5, r3
 80032c8:	0553      	lsls	r3, r2, #21
 80032ca:	d531      	bpl.n	8003330 <__ssputs_r+0xa0>
 80032cc:	4629      	mov	r1, r5
 80032ce:	f000 fb6f 	bl	80039b0 <_malloc_r>
 80032d2:	4606      	mov	r6, r0
 80032d4:	b950      	cbnz	r0, 80032ec <__ssputs_r+0x5c>
 80032d6:	230c      	movs	r3, #12
 80032d8:	f04f 30ff 	mov.w	r0, #4294967295
 80032dc:	f8ca 3000 	str.w	r3, [sl]
 80032e0:	89a3      	ldrh	r3, [r4, #12]
 80032e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80032e6:	81a3      	strh	r3, [r4, #12]
 80032e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80032ec:	464a      	mov	r2, r9
 80032ee:	6921      	ldr	r1, [r4, #16]
 80032f0:	f000 face 	bl	8003890 <memcpy>
 80032f4:	89a3      	ldrh	r3, [r4, #12]
 80032f6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80032fa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80032fe:	81a3      	strh	r3, [r4, #12]
 8003300:	6126      	str	r6, [r4, #16]
 8003302:	444e      	add	r6, r9
 8003304:	6026      	str	r6, [r4, #0]
 8003306:	463e      	mov	r6, r7
 8003308:	6165      	str	r5, [r4, #20]
 800330a:	eba5 0509 	sub.w	r5, r5, r9
 800330e:	60a5      	str	r5, [r4, #8]
 8003310:	42be      	cmp	r6, r7
 8003312:	d900      	bls.n	8003316 <__ssputs_r+0x86>
 8003314:	463e      	mov	r6, r7
 8003316:	4632      	mov	r2, r6
 8003318:	4641      	mov	r1, r8
 800331a:	6820      	ldr	r0, [r4, #0]
 800331c:	f000 fac6 	bl	80038ac <memmove>
 8003320:	68a3      	ldr	r3, [r4, #8]
 8003322:	2000      	movs	r0, #0
 8003324:	1b9b      	subs	r3, r3, r6
 8003326:	60a3      	str	r3, [r4, #8]
 8003328:	6823      	ldr	r3, [r4, #0]
 800332a:	4433      	add	r3, r6
 800332c:	6023      	str	r3, [r4, #0]
 800332e:	e7db      	b.n	80032e8 <__ssputs_r+0x58>
 8003330:	462a      	mov	r2, r5
 8003332:	f000 fbb1 	bl	8003a98 <_realloc_r>
 8003336:	4606      	mov	r6, r0
 8003338:	2800      	cmp	r0, #0
 800333a:	d1e1      	bne.n	8003300 <__ssputs_r+0x70>
 800333c:	4650      	mov	r0, sl
 800333e:	6921      	ldr	r1, [r4, #16]
 8003340:	f000 face 	bl	80038e0 <_free_r>
 8003344:	e7c7      	b.n	80032d6 <__ssputs_r+0x46>
	...

08003348 <_svfiprintf_r>:
 8003348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800334c:	4698      	mov	r8, r3
 800334e:	898b      	ldrh	r3, [r1, #12]
 8003350:	4607      	mov	r7, r0
 8003352:	061b      	lsls	r3, r3, #24
 8003354:	460d      	mov	r5, r1
 8003356:	4614      	mov	r4, r2
 8003358:	b09d      	sub	sp, #116	; 0x74
 800335a:	d50e      	bpl.n	800337a <_svfiprintf_r+0x32>
 800335c:	690b      	ldr	r3, [r1, #16]
 800335e:	b963      	cbnz	r3, 800337a <_svfiprintf_r+0x32>
 8003360:	2140      	movs	r1, #64	; 0x40
 8003362:	f000 fb25 	bl	80039b0 <_malloc_r>
 8003366:	6028      	str	r0, [r5, #0]
 8003368:	6128      	str	r0, [r5, #16]
 800336a:	b920      	cbnz	r0, 8003376 <_svfiprintf_r+0x2e>
 800336c:	230c      	movs	r3, #12
 800336e:	603b      	str	r3, [r7, #0]
 8003370:	f04f 30ff 	mov.w	r0, #4294967295
 8003374:	e0d1      	b.n	800351a <_svfiprintf_r+0x1d2>
 8003376:	2340      	movs	r3, #64	; 0x40
 8003378:	616b      	str	r3, [r5, #20]
 800337a:	2300      	movs	r3, #0
 800337c:	9309      	str	r3, [sp, #36]	; 0x24
 800337e:	2320      	movs	r3, #32
 8003380:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003384:	2330      	movs	r3, #48	; 0x30
 8003386:	f04f 0901 	mov.w	r9, #1
 800338a:	f8cd 800c 	str.w	r8, [sp, #12]
 800338e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003534 <_svfiprintf_r+0x1ec>
 8003392:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003396:	4623      	mov	r3, r4
 8003398:	469a      	mov	sl, r3
 800339a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800339e:	b10a      	cbz	r2, 80033a4 <_svfiprintf_r+0x5c>
 80033a0:	2a25      	cmp	r2, #37	; 0x25
 80033a2:	d1f9      	bne.n	8003398 <_svfiprintf_r+0x50>
 80033a4:	ebba 0b04 	subs.w	fp, sl, r4
 80033a8:	d00b      	beq.n	80033c2 <_svfiprintf_r+0x7a>
 80033aa:	465b      	mov	r3, fp
 80033ac:	4622      	mov	r2, r4
 80033ae:	4629      	mov	r1, r5
 80033b0:	4638      	mov	r0, r7
 80033b2:	f7ff ff6d 	bl	8003290 <__ssputs_r>
 80033b6:	3001      	adds	r0, #1
 80033b8:	f000 80aa 	beq.w	8003510 <_svfiprintf_r+0x1c8>
 80033bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80033be:	445a      	add	r2, fp
 80033c0:	9209      	str	r2, [sp, #36]	; 0x24
 80033c2:	f89a 3000 	ldrb.w	r3, [sl]
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	f000 80a2 	beq.w	8003510 <_svfiprintf_r+0x1c8>
 80033cc:	2300      	movs	r3, #0
 80033ce:	f04f 32ff 	mov.w	r2, #4294967295
 80033d2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80033d6:	f10a 0a01 	add.w	sl, sl, #1
 80033da:	9304      	str	r3, [sp, #16]
 80033dc:	9307      	str	r3, [sp, #28]
 80033de:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80033e2:	931a      	str	r3, [sp, #104]	; 0x68
 80033e4:	4654      	mov	r4, sl
 80033e6:	2205      	movs	r2, #5
 80033e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80033ec:	4851      	ldr	r0, [pc, #324]	; (8003534 <_svfiprintf_r+0x1ec>)
 80033ee:	f000 fa41 	bl	8003874 <memchr>
 80033f2:	9a04      	ldr	r2, [sp, #16]
 80033f4:	b9d8      	cbnz	r0, 800342e <_svfiprintf_r+0xe6>
 80033f6:	06d0      	lsls	r0, r2, #27
 80033f8:	bf44      	itt	mi
 80033fa:	2320      	movmi	r3, #32
 80033fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003400:	0711      	lsls	r1, r2, #28
 8003402:	bf44      	itt	mi
 8003404:	232b      	movmi	r3, #43	; 0x2b
 8003406:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800340a:	f89a 3000 	ldrb.w	r3, [sl]
 800340e:	2b2a      	cmp	r3, #42	; 0x2a
 8003410:	d015      	beq.n	800343e <_svfiprintf_r+0xf6>
 8003412:	4654      	mov	r4, sl
 8003414:	2000      	movs	r0, #0
 8003416:	f04f 0c0a 	mov.w	ip, #10
 800341a:	9a07      	ldr	r2, [sp, #28]
 800341c:	4621      	mov	r1, r4
 800341e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003422:	3b30      	subs	r3, #48	; 0x30
 8003424:	2b09      	cmp	r3, #9
 8003426:	d94e      	bls.n	80034c6 <_svfiprintf_r+0x17e>
 8003428:	b1b0      	cbz	r0, 8003458 <_svfiprintf_r+0x110>
 800342a:	9207      	str	r2, [sp, #28]
 800342c:	e014      	b.n	8003458 <_svfiprintf_r+0x110>
 800342e:	eba0 0308 	sub.w	r3, r0, r8
 8003432:	fa09 f303 	lsl.w	r3, r9, r3
 8003436:	4313      	orrs	r3, r2
 8003438:	46a2      	mov	sl, r4
 800343a:	9304      	str	r3, [sp, #16]
 800343c:	e7d2      	b.n	80033e4 <_svfiprintf_r+0x9c>
 800343e:	9b03      	ldr	r3, [sp, #12]
 8003440:	1d19      	adds	r1, r3, #4
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	9103      	str	r1, [sp, #12]
 8003446:	2b00      	cmp	r3, #0
 8003448:	bfbb      	ittet	lt
 800344a:	425b      	neglt	r3, r3
 800344c:	f042 0202 	orrlt.w	r2, r2, #2
 8003450:	9307      	strge	r3, [sp, #28]
 8003452:	9307      	strlt	r3, [sp, #28]
 8003454:	bfb8      	it	lt
 8003456:	9204      	strlt	r2, [sp, #16]
 8003458:	7823      	ldrb	r3, [r4, #0]
 800345a:	2b2e      	cmp	r3, #46	; 0x2e
 800345c:	d10c      	bne.n	8003478 <_svfiprintf_r+0x130>
 800345e:	7863      	ldrb	r3, [r4, #1]
 8003460:	2b2a      	cmp	r3, #42	; 0x2a
 8003462:	d135      	bne.n	80034d0 <_svfiprintf_r+0x188>
 8003464:	9b03      	ldr	r3, [sp, #12]
 8003466:	3402      	adds	r4, #2
 8003468:	1d1a      	adds	r2, r3, #4
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	9203      	str	r2, [sp, #12]
 800346e:	2b00      	cmp	r3, #0
 8003470:	bfb8      	it	lt
 8003472:	f04f 33ff 	movlt.w	r3, #4294967295
 8003476:	9305      	str	r3, [sp, #20]
 8003478:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8003538 <_svfiprintf_r+0x1f0>
 800347c:	2203      	movs	r2, #3
 800347e:	4650      	mov	r0, sl
 8003480:	7821      	ldrb	r1, [r4, #0]
 8003482:	f000 f9f7 	bl	8003874 <memchr>
 8003486:	b140      	cbz	r0, 800349a <_svfiprintf_r+0x152>
 8003488:	2340      	movs	r3, #64	; 0x40
 800348a:	eba0 000a 	sub.w	r0, r0, sl
 800348e:	fa03 f000 	lsl.w	r0, r3, r0
 8003492:	9b04      	ldr	r3, [sp, #16]
 8003494:	3401      	adds	r4, #1
 8003496:	4303      	orrs	r3, r0
 8003498:	9304      	str	r3, [sp, #16]
 800349a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800349e:	2206      	movs	r2, #6
 80034a0:	4826      	ldr	r0, [pc, #152]	; (800353c <_svfiprintf_r+0x1f4>)
 80034a2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80034a6:	f000 f9e5 	bl	8003874 <memchr>
 80034aa:	2800      	cmp	r0, #0
 80034ac:	d038      	beq.n	8003520 <_svfiprintf_r+0x1d8>
 80034ae:	4b24      	ldr	r3, [pc, #144]	; (8003540 <_svfiprintf_r+0x1f8>)
 80034b0:	bb1b      	cbnz	r3, 80034fa <_svfiprintf_r+0x1b2>
 80034b2:	9b03      	ldr	r3, [sp, #12]
 80034b4:	3307      	adds	r3, #7
 80034b6:	f023 0307 	bic.w	r3, r3, #7
 80034ba:	3308      	adds	r3, #8
 80034bc:	9303      	str	r3, [sp, #12]
 80034be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034c0:	4433      	add	r3, r6
 80034c2:	9309      	str	r3, [sp, #36]	; 0x24
 80034c4:	e767      	b.n	8003396 <_svfiprintf_r+0x4e>
 80034c6:	460c      	mov	r4, r1
 80034c8:	2001      	movs	r0, #1
 80034ca:	fb0c 3202 	mla	r2, ip, r2, r3
 80034ce:	e7a5      	b.n	800341c <_svfiprintf_r+0xd4>
 80034d0:	2300      	movs	r3, #0
 80034d2:	f04f 0c0a 	mov.w	ip, #10
 80034d6:	4619      	mov	r1, r3
 80034d8:	3401      	adds	r4, #1
 80034da:	9305      	str	r3, [sp, #20]
 80034dc:	4620      	mov	r0, r4
 80034de:	f810 2b01 	ldrb.w	r2, [r0], #1
 80034e2:	3a30      	subs	r2, #48	; 0x30
 80034e4:	2a09      	cmp	r2, #9
 80034e6:	d903      	bls.n	80034f0 <_svfiprintf_r+0x1a8>
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	d0c5      	beq.n	8003478 <_svfiprintf_r+0x130>
 80034ec:	9105      	str	r1, [sp, #20]
 80034ee:	e7c3      	b.n	8003478 <_svfiprintf_r+0x130>
 80034f0:	4604      	mov	r4, r0
 80034f2:	2301      	movs	r3, #1
 80034f4:	fb0c 2101 	mla	r1, ip, r1, r2
 80034f8:	e7f0      	b.n	80034dc <_svfiprintf_r+0x194>
 80034fa:	ab03      	add	r3, sp, #12
 80034fc:	9300      	str	r3, [sp, #0]
 80034fe:	462a      	mov	r2, r5
 8003500:	4638      	mov	r0, r7
 8003502:	4b10      	ldr	r3, [pc, #64]	; (8003544 <_svfiprintf_r+0x1fc>)
 8003504:	a904      	add	r1, sp, #16
 8003506:	f3af 8000 	nop.w
 800350a:	1c42      	adds	r2, r0, #1
 800350c:	4606      	mov	r6, r0
 800350e:	d1d6      	bne.n	80034be <_svfiprintf_r+0x176>
 8003510:	89ab      	ldrh	r3, [r5, #12]
 8003512:	065b      	lsls	r3, r3, #25
 8003514:	f53f af2c 	bmi.w	8003370 <_svfiprintf_r+0x28>
 8003518:	9809      	ldr	r0, [sp, #36]	; 0x24
 800351a:	b01d      	add	sp, #116	; 0x74
 800351c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003520:	ab03      	add	r3, sp, #12
 8003522:	9300      	str	r3, [sp, #0]
 8003524:	462a      	mov	r2, r5
 8003526:	4638      	mov	r0, r7
 8003528:	4b06      	ldr	r3, [pc, #24]	; (8003544 <_svfiprintf_r+0x1fc>)
 800352a:	a904      	add	r1, sp, #16
 800352c:	f000 f87c 	bl	8003628 <_printf_i>
 8003530:	e7eb      	b.n	800350a <_svfiprintf_r+0x1c2>
 8003532:	bf00      	nop
 8003534:	08003ba0 	.word	0x08003ba0
 8003538:	08003ba6 	.word	0x08003ba6
 800353c:	08003baa 	.word	0x08003baa
 8003540:	00000000 	.word	0x00000000
 8003544:	08003291 	.word	0x08003291

08003548 <_printf_common>:
 8003548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800354c:	4616      	mov	r6, r2
 800354e:	4699      	mov	r9, r3
 8003550:	688a      	ldr	r2, [r1, #8]
 8003552:	690b      	ldr	r3, [r1, #16]
 8003554:	4607      	mov	r7, r0
 8003556:	4293      	cmp	r3, r2
 8003558:	bfb8      	it	lt
 800355a:	4613      	movlt	r3, r2
 800355c:	6033      	str	r3, [r6, #0]
 800355e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003562:	460c      	mov	r4, r1
 8003564:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003568:	b10a      	cbz	r2, 800356e <_printf_common+0x26>
 800356a:	3301      	adds	r3, #1
 800356c:	6033      	str	r3, [r6, #0]
 800356e:	6823      	ldr	r3, [r4, #0]
 8003570:	0699      	lsls	r1, r3, #26
 8003572:	bf42      	ittt	mi
 8003574:	6833      	ldrmi	r3, [r6, #0]
 8003576:	3302      	addmi	r3, #2
 8003578:	6033      	strmi	r3, [r6, #0]
 800357a:	6825      	ldr	r5, [r4, #0]
 800357c:	f015 0506 	ands.w	r5, r5, #6
 8003580:	d106      	bne.n	8003590 <_printf_common+0x48>
 8003582:	f104 0a19 	add.w	sl, r4, #25
 8003586:	68e3      	ldr	r3, [r4, #12]
 8003588:	6832      	ldr	r2, [r6, #0]
 800358a:	1a9b      	subs	r3, r3, r2
 800358c:	42ab      	cmp	r3, r5
 800358e:	dc28      	bgt.n	80035e2 <_printf_common+0x9a>
 8003590:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003594:	1e13      	subs	r3, r2, #0
 8003596:	6822      	ldr	r2, [r4, #0]
 8003598:	bf18      	it	ne
 800359a:	2301      	movne	r3, #1
 800359c:	0692      	lsls	r2, r2, #26
 800359e:	d42d      	bmi.n	80035fc <_printf_common+0xb4>
 80035a0:	4649      	mov	r1, r9
 80035a2:	4638      	mov	r0, r7
 80035a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80035a8:	47c0      	blx	r8
 80035aa:	3001      	adds	r0, #1
 80035ac:	d020      	beq.n	80035f0 <_printf_common+0xa8>
 80035ae:	6823      	ldr	r3, [r4, #0]
 80035b0:	68e5      	ldr	r5, [r4, #12]
 80035b2:	f003 0306 	and.w	r3, r3, #6
 80035b6:	2b04      	cmp	r3, #4
 80035b8:	bf18      	it	ne
 80035ba:	2500      	movne	r5, #0
 80035bc:	6832      	ldr	r2, [r6, #0]
 80035be:	f04f 0600 	mov.w	r6, #0
 80035c2:	68a3      	ldr	r3, [r4, #8]
 80035c4:	bf08      	it	eq
 80035c6:	1aad      	subeq	r5, r5, r2
 80035c8:	6922      	ldr	r2, [r4, #16]
 80035ca:	bf08      	it	eq
 80035cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80035d0:	4293      	cmp	r3, r2
 80035d2:	bfc4      	itt	gt
 80035d4:	1a9b      	subgt	r3, r3, r2
 80035d6:	18ed      	addgt	r5, r5, r3
 80035d8:	341a      	adds	r4, #26
 80035da:	42b5      	cmp	r5, r6
 80035dc:	d11a      	bne.n	8003614 <_printf_common+0xcc>
 80035de:	2000      	movs	r0, #0
 80035e0:	e008      	b.n	80035f4 <_printf_common+0xac>
 80035e2:	2301      	movs	r3, #1
 80035e4:	4652      	mov	r2, sl
 80035e6:	4649      	mov	r1, r9
 80035e8:	4638      	mov	r0, r7
 80035ea:	47c0      	blx	r8
 80035ec:	3001      	adds	r0, #1
 80035ee:	d103      	bne.n	80035f8 <_printf_common+0xb0>
 80035f0:	f04f 30ff 	mov.w	r0, #4294967295
 80035f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80035f8:	3501      	adds	r5, #1
 80035fa:	e7c4      	b.n	8003586 <_printf_common+0x3e>
 80035fc:	2030      	movs	r0, #48	; 0x30
 80035fe:	18e1      	adds	r1, r4, r3
 8003600:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003604:	1c5a      	adds	r2, r3, #1
 8003606:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800360a:	4422      	add	r2, r4
 800360c:	3302      	adds	r3, #2
 800360e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003612:	e7c5      	b.n	80035a0 <_printf_common+0x58>
 8003614:	2301      	movs	r3, #1
 8003616:	4622      	mov	r2, r4
 8003618:	4649      	mov	r1, r9
 800361a:	4638      	mov	r0, r7
 800361c:	47c0      	blx	r8
 800361e:	3001      	adds	r0, #1
 8003620:	d0e6      	beq.n	80035f0 <_printf_common+0xa8>
 8003622:	3601      	adds	r6, #1
 8003624:	e7d9      	b.n	80035da <_printf_common+0x92>
	...

08003628 <_printf_i>:
 8003628:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800362c:	7e0f      	ldrb	r7, [r1, #24]
 800362e:	4691      	mov	r9, r2
 8003630:	2f78      	cmp	r7, #120	; 0x78
 8003632:	4680      	mov	r8, r0
 8003634:	460c      	mov	r4, r1
 8003636:	469a      	mov	sl, r3
 8003638:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800363a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800363e:	d807      	bhi.n	8003650 <_printf_i+0x28>
 8003640:	2f62      	cmp	r7, #98	; 0x62
 8003642:	d80a      	bhi.n	800365a <_printf_i+0x32>
 8003644:	2f00      	cmp	r7, #0
 8003646:	f000 80d9 	beq.w	80037fc <_printf_i+0x1d4>
 800364a:	2f58      	cmp	r7, #88	; 0x58
 800364c:	f000 80a4 	beq.w	8003798 <_printf_i+0x170>
 8003650:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003654:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003658:	e03a      	b.n	80036d0 <_printf_i+0xa8>
 800365a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800365e:	2b15      	cmp	r3, #21
 8003660:	d8f6      	bhi.n	8003650 <_printf_i+0x28>
 8003662:	a101      	add	r1, pc, #4	; (adr r1, 8003668 <_printf_i+0x40>)
 8003664:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003668:	080036c1 	.word	0x080036c1
 800366c:	080036d5 	.word	0x080036d5
 8003670:	08003651 	.word	0x08003651
 8003674:	08003651 	.word	0x08003651
 8003678:	08003651 	.word	0x08003651
 800367c:	08003651 	.word	0x08003651
 8003680:	080036d5 	.word	0x080036d5
 8003684:	08003651 	.word	0x08003651
 8003688:	08003651 	.word	0x08003651
 800368c:	08003651 	.word	0x08003651
 8003690:	08003651 	.word	0x08003651
 8003694:	080037e3 	.word	0x080037e3
 8003698:	08003705 	.word	0x08003705
 800369c:	080037c5 	.word	0x080037c5
 80036a0:	08003651 	.word	0x08003651
 80036a4:	08003651 	.word	0x08003651
 80036a8:	08003805 	.word	0x08003805
 80036ac:	08003651 	.word	0x08003651
 80036b0:	08003705 	.word	0x08003705
 80036b4:	08003651 	.word	0x08003651
 80036b8:	08003651 	.word	0x08003651
 80036bc:	080037cd 	.word	0x080037cd
 80036c0:	682b      	ldr	r3, [r5, #0]
 80036c2:	1d1a      	adds	r2, r3, #4
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	602a      	str	r2, [r5, #0]
 80036c8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80036cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80036d0:	2301      	movs	r3, #1
 80036d2:	e0a4      	b.n	800381e <_printf_i+0x1f6>
 80036d4:	6820      	ldr	r0, [r4, #0]
 80036d6:	6829      	ldr	r1, [r5, #0]
 80036d8:	0606      	lsls	r6, r0, #24
 80036da:	f101 0304 	add.w	r3, r1, #4
 80036de:	d50a      	bpl.n	80036f6 <_printf_i+0xce>
 80036e0:	680e      	ldr	r6, [r1, #0]
 80036e2:	602b      	str	r3, [r5, #0]
 80036e4:	2e00      	cmp	r6, #0
 80036e6:	da03      	bge.n	80036f0 <_printf_i+0xc8>
 80036e8:	232d      	movs	r3, #45	; 0x2d
 80036ea:	4276      	negs	r6, r6
 80036ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80036f0:	230a      	movs	r3, #10
 80036f2:	485e      	ldr	r0, [pc, #376]	; (800386c <_printf_i+0x244>)
 80036f4:	e019      	b.n	800372a <_printf_i+0x102>
 80036f6:	680e      	ldr	r6, [r1, #0]
 80036f8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80036fc:	602b      	str	r3, [r5, #0]
 80036fe:	bf18      	it	ne
 8003700:	b236      	sxthne	r6, r6
 8003702:	e7ef      	b.n	80036e4 <_printf_i+0xbc>
 8003704:	682b      	ldr	r3, [r5, #0]
 8003706:	6820      	ldr	r0, [r4, #0]
 8003708:	1d19      	adds	r1, r3, #4
 800370a:	6029      	str	r1, [r5, #0]
 800370c:	0601      	lsls	r1, r0, #24
 800370e:	d501      	bpl.n	8003714 <_printf_i+0xec>
 8003710:	681e      	ldr	r6, [r3, #0]
 8003712:	e002      	b.n	800371a <_printf_i+0xf2>
 8003714:	0646      	lsls	r6, r0, #25
 8003716:	d5fb      	bpl.n	8003710 <_printf_i+0xe8>
 8003718:	881e      	ldrh	r6, [r3, #0]
 800371a:	2f6f      	cmp	r7, #111	; 0x6f
 800371c:	bf0c      	ite	eq
 800371e:	2308      	moveq	r3, #8
 8003720:	230a      	movne	r3, #10
 8003722:	4852      	ldr	r0, [pc, #328]	; (800386c <_printf_i+0x244>)
 8003724:	2100      	movs	r1, #0
 8003726:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800372a:	6865      	ldr	r5, [r4, #4]
 800372c:	2d00      	cmp	r5, #0
 800372e:	bfa8      	it	ge
 8003730:	6821      	ldrge	r1, [r4, #0]
 8003732:	60a5      	str	r5, [r4, #8]
 8003734:	bfa4      	itt	ge
 8003736:	f021 0104 	bicge.w	r1, r1, #4
 800373a:	6021      	strge	r1, [r4, #0]
 800373c:	b90e      	cbnz	r6, 8003742 <_printf_i+0x11a>
 800373e:	2d00      	cmp	r5, #0
 8003740:	d04d      	beq.n	80037de <_printf_i+0x1b6>
 8003742:	4615      	mov	r5, r2
 8003744:	fbb6 f1f3 	udiv	r1, r6, r3
 8003748:	fb03 6711 	mls	r7, r3, r1, r6
 800374c:	5dc7      	ldrb	r7, [r0, r7]
 800374e:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003752:	4637      	mov	r7, r6
 8003754:	42bb      	cmp	r3, r7
 8003756:	460e      	mov	r6, r1
 8003758:	d9f4      	bls.n	8003744 <_printf_i+0x11c>
 800375a:	2b08      	cmp	r3, #8
 800375c:	d10b      	bne.n	8003776 <_printf_i+0x14e>
 800375e:	6823      	ldr	r3, [r4, #0]
 8003760:	07de      	lsls	r6, r3, #31
 8003762:	d508      	bpl.n	8003776 <_printf_i+0x14e>
 8003764:	6923      	ldr	r3, [r4, #16]
 8003766:	6861      	ldr	r1, [r4, #4]
 8003768:	4299      	cmp	r1, r3
 800376a:	bfde      	ittt	le
 800376c:	2330      	movle	r3, #48	; 0x30
 800376e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003772:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003776:	1b52      	subs	r2, r2, r5
 8003778:	6122      	str	r2, [r4, #16]
 800377a:	464b      	mov	r3, r9
 800377c:	4621      	mov	r1, r4
 800377e:	4640      	mov	r0, r8
 8003780:	f8cd a000 	str.w	sl, [sp]
 8003784:	aa03      	add	r2, sp, #12
 8003786:	f7ff fedf 	bl	8003548 <_printf_common>
 800378a:	3001      	adds	r0, #1
 800378c:	d14c      	bne.n	8003828 <_printf_i+0x200>
 800378e:	f04f 30ff 	mov.w	r0, #4294967295
 8003792:	b004      	add	sp, #16
 8003794:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003798:	4834      	ldr	r0, [pc, #208]	; (800386c <_printf_i+0x244>)
 800379a:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800379e:	6829      	ldr	r1, [r5, #0]
 80037a0:	6823      	ldr	r3, [r4, #0]
 80037a2:	f851 6b04 	ldr.w	r6, [r1], #4
 80037a6:	6029      	str	r1, [r5, #0]
 80037a8:	061d      	lsls	r5, r3, #24
 80037aa:	d514      	bpl.n	80037d6 <_printf_i+0x1ae>
 80037ac:	07df      	lsls	r7, r3, #31
 80037ae:	bf44      	itt	mi
 80037b0:	f043 0320 	orrmi.w	r3, r3, #32
 80037b4:	6023      	strmi	r3, [r4, #0]
 80037b6:	b91e      	cbnz	r6, 80037c0 <_printf_i+0x198>
 80037b8:	6823      	ldr	r3, [r4, #0]
 80037ba:	f023 0320 	bic.w	r3, r3, #32
 80037be:	6023      	str	r3, [r4, #0]
 80037c0:	2310      	movs	r3, #16
 80037c2:	e7af      	b.n	8003724 <_printf_i+0xfc>
 80037c4:	6823      	ldr	r3, [r4, #0]
 80037c6:	f043 0320 	orr.w	r3, r3, #32
 80037ca:	6023      	str	r3, [r4, #0]
 80037cc:	2378      	movs	r3, #120	; 0x78
 80037ce:	4828      	ldr	r0, [pc, #160]	; (8003870 <_printf_i+0x248>)
 80037d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80037d4:	e7e3      	b.n	800379e <_printf_i+0x176>
 80037d6:	0659      	lsls	r1, r3, #25
 80037d8:	bf48      	it	mi
 80037da:	b2b6      	uxthmi	r6, r6
 80037dc:	e7e6      	b.n	80037ac <_printf_i+0x184>
 80037de:	4615      	mov	r5, r2
 80037e0:	e7bb      	b.n	800375a <_printf_i+0x132>
 80037e2:	682b      	ldr	r3, [r5, #0]
 80037e4:	6826      	ldr	r6, [r4, #0]
 80037e6:	1d18      	adds	r0, r3, #4
 80037e8:	6961      	ldr	r1, [r4, #20]
 80037ea:	6028      	str	r0, [r5, #0]
 80037ec:	0635      	lsls	r5, r6, #24
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	d501      	bpl.n	80037f6 <_printf_i+0x1ce>
 80037f2:	6019      	str	r1, [r3, #0]
 80037f4:	e002      	b.n	80037fc <_printf_i+0x1d4>
 80037f6:	0670      	lsls	r0, r6, #25
 80037f8:	d5fb      	bpl.n	80037f2 <_printf_i+0x1ca>
 80037fa:	8019      	strh	r1, [r3, #0]
 80037fc:	2300      	movs	r3, #0
 80037fe:	4615      	mov	r5, r2
 8003800:	6123      	str	r3, [r4, #16]
 8003802:	e7ba      	b.n	800377a <_printf_i+0x152>
 8003804:	682b      	ldr	r3, [r5, #0]
 8003806:	2100      	movs	r1, #0
 8003808:	1d1a      	adds	r2, r3, #4
 800380a:	602a      	str	r2, [r5, #0]
 800380c:	681d      	ldr	r5, [r3, #0]
 800380e:	6862      	ldr	r2, [r4, #4]
 8003810:	4628      	mov	r0, r5
 8003812:	f000 f82f 	bl	8003874 <memchr>
 8003816:	b108      	cbz	r0, 800381c <_printf_i+0x1f4>
 8003818:	1b40      	subs	r0, r0, r5
 800381a:	6060      	str	r0, [r4, #4]
 800381c:	6863      	ldr	r3, [r4, #4]
 800381e:	6123      	str	r3, [r4, #16]
 8003820:	2300      	movs	r3, #0
 8003822:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003826:	e7a8      	b.n	800377a <_printf_i+0x152>
 8003828:	462a      	mov	r2, r5
 800382a:	4649      	mov	r1, r9
 800382c:	4640      	mov	r0, r8
 800382e:	6923      	ldr	r3, [r4, #16]
 8003830:	47d0      	blx	sl
 8003832:	3001      	adds	r0, #1
 8003834:	d0ab      	beq.n	800378e <_printf_i+0x166>
 8003836:	6823      	ldr	r3, [r4, #0]
 8003838:	079b      	lsls	r3, r3, #30
 800383a:	d413      	bmi.n	8003864 <_printf_i+0x23c>
 800383c:	68e0      	ldr	r0, [r4, #12]
 800383e:	9b03      	ldr	r3, [sp, #12]
 8003840:	4298      	cmp	r0, r3
 8003842:	bfb8      	it	lt
 8003844:	4618      	movlt	r0, r3
 8003846:	e7a4      	b.n	8003792 <_printf_i+0x16a>
 8003848:	2301      	movs	r3, #1
 800384a:	4632      	mov	r2, r6
 800384c:	4649      	mov	r1, r9
 800384e:	4640      	mov	r0, r8
 8003850:	47d0      	blx	sl
 8003852:	3001      	adds	r0, #1
 8003854:	d09b      	beq.n	800378e <_printf_i+0x166>
 8003856:	3501      	adds	r5, #1
 8003858:	68e3      	ldr	r3, [r4, #12]
 800385a:	9903      	ldr	r1, [sp, #12]
 800385c:	1a5b      	subs	r3, r3, r1
 800385e:	42ab      	cmp	r3, r5
 8003860:	dcf2      	bgt.n	8003848 <_printf_i+0x220>
 8003862:	e7eb      	b.n	800383c <_printf_i+0x214>
 8003864:	2500      	movs	r5, #0
 8003866:	f104 0619 	add.w	r6, r4, #25
 800386a:	e7f5      	b.n	8003858 <_printf_i+0x230>
 800386c:	08003bb1 	.word	0x08003bb1
 8003870:	08003bc2 	.word	0x08003bc2

08003874 <memchr>:
 8003874:	4603      	mov	r3, r0
 8003876:	b510      	push	{r4, lr}
 8003878:	b2c9      	uxtb	r1, r1
 800387a:	4402      	add	r2, r0
 800387c:	4293      	cmp	r3, r2
 800387e:	4618      	mov	r0, r3
 8003880:	d101      	bne.n	8003886 <memchr+0x12>
 8003882:	2000      	movs	r0, #0
 8003884:	e003      	b.n	800388e <memchr+0x1a>
 8003886:	7804      	ldrb	r4, [r0, #0]
 8003888:	3301      	adds	r3, #1
 800388a:	428c      	cmp	r4, r1
 800388c:	d1f6      	bne.n	800387c <memchr+0x8>
 800388e:	bd10      	pop	{r4, pc}

08003890 <memcpy>:
 8003890:	440a      	add	r2, r1
 8003892:	4291      	cmp	r1, r2
 8003894:	f100 33ff 	add.w	r3, r0, #4294967295
 8003898:	d100      	bne.n	800389c <memcpy+0xc>
 800389a:	4770      	bx	lr
 800389c:	b510      	push	{r4, lr}
 800389e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80038a2:	4291      	cmp	r1, r2
 80038a4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80038a8:	d1f9      	bne.n	800389e <memcpy+0xe>
 80038aa:	bd10      	pop	{r4, pc}

080038ac <memmove>:
 80038ac:	4288      	cmp	r0, r1
 80038ae:	b510      	push	{r4, lr}
 80038b0:	eb01 0402 	add.w	r4, r1, r2
 80038b4:	d902      	bls.n	80038bc <memmove+0x10>
 80038b6:	4284      	cmp	r4, r0
 80038b8:	4623      	mov	r3, r4
 80038ba:	d807      	bhi.n	80038cc <memmove+0x20>
 80038bc:	1e43      	subs	r3, r0, #1
 80038be:	42a1      	cmp	r1, r4
 80038c0:	d008      	beq.n	80038d4 <memmove+0x28>
 80038c2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80038c6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80038ca:	e7f8      	b.n	80038be <memmove+0x12>
 80038cc:	4601      	mov	r1, r0
 80038ce:	4402      	add	r2, r0
 80038d0:	428a      	cmp	r2, r1
 80038d2:	d100      	bne.n	80038d6 <memmove+0x2a>
 80038d4:	bd10      	pop	{r4, pc}
 80038d6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80038da:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80038de:	e7f7      	b.n	80038d0 <memmove+0x24>

080038e0 <_free_r>:
 80038e0:	b538      	push	{r3, r4, r5, lr}
 80038e2:	4605      	mov	r5, r0
 80038e4:	2900      	cmp	r1, #0
 80038e6:	d040      	beq.n	800396a <_free_r+0x8a>
 80038e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80038ec:	1f0c      	subs	r4, r1, #4
 80038ee:	2b00      	cmp	r3, #0
 80038f0:	bfb8      	it	lt
 80038f2:	18e4      	addlt	r4, r4, r3
 80038f4:	f000 f910 	bl	8003b18 <__malloc_lock>
 80038f8:	4a1c      	ldr	r2, [pc, #112]	; (800396c <_free_r+0x8c>)
 80038fa:	6813      	ldr	r3, [r2, #0]
 80038fc:	b933      	cbnz	r3, 800390c <_free_r+0x2c>
 80038fe:	6063      	str	r3, [r4, #4]
 8003900:	6014      	str	r4, [r2, #0]
 8003902:	4628      	mov	r0, r5
 8003904:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003908:	f000 b90c 	b.w	8003b24 <__malloc_unlock>
 800390c:	42a3      	cmp	r3, r4
 800390e:	d908      	bls.n	8003922 <_free_r+0x42>
 8003910:	6820      	ldr	r0, [r4, #0]
 8003912:	1821      	adds	r1, r4, r0
 8003914:	428b      	cmp	r3, r1
 8003916:	bf01      	itttt	eq
 8003918:	6819      	ldreq	r1, [r3, #0]
 800391a:	685b      	ldreq	r3, [r3, #4]
 800391c:	1809      	addeq	r1, r1, r0
 800391e:	6021      	streq	r1, [r4, #0]
 8003920:	e7ed      	b.n	80038fe <_free_r+0x1e>
 8003922:	461a      	mov	r2, r3
 8003924:	685b      	ldr	r3, [r3, #4]
 8003926:	b10b      	cbz	r3, 800392c <_free_r+0x4c>
 8003928:	42a3      	cmp	r3, r4
 800392a:	d9fa      	bls.n	8003922 <_free_r+0x42>
 800392c:	6811      	ldr	r1, [r2, #0]
 800392e:	1850      	adds	r0, r2, r1
 8003930:	42a0      	cmp	r0, r4
 8003932:	d10b      	bne.n	800394c <_free_r+0x6c>
 8003934:	6820      	ldr	r0, [r4, #0]
 8003936:	4401      	add	r1, r0
 8003938:	1850      	adds	r0, r2, r1
 800393a:	4283      	cmp	r3, r0
 800393c:	6011      	str	r1, [r2, #0]
 800393e:	d1e0      	bne.n	8003902 <_free_r+0x22>
 8003940:	6818      	ldr	r0, [r3, #0]
 8003942:	685b      	ldr	r3, [r3, #4]
 8003944:	4401      	add	r1, r0
 8003946:	6011      	str	r1, [r2, #0]
 8003948:	6053      	str	r3, [r2, #4]
 800394a:	e7da      	b.n	8003902 <_free_r+0x22>
 800394c:	d902      	bls.n	8003954 <_free_r+0x74>
 800394e:	230c      	movs	r3, #12
 8003950:	602b      	str	r3, [r5, #0]
 8003952:	e7d6      	b.n	8003902 <_free_r+0x22>
 8003954:	6820      	ldr	r0, [r4, #0]
 8003956:	1821      	adds	r1, r4, r0
 8003958:	428b      	cmp	r3, r1
 800395a:	bf01      	itttt	eq
 800395c:	6819      	ldreq	r1, [r3, #0]
 800395e:	685b      	ldreq	r3, [r3, #4]
 8003960:	1809      	addeq	r1, r1, r0
 8003962:	6021      	streq	r1, [r4, #0]
 8003964:	6063      	str	r3, [r4, #4]
 8003966:	6054      	str	r4, [r2, #4]
 8003968:	e7cb      	b.n	8003902 <_free_r+0x22>
 800396a:	bd38      	pop	{r3, r4, r5, pc}
 800396c:	20000204 	.word	0x20000204

08003970 <sbrk_aligned>:
 8003970:	b570      	push	{r4, r5, r6, lr}
 8003972:	4e0e      	ldr	r6, [pc, #56]	; (80039ac <sbrk_aligned+0x3c>)
 8003974:	460c      	mov	r4, r1
 8003976:	6831      	ldr	r1, [r6, #0]
 8003978:	4605      	mov	r5, r0
 800397a:	b911      	cbnz	r1, 8003982 <sbrk_aligned+0x12>
 800397c:	f000 f8bc 	bl	8003af8 <_sbrk_r>
 8003980:	6030      	str	r0, [r6, #0]
 8003982:	4621      	mov	r1, r4
 8003984:	4628      	mov	r0, r5
 8003986:	f000 f8b7 	bl	8003af8 <_sbrk_r>
 800398a:	1c43      	adds	r3, r0, #1
 800398c:	d00a      	beq.n	80039a4 <sbrk_aligned+0x34>
 800398e:	1cc4      	adds	r4, r0, #3
 8003990:	f024 0403 	bic.w	r4, r4, #3
 8003994:	42a0      	cmp	r0, r4
 8003996:	d007      	beq.n	80039a8 <sbrk_aligned+0x38>
 8003998:	1a21      	subs	r1, r4, r0
 800399a:	4628      	mov	r0, r5
 800399c:	f000 f8ac 	bl	8003af8 <_sbrk_r>
 80039a0:	3001      	adds	r0, #1
 80039a2:	d101      	bne.n	80039a8 <sbrk_aligned+0x38>
 80039a4:	f04f 34ff 	mov.w	r4, #4294967295
 80039a8:	4620      	mov	r0, r4
 80039aa:	bd70      	pop	{r4, r5, r6, pc}
 80039ac:	20000208 	.word	0x20000208

080039b0 <_malloc_r>:
 80039b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039b4:	1ccd      	adds	r5, r1, #3
 80039b6:	f025 0503 	bic.w	r5, r5, #3
 80039ba:	3508      	adds	r5, #8
 80039bc:	2d0c      	cmp	r5, #12
 80039be:	bf38      	it	cc
 80039c0:	250c      	movcc	r5, #12
 80039c2:	2d00      	cmp	r5, #0
 80039c4:	4607      	mov	r7, r0
 80039c6:	db01      	blt.n	80039cc <_malloc_r+0x1c>
 80039c8:	42a9      	cmp	r1, r5
 80039ca:	d905      	bls.n	80039d8 <_malloc_r+0x28>
 80039cc:	230c      	movs	r3, #12
 80039ce:	2600      	movs	r6, #0
 80039d0:	603b      	str	r3, [r7, #0]
 80039d2:	4630      	mov	r0, r6
 80039d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80039d8:	4e2e      	ldr	r6, [pc, #184]	; (8003a94 <_malloc_r+0xe4>)
 80039da:	f000 f89d 	bl	8003b18 <__malloc_lock>
 80039de:	6833      	ldr	r3, [r6, #0]
 80039e0:	461c      	mov	r4, r3
 80039e2:	bb34      	cbnz	r4, 8003a32 <_malloc_r+0x82>
 80039e4:	4629      	mov	r1, r5
 80039e6:	4638      	mov	r0, r7
 80039e8:	f7ff ffc2 	bl	8003970 <sbrk_aligned>
 80039ec:	1c43      	adds	r3, r0, #1
 80039ee:	4604      	mov	r4, r0
 80039f0:	d14d      	bne.n	8003a8e <_malloc_r+0xde>
 80039f2:	6834      	ldr	r4, [r6, #0]
 80039f4:	4626      	mov	r6, r4
 80039f6:	2e00      	cmp	r6, #0
 80039f8:	d140      	bne.n	8003a7c <_malloc_r+0xcc>
 80039fa:	6823      	ldr	r3, [r4, #0]
 80039fc:	4631      	mov	r1, r6
 80039fe:	4638      	mov	r0, r7
 8003a00:	eb04 0803 	add.w	r8, r4, r3
 8003a04:	f000 f878 	bl	8003af8 <_sbrk_r>
 8003a08:	4580      	cmp	r8, r0
 8003a0a:	d13a      	bne.n	8003a82 <_malloc_r+0xd2>
 8003a0c:	6821      	ldr	r1, [r4, #0]
 8003a0e:	3503      	adds	r5, #3
 8003a10:	1a6d      	subs	r5, r5, r1
 8003a12:	f025 0503 	bic.w	r5, r5, #3
 8003a16:	3508      	adds	r5, #8
 8003a18:	2d0c      	cmp	r5, #12
 8003a1a:	bf38      	it	cc
 8003a1c:	250c      	movcc	r5, #12
 8003a1e:	4638      	mov	r0, r7
 8003a20:	4629      	mov	r1, r5
 8003a22:	f7ff ffa5 	bl	8003970 <sbrk_aligned>
 8003a26:	3001      	adds	r0, #1
 8003a28:	d02b      	beq.n	8003a82 <_malloc_r+0xd2>
 8003a2a:	6823      	ldr	r3, [r4, #0]
 8003a2c:	442b      	add	r3, r5
 8003a2e:	6023      	str	r3, [r4, #0]
 8003a30:	e00e      	b.n	8003a50 <_malloc_r+0xa0>
 8003a32:	6822      	ldr	r2, [r4, #0]
 8003a34:	1b52      	subs	r2, r2, r5
 8003a36:	d41e      	bmi.n	8003a76 <_malloc_r+0xc6>
 8003a38:	2a0b      	cmp	r2, #11
 8003a3a:	d916      	bls.n	8003a6a <_malloc_r+0xba>
 8003a3c:	1961      	adds	r1, r4, r5
 8003a3e:	42a3      	cmp	r3, r4
 8003a40:	6025      	str	r5, [r4, #0]
 8003a42:	bf18      	it	ne
 8003a44:	6059      	strne	r1, [r3, #4]
 8003a46:	6863      	ldr	r3, [r4, #4]
 8003a48:	bf08      	it	eq
 8003a4a:	6031      	streq	r1, [r6, #0]
 8003a4c:	5162      	str	r2, [r4, r5]
 8003a4e:	604b      	str	r3, [r1, #4]
 8003a50:	4638      	mov	r0, r7
 8003a52:	f104 060b 	add.w	r6, r4, #11
 8003a56:	f000 f865 	bl	8003b24 <__malloc_unlock>
 8003a5a:	f026 0607 	bic.w	r6, r6, #7
 8003a5e:	1d23      	adds	r3, r4, #4
 8003a60:	1af2      	subs	r2, r6, r3
 8003a62:	d0b6      	beq.n	80039d2 <_malloc_r+0x22>
 8003a64:	1b9b      	subs	r3, r3, r6
 8003a66:	50a3      	str	r3, [r4, r2]
 8003a68:	e7b3      	b.n	80039d2 <_malloc_r+0x22>
 8003a6a:	6862      	ldr	r2, [r4, #4]
 8003a6c:	42a3      	cmp	r3, r4
 8003a6e:	bf0c      	ite	eq
 8003a70:	6032      	streq	r2, [r6, #0]
 8003a72:	605a      	strne	r2, [r3, #4]
 8003a74:	e7ec      	b.n	8003a50 <_malloc_r+0xa0>
 8003a76:	4623      	mov	r3, r4
 8003a78:	6864      	ldr	r4, [r4, #4]
 8003a7a:	e7b2      	b.n	80039e2 <_malloc_r+0x32>
 8003a7c:	4634      	mov	r4, r6
 8003a7e:	6876      	ldr	r6, [r6, #4]
 8003a80:	e7b9      	b.n	80039f6 <_malloc_r+0x46>
 8003a82:	230c      	movs	r3, #12
 8003a84:	4638      	mov	r0, r7
 8003a86:	603b      	str	r3, [r7, #0]
 8003a88:	f000 f84c 	bl	8003b24 <__malloc_unlock>
 8003a8c:	e7a1      	b.n	80039d2 <_malloc_r+0x22>
 8003a8e:	6025      	str	r5, [r4, #0]
 8003a90:	e7de      	b.n	8003a50 <_malloc_r+0xa0>
 8003a92:	bf00      	nop
 8003a94:	20000204 	.word	0x20000204

08003a98 <_realloc_r>:
 8003a98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a9c:	4680      	mov	r8, r0
 8003a9e:	4614      	mov	r4, r2
 8003aa0:	460e      	mov	r6, r1
 8003aa2:	b921      	cbnz	r1, 8003aae <_realloc_r+0x16>
 8003aa4:	4611      	mov	r1, r2
 8003aa6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003aaa:	f7ff bf81 	b.w	80039b0 <_malloc_r>
 8003aae:	b92a      	cbnz	r2, 8003abc <_realloc_r+0x24>
 8003ab0:	f7ff ff16 	bl	80038e0 <_free_r>
 8003ab4:	4625      	mov	r5, r4
 8003ab6:	4628      	mov	r0, r5
 8003ab8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003abc:	f000 f838 	bl	8003b30 <_malloc_usable_size_r>
 8003ac0:	4284      	cmp	r4, r0
 8003ac2:	4607      	mov	r7, r0
 8003ac4:	d802      	bhi.n	8003acc <_realloc_r+0x34>
 8003ac6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003aca:	d812      	bhi.n	8003af2 <_realloc_r+0x5a>
 8003acc:	4621      	mov	r1, r4
 8003ace:	4640      	mov	r0, r8
 8003ad0:	f7ff ff6e 	bl	80039b0 <_malloc_r>
 8003ad4:	4605      	mov	r5, r0
 8003ad6:	2800      	cmp	r0, #0
 8003ad8:	d0ed      	beq.n	8003ab6 <_realloc_r+0x1e>
 8003ada:	42bc      	cmp	r4, r7
 8003adc:	4622      	mov	r2, r4
 8003ade:	4631      	mov	r1, r6
 8003ae0:	bf28      	it	cs
 8003ae2:	463a      	movcs	r2, r7
 8003ae4:	f7ff fed4 	bl	8003890 <memcpy>
 8003ae8:	4631      	mov	r1, r6
 8003aea:	4640      	mov	r0, r8
 8003aec:	f7ff fef8 	bl	80038e0 <_free_r>
 8003af0:	e7e1      	b.n	8003ab6 <_realloc_r+0x1e>
 8003af2:	4635      	mov	r5, r6
 8003af4:	e7df      	b.n	8003ab6 <_realloc_r+0x1e>
	...

08003af8 <_sbrk_r>:
 8003af8:	b538      	push	{r3, r4, r5, lr}
 8003afa:	2300      	movs	r3, #0
 8003afc:	4d05      	ldr	r5, [pc, #20]	; (8003b14 <_sbrk_r+0x1c>)
 8003afe:	4604      	mov	r4, r0
 8003b00:	4608      	mov	r0, r1
 8003b02:	602b      	str	r3, [r5, #0]
 8003b04:	f7fd fb7c 	bl	8001200 <_sbrk>
 8003b08:	1c43      	adds	r3, r0, #1
 8003b0a:	d102      	bne.n	8003b12 <_sbrk_r+0x1a>
 8003b0c:	682b      	ldr	r3, [r5, #0]
 8003b0e:	b103      	cbz	r3, 8003b12 <_sbrk_r+0x1a>
 8003b10:	6023      	str	r3, [r4, #0]
 8003b12:	bd38      	pop	{r3, r4, r5, pc}
 8003b14:	2000020c 	.word	0x2000020c

08003b18 <__malloc_lock>:
 8003b18:	4801      	ldr	r0, [pc, #4]	; (8003b20 <__malloc_lock+0x8>)
 8003b1a:	f000 b811 	b.w	8003b40 <__retarget_lock_acquire_recursive>
 8003b1e:	bf00      	nop
 8003b20:	20000210 	.word	0x20000210

08003b24 <__malloc_unlock>:
 8003b24:	4801      	ldr	r0, [pc, #4]	; (8003b2c <__malloc_unlock+0x8>)
 8003b26:	f000 b80c 	b.w	8003b42 <__retarget_lock_release_recursive>
 8003b2a:	bf00      	nop
 8003b2c:	20000210 	.word	0x20000210

08003b30 <_malloc_usable_size_r>:
 8003b30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b34:	1f18      	subs	r0, r3, #4
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	bfbc      	itt	lt
 8003b3a:	580b      	ldrlt	r3, [r1, r0]
 8003b3c:	18c0      	addlt	r0, r0, r3
 8003b3e:	4770      	bx	lr

08003b40 <__retarget_lock_acquire_recursive>:
 8003b40:	4770      	bx	lr

08003b42 <__retarget_lock_release_recursive>:
 8003b42:	4770      	bx	lr

08003b44 <_init>:
 8003b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b46:	bf00      	nop
 8003b48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003b4a:	bc08      	pop	{r3}
 8003b4c:	469e      	mov	lr, r3
 8003b4e:	4770      	bx	lr

08003b50 <_fini>:
 8003b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b52:	bf00      	nop
 8003b54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003b56:	bc08      	pop	{r3}
 8003b58:	469e      	mov	lr, r3
 8003b5a:	4770      	bx	lr
